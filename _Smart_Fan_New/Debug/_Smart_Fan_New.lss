
_Smart_Fan_New.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00004d0c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000134  00800060  00004d0c  00004da0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000008  00800194  00800194  00004ed4  2**0
                  ALLOC
  3 .stab         000022b0  00000000  00000000  00004ed4  2**2
                  CONTENTS, READONLY, DEBUGGING
  4 .stabstr      00000e10  00000000  00000000  00007184  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_aranges 000001c0  00000000  00000000  00007f94  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_pubnames 0000020e  00000000  00000000  00008154  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_info   00003169  00000000  00000000  00008362  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_abbrev 0000156c  00000000  00000000  0000b4cb  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_line   000014b5  00000000  00000000  0000ca37  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_frame  000001e0  00000000  00000000  0000deec  2**2
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_str    0000035b  00000000  00000000  0000e0cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_loc    00002280  00000000  00000000  0000e427  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_ranges 00000080  00000000  00000000  000106a7  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 fd 19 	jmp	0x33fa	; 0x33fa <__vector_1>
       8:	0c 94 2a 1a 	jmp	0x3454	; 0x3454 <__vector_2>
       c:	0c 94 57 1a 	jmp	0x34ae	; 0x34ae <__vector_3>
      10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
      50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	ec e0       	ldi	r30, 0x0C	; 12
      68:	fd e4       	ldi	r31, 0x4D	; 77
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a4 39       	cpi	r26, 0x94	; 148
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
      76:	11 e0       	ldi	r17, 0x01	; 1
      78:	a4 e9       	ldi	r26, 0x94	; 148
      7a:	b1 e0       	ldi	r27, 0x01	; 1
      7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
      7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
      80:	ac 39       	cpi	r26, 0x9C	; 156
      82:	b1 07       	cpc	r27, r17
      84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
      86:	0e 94 94 24 	call	0x4928	; 0x4928 <main>
      8a:	0c 94 84 26 	jmp	0x4d08	; 0x4d08 <_exit>

0000008e <__bad_interrupt>:
      8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <__muldi3>:
      92:	a0 e3       	ldi	r26, 0x30	; 48
      94:	b0 e0       	ldi	r27, 0x00	; 0
      96:	ef e4       	ldi	r30, 0x4F	; 79
      98:	f0 e0       	ldi	r31, 0x00	; 0
      9a:	0c 94 4d 26 	jmp	0x4c9a	; 0x4c9a <__prologue_saves__>
      9e:	a8 e0       	ldi	r26, 0x08	; 8
      a0:	4e 01       	movw	r8, r28
      a2:	08 94       	sec
      a4:	81 1c       	adc	r8, r1
      a6:	91 1c       	adc	r9, r1
      a8:	f4 01       	movw	r30, r8
      aa:	ba 2f       	mov	r27, r26
      ac:	11 92       	st	Z+, r1
      ae:	ba 95       	dec	r27
      b0:	e9 f7       	brne	.-6      	; 0xac <__muldi3+0x1a>
      b2:	29 83       	std	Y+1, r18	; 0x01
      b4:	3a 83       	std	Y+2, r19	; 0x02
      b6:	4b 83       	std	Y+3, r20	; 0x03
      b8:	5c 83       	std	Y+4, r21	; 0x04
      ba:	6d 83       	std	Y+5, r22	; 0x05
      bc:	7e 83       	std	Y+6, r23	; 0x06
      be:	8f 83       	std	Y+7, r24	; 0x07
      c0:	98 87       	std	Y+8, r25	; 0x08
      c2:	ce 01       	movw	r24, r28
      c4:	09 96       	adiw	r24, 0x09	; 9
      c6:	fc 01       	movw	r30, r24
      c8:	11 92       	st	Z+, r1
      ca:	aa 95       	dec	r26
      cc:	e9 f7       	brne	.-6      	; 0xc8 <__muldi3+0x36>
      ce:	a9 86       	std	Y+9, r10	; 0x09
      d0:	ba 86       	std	Y+10, r11	; 0x0a
      d2:	cb 86       	std	Y+11, r12	; 0x0b
      d4:	dc 86       	std	Y+12, r13	; 0x0c
      d6:	ed 86       	std	Y+13, r14	; 0x0d
      d8:	fe 86       	std	Y+14, r15	; 0x0e
      da:	0f 87       	std	Y+15, r16	; 0x0f
      dc:	18 8b       	std	Y+16, r17	; 0x10
      de:	29 81       	ldd	r18, Y+1	; 0x01
      e0:	3a 81       	ldd	r19, Y+2	; 0x02
      e2:	4b 81       	ldd	r20, Y+3	; 0x03
      e4:	5c 81       	ldd	r21, Y+4	; 0x04
      e6:	2d a7       	std	Y+45, r18	; 0x2d
      e8:	3e a7       	std	Y+46, r19	; 0x2e
      ea:	4f a7       	std	Y+47, r20	; 0x2f
      ec:	58 ab       	std	Y+48, r21	; 0x30
      ee:	79 01       	movw	r14, r18
      f0:	8a 01       	movw	r16, r20
      f2:	8f ef       	ldi	r24, 0xFF	; 255
      f4:	9f ef       	ldi	r25, 0xFF	; 255
      f6:	a0 e0       	ldi	r26, 0x00	; 0
      f8:	b0 e0       	ldi	r27, 0x00	; 0
      fa:	e8 22       	and	r14, r24
      fc:	f9 22       	and	r15, r25
      fe:	0a 23       	and	r16, r26
     100:	1b 23       	and	r17, r27
     102:	1a 01       	movw	r2, r20
     104:	44 24       	eor	r4, r4
     106:	55 24       	eor	r5, r5
     108:	29 85       	ldd	r18, Y+9	; 0x09
     10a:	3a 85       	ldd	r19, Y+10	; 0x0a
     10c:	4b 85       	ldd	r20, Y+11	; 0x0b
     10e:	5c 85       	ldd	r21, Y+12	; 0x0c
     110:	29 a7       	std	Y+41, r18	; 0x29
     112:	3a a7       	std	Y+42, r19	; 0x2a
     114:	4b a7       	std	Y+43, r20	; 0x2b
     116:	5c a7       	std	Y+44, r21	; 0x2c
     118:	59 01       	movw	r10, r18
     11a:	6a 01       	movw	r12, r20
     11c:	a8 22       	and	r10, r24
     11e:	b9 22       	and	r11, r25
     120:	ca 22       	and	r12, r26
     122:	db 22       	and	r13, r27
     124:	3a 01       	movw	r6, r20
     126:	88 24       	eor	r8, r8
     128:	99 24       	eor	r9, r9
     12a:	c6 01       	movw	r24, r12
     12c:	b5 01       	movw	r22, r10
     12e:	a8 01       	movw	r20, r16
     130:	97 01       	movw	r18, r14
     132:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     136:	6d a3       	std	Y+37, r22	; 0x25
     138:	7e a3       	std	Y+38, r23	; 0x26
     13a:	8f a3       	std	Y+39, r24	; 0x27
     13c:	98 a7       	std	Y+40, r25	; 0x28
     13e:	c4 01       	movw	r24, r8
     140:	b3 01       	movw	r22, r6
     142:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     146:	69 a3       	std	Y+33, r22	; 0x21
     148:	7a a3       	std	Y+34, r23	; 0x22
     14a:	8b a3       	std	Y+35, r24	; 0x23
     14c:	9c a3       	std	Y+36, r25	; 0x24
     14e:	c6 01       	movw	r24, r12
     150:	b5 01       	movw	r22, r10
     152:	a2 01       	movw	r20, r4
     154:	91 01       	movw	r18, r2
     156:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     15a:	7b 01       	movw	r14, r22
     15c:	8c 01       	movw	r16, r24
     15e:	c4 01       	movw	r24, r8
     160:	b3 01       	movw	r22, r6
     162:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     166:	5b 01       	movw	r10, r22
     168:	6c 01       	movw	r12, r24
     16a:	89 a1       	ldd	r24, Y+33	; 0x21
     16c:	9a a1       	ldd	r25, Y+34	; 0x22
     16e:	ab a1       	ldd	r26, Y+35	; 0x23
     170:	bc a1       	ldd	r27, Y+36	; 0x24
     172:	8e 0d       	add	r24, r14
     174:	9f 1d       	adc	r25, r15
     176:	a0 1f       	adc	r26, r16
     178:	b1 1f       	adc	r27, r17
     17a:	89 a3       	std	Y+33, r24	; 0x21
     17c:	9a a3       	std	Y+34, r25	; 0x22
     17e:	ab a3       	std	Y+35, r26	; 0x23
     180:	bc a3       	std	Y+36, r27	; 0x24
     182:	2d a1       	ldd	r18, Y+37	; 0x25
     184:	3e a1       	ldd	r19, Y+38	; 0x26
     186:	4f a1       	ldd	r20, Y+39	; 0x27
     188:	58 a5       	ldd	r21, Y+40	; 0x28
     18a:	ca 01       	movw	r24, r20
     18c:	aa 27       	eor	r26, r26
     18e:	bb 27       	eor	r27, r27
     190:	29 a1       	ldd	r18, Y+33	; 0x21
     192:	3a a1       	ldd	r19, Y+34	; 0x22
     194:	4b a1       	ldd	r20, Y+35	; 0x23
     196:	5c a1       	ldd	r21, Y+36	; 0x24
     198:	28 0f       	add	r18, r24
     19a:	39 1f       	adc	r19, r25
     19c:	4a 1f       	adc	r20, r26
     19e:	5b 1f       	adc	r21, r27
     1a0:	29 a3       	std	Y+33, r18	; 0x21
     1a2:	3a a3       	std	Y+34, r19	; 0x22
     1a4:	4b a3       	std	Y+35, r20	; 0x23
     1a6:	5c a3       	std	Y+36, r21	; 0x24
     1a8:	2e 15       	cp	r18, r14
     1aa:	3f 05       	cpc	r19, r15
     1ac:	40 07       	cpc	r20, r16
     1ae:	51 07       	cpc	r21, r17
     1b0:	40 f4       	brcc	.+16     	; 0x1c2 <__muldi3+0x130>
     1b2:	80 e0       	ldi	r24, 0x00	; 0
     1b4:	90 e0       	ldi	r25, 0x00	; 0
     1b6:	a1 e0       	ldi	r26, 0x01	; 1
     1b8:	b0 e0       	ldi	r27, 0x00	; 0
     1ba:	a8 0e       	add	r10, r24
     1bc:	b9 1e       	adc	r11, r25
     1be:	ca 1e       	adc	r12, r26
     1c0:	db 1e       	adc	r13, r27
     1c2:	89 a1       	ldd	r24, Y+33	; 0x21
     1c4:	9a a1       	ldd	r25, Y+34	; 0x22
     1c6:	ab a1       	ldd	r26, Y+35	; 0x23
     1c8:	bc a1       	ldd	r27, Y+36	; 0x24
     1ca:	9d 01       	movw	r18, r26
     1cc:	44 27       	eor	r20, r20
     1ce:	55 27       	eor	r21, r21
     1d0:	2a 0d       	add	r18, r10
     1d2:	3b 1d       	adc	r19, r11
     1d4:	4c 1d       	adc	r20, r12
     1d6:	5d 1d       	adc	r21, r13
     1d8:	2d 8f       	std	Y+29, r18	; 0x1d
     1da:	3e 8f       	std	Y+30, r19	; 0x1e
     1dc:	4f 8f       	std	Y+31, r20	; 0x1f
     1de:	58 a3       	std	Y+32, r21	; 0x20
     1e0:	6c 01       	movw	r12, r24
     1e2:	bb 24       	eor	r11, r11
     1e4:	aa 24       	eor	r10, r10
     1e6:	8d a1       	ldd	r24, Y+37	; 0x25
     1e8:	9e a1       	ldd	r25, Y+38	; 0x26
     1ea:	af a1       	ldd	r26, Y+39	; 0x27
     1ec:	b8 a5       	ldd	r27, Y+40	; 0x28
     1ee:	a0 70       	andi	r26, 0x00	; 0
     1f0:	b0 70       	andi	r27, 0x00	; 0
     1f2:	a8 0e       	add	r10, r24
     1f4:	b9 1e       	adc	r11, r25
     1f6:	ca 1e       	adc	r12, r26
     1f8:	db 1e       	adc	r13, r27
     1fa:	a9 8e       	std	Y+25, r10	; 0x19
     1fc:	ba 8e       	std	Y+26, r11	; 0x1a
     1fe:	cb 8e       	std	Y+27, r12	; 0x1b
     200:	dc 8e       	std	Y+28, r13	; 0x1c
     202:	9a 8c       	ldd	r9, Y+26	; 0x1a
     204:	8b 8c       	ldd	r8, Y+27	; 0x1b
     206:	7c 8c       	ldd	r7, Y+28	; 0x1c
     208:	9e 8d       	ldd	r25, Y+30	; 0x1e
     20a:	6f 8d       	ldd	r22, Y+31	; 0x1f
     20c:	78 a1       	ldd	r23, Y+32	; 0x20
     20e:	fe 01       	movw	r30, r28
     210:	71 96       	adiw	r30, 0x11	; 17
     212:	88 e0       	ldi	r24, 0x08	; 8
     214:	df 01       	movw	r26, r30
     216:	1d 92       	st	X+, r1
     218:	8a 95       	dec	r24
     21a:	e9 f7       	brne	.-6      	; 0x216 <__muldi3+0x184>
     21c:	2d 8b       	std	Y+21, r18	; 0x15
     21e:	9e 8b       	std	Y+22, r25	; 0x16
     220:	6f 8b       	std	Y+23, r22	; 0x17
     222:	78 8f       	std	Y+24, r23	; 0x18
     224:	2d 85       	ldd	r18, Y+13	; 0x0d
     226:	3e 85       	ldd	r19, Y+14	; 0x0e
     228:	4f 85       	ldd	r20, Y+15	; 0x0f
     22a:	58 89       	ldd	r21, Y+16	; 0x10
     22c:	6d a5       	ldd	r22, Y+45	; 0x2d
     22e:	7e a5       	ldd	r23, Y+46	; 0x2e
     230:	8f a5       	ldd	r24, Y+47	; 0x2f
     232:	98 a9       	ldd	r25, Y+48	; 0x30
     234:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     238:	7b 01       	movw	r14, r22
     23a:	8c 01       	movw	r16, r24
     23c:	2d 81       	ldd	r18, Y+5	; 0x05
     23e:	3e 81       	ldd	r19, Y+6	; 0x06
     240:	4f 81       	ldd	r20, Y+7	; 0x07
     242:	58 85       	ldd	r21, Y+8	; 0x08
     244:	69 a5       	ldd	r22, Y+41	; 0x29
     246:	7a a5       	ldd	r23, Y+42	; 0x2a
     248:	8b a5       	ldd	r24, Y+43	; 0x2b
     24a:	9c a5       	ldd	r25, Y+44	; 0x2c
     24c:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     250:	e6 0e       	add	r14, r22
     252:	f7 1e       	adc	r15, r23
     254:	08 1f       	adc	r16, r24
     256:	19 1f       	adc	r17, r25
     258:	6d 89       	ldd	r22, Y+21	; 0x15
     25a:	7e 89       	ldd	r23, Y+22	; 0x16
     25c:	8f 89       	ldd	r24, Y+23	; 0x17
     25e:	98 8d       	ldd	r25, Y+24	; 0x18
     260:	6e 0d       	add	r22, r14
     262:	7f 1d       	adc	r23, r15
     264:	80 1f       	adc	r24, r16
     266:	91 1f       	adc	r25, r17
     268:	6d 8b       	std	Y+21, r22	; 0x15
     26a:	7e 8b       	std	Y+22, r23	; 0x16
     26c:	8f 8b       	std	Y+23, r24	; 0x17
     26e:	98 8f       	std	Y+24, r25	; 0x18
     270:	ee 89       	ldd	r30, Y+22	; 0x16
     272:	2a 2d       	mov	r18, r10
     274:	39 2d       	mov	r19, r9
     276:	48 2d       	mov	r20, r8
     278:	57 2d       	mov	r21, r7
     27a:	7e 2f       	mov	r23, r30
     27c:	8f 89       	ldd	r24, Y+23	; 0x17
     27e:	98 8d       	ldd	r25, Y+24	; 0x18
     280:	e0 96       	adiw	r28, 0x30	; 48
     282:	e2 e1       	ldi	r30, 0x12	; 18
     284:	0c 94 69 26 	jmp	0x4cd2	; 0x4cd2 <__epilogue_restores__>

00000288 <__fixunssfsi>:
     288:	ef 92       	push	r14
     28a:	ff 92       	push	r15
     28c:	0f 93       	push	r16
     28e:	1f 93       	push	r17
     290:	7b 01       	movw	r14, r22
     292:	8c 01       	movw	r16, r24
     294:	20 e0       	ldi	r18, 0x00	; 0
     296:	30 e0       	ldi	r19, 0x00	; 0
     298:	40 e0       	ldi	r20, 0x00	; 0
     29a:	5f e4       	ldi	r21, 0x4F	; 79
     29c:	0e 94 d5 11 	call	0x23aa	; 0x23aa <__gesf2>
     2a0:	88 23       	and	r24, r24
     2a2:	8c f0       	brlt	.+34     	; 0x2c6 <__fixunssfsi+0x3e>
     2a4:	c8 01       	movw	r24, r16
     2a6:	b7 01       	movw	r22, r14
     2a8:	20 e0       	ldi	r18, 0x00	; 0
     2aa:	30 e0       	ldi	r19, 0x00	; 0
     2ac:	40 e0       	ldi	r20, 0x00	; 0
     2ae:	5f e4       	ldi	r21, 0x4F	; 79
     2b0:	0e 94 a1 0f 	call	0x1f42	; 0x1f42 <__subsf3>
     2b4:	0e 94 35 12 	call	0x246a	; 0x246a <__fixsfsi>
     2b8:	9b 01       	movw	r18, r22
     2ba:	ac 01       	movw	r20, r24
     2bc:	20 50       	subi	r18, 0x00	; 0
     2be:	30 40       	sbci	r19, 0x00	; 0
     2c0:	40 40       	sbci	r20, 0x00	; 0
     2c2:	50 48       	sbci	r21, 0x80	; 128
     2c4:	06 c0       	rjmp	.+12     	; 0x2d2 <__fixunssfsi+0x4a>
     2c6:	c8 01       	movw	r24, r16
     2c8:	b7 01       	movw	r22, r14
     2ca:	0e 94 35 12 	call	0x246a	; 0x246a <__fixsfsi>
     2ce:	9b 01       	movw	r18, r22
     2d0:	ac 01       	movw	r20, r24
     2d2:	b9 01       	movw	r22, r18
     2d4:	ca 01       	movw	r24, r20
     2d6:	1f 91       	pop	r17
     2d8:	0f 91       	pop	r16
     2da:	ff 90       	pop	r15
     2dc:	ef 90       	pop	r14
     2de:	08 95       	ret

000002e0 <__udivdi3>:
     2e0:	ae e5       	ldi	r26, 0x5E	; 94
     2e2:	b0 e0       	ldi	r27, 0x00	; 0
     2e4:	e6 e7       	ldi	r30, 0x76	; 118
     2e6:	f1 e0       	ldi	r31, 0x01	; 1
     2e8:	0c 94 4d 26 	jmp	0x4c9a	; 0x4c9a <__prologue_saves__>
     2ec:	a8 e0       	ldi	r26, 0x08	; 8
     2ee:	4e 01       	movw	r8, r28
     2f0:	08 94       	sec
     2f2:	81 1c       	adc	r8, r1
     2f4:	91 1c       	adc	r9, r1
     2f6:	f4 01       	movw	r30, r8
     2f8:	6a 2e       	mov	r6, r26
     2fa:	11 92       	st	Z+, r1
     2fc:	6a 94       	dec	r6
     2fe:	e9 f7       	brne	.-6      	; 0x2fa <__udivdi3+0x1a>
     300:	29 83       	std	Y+1, r18	; 0x01
     302:	3a 83       	std	Y+2, r19	; 0x02
     304:	4b 83       	std	Y+3, r20	; 0x03
     306:	5c 83       	std	Y+4, r21	; 0x04
     308:	6d 83       	std	Y+5, r22	; 0x05
     30a:	7e 83       	std	Y+6, r23	; 0x06
     30c:	8f 83       	std	Y+7, r24	; 0x07
     30e:	98 87       	std	Y+8, r25	; 0x08
     310:	ce 01       	movw	r24, r28
     312:	09 96       	adiw	r24, 0x09	; 9
     314:	fc 01       	movw	r30, r24
     316:	11 92       	st	Z+, r1
     318:	aa 95       	dec	r26
     31a:	e9 f7       	brne	.-6      	; 0x316 <__udivdi3+0x36>
     31c:	a9 86       	std	Y+9, r10	; 0x09
     31e:	ba 86       	std	Y+10, r11	; 0x0a
     320:	cb 86       	std	Y+11, r12	; 0x0b
     322:	dc 86       	std	Y+12, r13	; 0x0c
     324:	ed 86       	std	Y+13, r14	; 0x0d
     326:	fe 86       	std	Y+14, r15	; 0x0e
     328:	0f 87       	std	Y+15, r16	; 0x0f
     32a:	18 8b       	std	Y+16, r17	; 0x10
     32c:	29 84       	ldd	r2, Y+9	; 0x09
     32e:	3a 84       	ldd	r3, Y+10	; 0x0a
     330:	4b 84       	ldd	r4, Y+11	; 0x0b
     332:	5c 84       	ldd	r5, Y+12	; 0x0c
     334:	ed 84       	ldd	r14, Y+13	; 0x0d
     336:	fe 84       	ldd	r15, Y+14	; 0x0e
     338:	0f 85       	ldd	r16, Y+15	; 0x0f
     33a:	18 89       	ldd	r17, Y+16	; 0x10
     33c:	69 80       	ldd	r6, Y+1	; 0x01
     33e:	7a 80       	ldd	r7, Y+2	; 0x02
     340:	8b 80       	ldd	r8, Y+3	; 0x03
     342:	9c 80       	ldd	r9, Y+4	; 0x04
     344:	6d a6       	std	Y+45, r6	; 0x2d
     346:	7e a6       	std	Y+46, r7	; 0x2e
     348:	8f a6       	std	Y+47, r8	; 0x2f
     34a:	98 aa       	std	Y+48, r9	; 0x30
     34c:	6d 80       	ldd	r6, Y+5	; 0x05
     34e:	7e 80       	ldd	r7, Y+6	; 0x06
     350:	8f 80       	ldd	r8, Y+7	; 0x07
     352:	98 84       	ldd	r9, Y+8	; 0x08
     354:	e1 14       	cp	r14, r1
     356:	f1 04       	cpc	r15, r1
     358:	01 05       	cpc	r16, r1
     35a:	11 05       	cpc	r17, r1
     35c:	09 f0       	breq	.+2      	; 0x360 <__udivdi3+0x80>
     35e:	b3 c3       	rjmp	.+1894   	; 0xac6 <__stack+0x267>
     360:	62 14       	cp	r6, r2
     362:	73 04       	cpc	r7, r3
     364:	84 04       	cpc	r8, r4
     366:	95 04       	cpc	r9, r5
     368:	08 f0       	brcs	.+2      	; 0x36c <__udivdi3+0x8c>
     36a:	3d c1       	rjmp	.+634    	; 0x5e6 <__udivdi3+0x306>
     36c:	00 e0       	ldi	r16, 0x00	; 0
     36e:	20 16       	cp	r2, r16
     370:	00 e0       	ldi	r16, 0x00	; 0
     372:	30 06       	cpc	r3, r16
     374:	01 e0       	ldi	r16, 0x01	; 1
     376:	40 06       	cpc	r4, r16
     378:	00 e0       	ldi	r16, 0x00	; 0
     37a:	50 06       	cpc	r5, r16
     37c:	88 f4       	brcc	.+34     	; 0x3a0 <__udivdi3+0xc0>
     37e:	1f ef       	ldi	r17, 0xFF	; 255
     380:	21 16       	cp	r2, r17
     382:	31 04       	cpc	r3, r1
     384:	41 04       	cpc	r4, r1
     386:	51 04       	cpc	r5, r1
     388:	39 f0       	breq	.+14     	; 0x398 <__udivdi3+0xb8>
     38a:	30 f0       	brcs	.+12     	; 0x398 <__udivdi3+0xb8>
     38c:	48 e0       	ldi	r20, 0x08	; 8
     38e:	e4 2e       	mov	r14, r20
     390:	f1 2c       	mov	r15, r1
     392:	01 2d       	mov	r16, r1
     394:	11 2d       	mov	r17, r1
     396:	18 c0       	rjmp	.+48     	; 0x3c8 <__udivdi3+0xe8>
     398:	ee 24       	eor	r14, r14
     39a:	ff 24       	eor	r15, r15
     39c:	87 01       	movw	r16, r14
     39e:	14 c0       	rjmp	.+40     	; 0x3c8 <__udivdi3+0xe8>
     3a0:	20 e0       	ldi	r18, 0x00	; 0
     3a2:	22 16       	cp	r2, r18
     3a4:	20 e0       	ldi	r18, 0x00	; 0
     3a6:	32 06       	cpc	r3, r18
     3a8:	20 e0       	ldi	r18, 0x00	; 0
     3aa:	42 06       	cpc	r4, r18
     3ac:	21 e0       	ldi	r18, 0x01	; 1
     3ae:	52 06       	cpc	r5, r18
     3b0:	30 f0       	brcs	.+12     	; 0x3be <__udivdi3+0xde>
     3b2:	38 e1       	ldi	r19, 0x18	; 24
     3b4:	e3 2e       	mov	r14, r19
     3b6:	f1 2c       	mov	r15, r1
     3b8:	01 2d       	mov	r16, r1
     3ba:	11 2d       	mov	r17, r1
     3bc:	05 c0       	rjmp	.+10     	; 0x3c8 <__udivdi3+0xe8>
     3be:	20 e1       	ldi	r18, 0x10	; 16
     3c0:	e2 2e       	mov	r14, r18
     3c2:	f1 2c       	mov	r15, r1
     3c4:	01 2d       	mov	r16, r1
     3c6:	11 2d       	mov	r17, r1
     3c8:	d2 01       	movw	r26, r4
     3ca:	c1 01       	movw	r24, r2
     3cc:	0e 2c       	mov	r0, r14
     3ce:	04 c0       	rjmp	.+8      	; 0x3d8 <__udivdi3+0xf8>
     3d0:	b6 95       	lsr	r27
     3d2:	a7 95       	ror	r26
     3d4:	97 95       	ror	r25
     3d6:	87 95       	ror	r24
     3d8:	0a 94       	dec	r0
     3da:	d2 f7       	brpl	.-12     	; 0x3d0 <__udivdi3+0xf0>
     3dc:	8d 56       	subi	r24, 0x6D	; 109
     3de:	9f 4f       	sbci	r25, 0xFF	; 255
     3e0:	dc 01       	movw	r26, r24
     3e2:	2c 91       	ld	r18, X
     3e4:	80 e2       	ldi	r24, 0x20	; 32
     3e6:	90 e0       	ldi	r25, 0x00	; 0
     3e8:	a0 e0       	ldi	r26, 0x00	; 0
     3ea:	b0 e0       	ldi	r27, 0x00	; 0
     3ec:	8e 19       	sub	r24, r14
     3ee:	9f 09       	sbc	r25, r15
     3f0:	a0 0b       	sbc	r26, r16
     3f2:	b1 0b       	sbc	r27, r17
     3f4:	7c 01       	movw	r14, r24
     3f6:	8d 01       	movw	r16, r26
     3f8:	e2 1a       	sub	r14, r18
     3fa:	f1 08       	sbc	r15, r1
     3fc:	01 09       	sbc	r16, r1
     3fe:	11 09       	sbc	r17, r1
     400:	e1 14       	cp	r14, r1
     402:	f1 04       	cpc	r15, r1
     404:	01 05       	cpc	r16, r1
     406:	11 05       	cpc	r17, r1
     408:	a1 f1       	breq	.+104    	; 0x472 <__udivdi3+0x192>
     40a:	0e 2c       	mov	r0, r14
     40c:	04 c0       	rjmp	.+8      	; 0x416 <__udivdi3+0x136>
     40e:	22 0c       	add	r2, r2
     410:	33 1c       	adc	r3, r3
     412:	44 1c       	adc	r4, r4
     414:	55 1c       	adc	r5, r5
     416:	0a 94       	dec	r0
     418:	d2 f7       	brpl	.-12     	; 0x40e <__udivdi3+0x12e>
     41a:	a4 01       	movw	r20, r8
     41c:	93 01       	movw	r18, r6
     41e:	0e 2c       	mov	r0, r14
     420:	04 c0       	rjmp	.+8      	; 0x42a <__udivdi3+0x14a>
     422:	22 0f       	add	r18, r18
     424:	33 1f       	adc	r19, r19
     426:	44 1f       	adc	r20, r20
     428:	55 1f       	adc	r21, r21
     42a:	0a 94       	dec	r0
     42c:	d2 f7       	brpl	.-12     	; 0x422 <__udivdi3+0x142>
     42e:	80 e2       	ldi	r24, 0x20	; 32
     430:	90 e0       	ldi	r25, 0x00	; 0
     432:	8e 19       	sub	r24, r14
     434:	9f 09       	sbc	r25, r15
     436:	6d a4       	ldd	r6, Y+45	; 0x2d
     438:	7e a4       	ldd	r7, Y+46	; 0x2e
     43a:	8f a4       	ldd	r8, Y+47	; 0x2f
     43c:	98 a8       	ldd	r9, Y+48	; 0x30
     43e:	04 c0       	rjmp	.+8      	; 0x448 <__udivdi3+0x168>
     440:	96 94       	lsr	r9
     442:	87 94       	ror	r8
     444:	77 94       	ror	r7
     446:	67 94       	ror	r6
     448:	8a 95       	dec	r24
     44a:	d2 f7       	brpl	.-12     	; 0x440 <__udivdi3+0x160>
     44c:	62 2a       	or	r6, r18
     44e:	73 2a       	or	r7, r19
     450:	84 2a       	or	r8, r20
     452:	95 2a       	or	r9, r21
     454:	ad a4       	ldd	r10, Y+45	; 0x2d
     456:	be a4       	ldd	r11, Y+46	; 0x2e
     458:	cf a4       	ldd	r12, Y+47	; 0x2f
     45a:	d8 a8       	ldd	r13, Y+48	; 0x30
     45c:	04 c0       	rjmp	.+8      	; 0x466 <__udivdi3+0x186>
     45e:	aa 0c       	add	r10, r10
     460:	bb 1c       	adc	r11, r11
     462:	cc 1c       	adc	r12, r12
     464:	dd 1c       	adc	r13, r13
     466:	ea 94       	dec	r14
     468:	d2 f7       	brpl	.-12     	; 0x45e <__udivdi3+0x17e>
     46a:	ad a6       	std	Y+45, r10	; 0x2d
     46c:	be a6       	std	Y+46, r11	; 0x2e
     46e:	cf a6       	std	Y+47, r12	; 0x2f
     470:	d8 aa       	std	Y+48, r13	; 0x30
     472:	62 01       	movw	r12, r4
     474:	ee 24       	eor	r14, r14
     476:	ff 24       	eor	r15, r15
     478:	cd aa       	std	Y+53, r12	; 0x35
     47a:	de aa       	std	Y+54, r13	; 0x36
     47c:	ef aa       	std	Y+55, r14	; 0x37
     47e:	f8 ae       	std	Y+56, r15	; 0x38
     480:	92 01       	movw	r18, r4
     482:	81 01       	movw	r16, r2
     484:	20 70       	andi	r18, 0x00	; 0
     486:	30 70       	andi	r19, 0x00	; 0
     488:	09 af       	std	Y+57, r16	; 0x39
     48a:	1a af       	std	Y+58, r17	; 0x3a
     48c:	2b af       	std	Y+59, r18	; 0x3b
     48e:	3c af       	std	Y+60, r19	; 0x3c
     490:	c4 01       	movw	r24, r8
     492:	b3 01       	movw	r22, r6
     494:	a7 01       	movw	r20, r14
     496:	96 01       	movw	r18, r12
     498:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     49c:	7b 01       	movw	r14, r22
     49e:	8c 01       	movw	r16, r24
     4a0:	c4 01       	movw	r24, r8
     4a2:	b3 01       	movw	r22, r6
     4a4:	2d a9       	ldd	r18, Y+53	; 0x35
     4a6:	3e a9       	ldd	r19, Y+54	; 0x36
     4a8:	4f a9       	ldd	r20, Y+55	; 0x37
     4aa:	58 ad       	ldd	r21, Y+56	; 0x38
     4ac:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     4b0:	c9 01       	movw	r24, r18
     4b2:	da 01       	movw	r26, r20
     4b4:	3c 01       	movw	r6, r24
     4b6:	4d 01       	movw	r8, r26
     4b8:	c4 01       	movw	r24, r8
     4ba:	b3 01       	movw	r22, r6
     4bc:	29 ad       	ldd	r18, Y+57	; 0x39
     4be:	3a ad       	ldd	r19, Y+58	; 0x3a
     4c0:	4b ad       	ldd	r20, Y+59	; 0x3b
     4c2:	5c ad       	ldd	r21, Y+60	; 0x3c
     4c4:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     4c8:	9b 01       	movw	r18, r22
     4ca:	ac 01       	movw	r20, r24
     4cc:	87 01       	movw	r16, r14
     4ce:	ff 24       	eor	r15, r15
     4d0:	ee 24       	eor	r14, r14
     4d2:	ad a4       	ldd	r10, Y+45	; 0x2d
     4d4:	be a4       	ldd	r11, Y+46	; 0x2e
     4d6:	cf a4       	ldd	r12, Y+47	; 0x2f
     4d8:	d8 a8       	ldd	r13, Y+48	; 0x30
     4da:	c6 01       	movw	r24, r12
     4dc:	aa 27       	eor	r26, r26
     4de:	bb 27       	eor	r27, r27
     4e0:	57 01       	movw	r10, r14
     4e2:	68 01       	movw	r12, r16
     4e4:	a8 2a       	or	r10, r24
     4e6:	b9 2a       	or	r11, r25
     4e8:	ca 2a       	or	r12, r26
     4ea:	db 2a       	or	r13, r27
     4ec:	a2 16       	cp	r10, r18
     4ee:	b3 06       	cpc	r11, r19
     4f0:	c4 06       	cpc	r12, r20
     4f2:	d5 06       	cpc	r13, r21
     4f4:	e0 f4       	brcc	.+56     	; 0x52e <__udivdi3+0x24e>
     4f6:	08 94       	sec
     4f8:	61 08       	sbc	r6, r1
     4fa:	71 08       	sbc	r7, r1
     4fc:	81 08       	sbc	r8, r1
     4fe:	91 08       	sbc	r9, r1
     500:	a2 0c       	add	r10, r2
     502:	b3 1c       	adc	r11, r3
     504:	c4 1c       	adc	r12, r4
     506:	d5 1c       	adc	r13, r5
     508:	a2 14       	cp	r10, r2
     50a:	b3 04       	cpc	r11, r3
     50c:	c4 04       	cpc	r12, r4
     50e:	d5 04       	cpc	r13, r5
     510:	70 f0       	brcs	.+28     	; 0x52e <__udivdi3+0x24e>
     512:	a2 16       	cp	r10, r18
     514:	b3 06       	cpc	r11, r19
     516:	c4 06       	cpc	r12, r20
     518:	d5 06       	cpc	r13, r21
     51a:	48 f4       	brcc	.+18     	; 0x52e <__udivdi3+0x24e>
     51c:	08 94       	sec
     51e:	61 08       	sbc	r6, r1
     520:	71 08       	sbc	r7, r1
     522:	81 08       	sbc	r8, r1
     524:	91 08       	sbc	r9, r1
     526:	a2 0c       	add	r10, r2
     528:	b3 1c       	adc	r11, r3
     52a:	c4 1c       	adc	r12, r4
     52c:	d5 1c       	adc	r13, r5
     52e:	a2 1a       	sub	r10, r18
     530:	b3 0a       	sbc	r11, r19
     532:	c4 0a       	sbc	r12, r20
     534:	d5 0a       	sbc	r13, r21
     536:	c6 01       	movw	r24, r12
     538:	b5 01       	movw	r22, r10
     53a:	2d a9       	ldd	r18, Y+53	; 0x35
     53c:	3e a9       	ldd	r19, Y+54	; 0x36
     53e:	4f a9       	ldd	r20, Y+55	; 0x37
     540:	58 ad       	ldd	r21, Y+56	; 0x38
     542:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     546:	7b 01       	movw	r14, r22
     548:	8c 01       	movw	r16, r24
     54a:	c6 01       	movw	r24, r12
     54c:	b5 01       	movw	r22, r10
     54e:	2d a9       	ldd	r18, Y+53	; 0x35
     550:	3e a9       	ldd	r19, Y+54	; 0x36
     552:	4f a9       	ldd	r20, Y+55	; 0x37
     554:	58 ad       	ldd	r21, Y+56	; 0x38
     556:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     55a:	c9 01       	movw	r24, r18
     55c:	da 01       	movw	r26, r20
     55e:	5c 01       	movw	r10, r24
     560:	6d 01       	movw	r12, r26
     562:	c6 01       	movw	r24, r12
     564:	b5 01       	movw	r22, r10
     566:	29 ad       	ldd	r18, Y+57	; 0x39
     568:	3a ad       	ldd	r19, Y+58	; 0x3a
     56a:	4b ad       	ldd	r20, Y+59	; 0x3b
     56c:	5c ad       	ldd	r21, Y+60	; 0x3c
     56e:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     572:	9b 01       	movw	r18, r22
     574:	ac 01       	movw	r20, r24
     576:	87 01       	movw	r16, r14
     578:	ff 24       	eor	r15, r15
     57a:	ee 24       	eor	r14, r14
     57c:	8d a5       	ldd	r24, Y+45	; 0x2d
     57e:	9e a5       	ldd	r25, Y+46	; 0x2e
     580:	af a5       	ldd	r26, Y+47	; 0x2f
     582:	b8 a9       	ldd	r27, Y+48	; 0x30
     584:	a0 70       	andi	r26, 0x00	; 0
     586:	b0 70       	andi	r27, 0x00	; 0
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	e2 16       	cp	r14, r18
     592:	f3 06       	cpc	r15, r19
     594:	04 07       	cpc	r16, r20
     596:	15 07       	cpc	r17, r21
     598:	c0 f4       	brcc	.+48     	; 0x5ca <__udivdi3+0x2ea>
     59a:	08 94       	sec
     59c:	a1 08       	sbc	r10, r1
     59e:	b1 08       	sbc	r11, r1
     5a0:	c1 08       	sbc	r12, r1
     5a2:	d1 08       	sbc	r13, r1
     5a4:	e2 0c       	add	r14, r2
     5a6:	f3 1c       	adc	r15, r3
     5a8:	04 1d       	adc	r16, r4
     5aa:	15 1d       	adc	r17, r5
     5ac:	e2 14       	cp	r14, r2
     5ae:	f3 04       	cpc	r15, r3
     5b0:	04 05       	cpc	r16, r4
     5b2:	15 05       	cpc	r17, r5
     5b4:	50 f0       	brcs	.+20     	; 0x5ca <__udivdi3+0x2ea>
     5b6:	e2 16       	cp	r14, r18
     5b8:	f3 06       	cpc	r15, r19
     5ba:	04 07       	cpc	r16, r20
     5bc:	15 07       	cpc	r17, r21
     5be:	28 f4       	brcc	.+10     	; 0x5ca <__udivdi3+0x2ea>
     5c0:	08 94       	sec
     5c2:	a1 08       	sbc	r10, r1
     5c4:	b1 08       	sbc	r11, r1
     5c6:	c1 08       	sbc	r12, r1
     5c8:	d1 08       	sbc	r13, r1
     5ca:	d3 01       	movw	r26, r6
     5cc:	99 27       	eor	r25, r25
     5ce:	88 27       	eor	r24, r24
     5d0:	86 01       	movw	r16, r12
     5d2:	75 01       	movw	r14, r10
     5d4:	e8 2a       	or	r14, r24
     5d6:	f9 2a       	or	r15, r25
     5d8:	0a 2b       	or	r16, r26
     5da:	1b 2b       	or	r17, r27
     5dc:	e9 aa       	std	Y+49, r14	; 0x31
     5de:	fa aa       	std	Y+50, r15	; 0x32
     5e0:	0b ab       	std	Y+51, r16	; 0x33
     5e2:	1c ab       	std	Y+52, r17	; 0x34
     5e4:	cf c4       	rjmp	.+2462   	; 0xf84 <__stack+0x725>
     5e6:	21 14       	cp	r2, r1
     5e8:	31 04       	cpc	r3, r1
     5ea:	41 04       	cpc	r4, r1
     5ec:	51 04       	cpc	r5, r1
     5ee:	71 f4       	brne	.+28     	; 0x60c <__udivdi3+0x32c>
     5f0:	61 e0       	ldi	r22, 0x01	; 1
     5f2:	70 e0       	ldi	r23, 0x00	; 0
     5f4:	80 e0       	ldi	r24, 0x00	; 0
     5f6:	90 e0       	ldi	r25, 0x00	; 0
     5f8:	20 e0       	ldi	r18, 0x00	; 0
     5fa:	30 e0       	ldi	r19, 0x00	; 0
     5fc:	40 e0       	ldi	r20, 0x00	; 0
     5fe:	50 e0       	ldi	r21, 0x00	; 0
     600:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     604:	c9 01       	movw	r24, r18
     606:	da 01       	movw	r26, r20
     608:	1c 01       	movw	r2, r24
     60a:	2d 01       	movw	r4, r26
     60c:	00 e0       	ldi	r16, 0x00	; 0
     60e:	20 16       	cp	r2, r16
     610:	00 e0       	ldi	r16, 0x00	; 0
     612:	30 06       	cpc	r3, r16
     614:	01 e0       	ldi	r16, 0x01	; 1
     616:	40 06       	cpc	r4, r16
     618:	00 e0       	ldi	r16, 0x00	; 0
     61a:	50 06       	cpc	r5, r16
     61c:	88 f4       	brcc	.+34     	; 0x640 <__udivdi3+0x360>
     61e:	1f ef       	ldi	r17, 0xFF	; 255
     620:	21 16       	cp	r2, r17
     622:	31 04       	cpc	r3, r1
     624:	41 04       	cpc	r4, r1
     626:	51 04       	cpc	r5, r1
     628:	31 f0       	breq	.+12     	; 0x636 <__udivdi3+0x356>
     62a:	28 f0       	brcs	.+10     	; 0x636 <__udivdi3+0x356>
     62c:	48 e0       	ldi	r20, 0x08	; 8
     62e:	50 e0       	ldi	r21, 0x00	; 0
     630:	60 e0       	ldi	r22, 0x00	; 0
     632:	70 e0       	ldi	r23, 0x00	; 0
     634:	17 c0       	rjmp	.+46     	; 0x664 <__udivdi3+0x384>
     636:	40 e0       	ldi	r20, 0x00	; 0
     638:	50 e0       	ldi	r21, 0x00	; 0
     63a:	60 e0       	ldi	r22, 0x00	; 0
     63c:	70 e0       	ldi	r23, 0x00	; 0
     63e:	12 c0       	rjmp	.+36     	; 0x664 <__udivdi3+0x384>
     640:	20 e0       	ldi	r18, 0x00	; 0
     642:	22 16       	cp	r2, r18
     644:	20 e0       	ldi	r18, 0x00	; 0
     646:	32 06       	cpc	r3, r18
     648:	20 e0       	ldi	r18, 0x00	; 0
     64a:	42 06       	cpc	r4, r18
     64c:	21 e0       	ldi	r18, 0x01	; 1
     64e:	52 06       	cpc	r5, r18
     650:	28 f0       	brcs	.+10     	; 0x65c <__udivdi3+0x37c>
     652:	48 e1       	ldi	r20, 0x18	; 24
     654:	50 e0       	ldi	r21, 0x00	; 0
     656:	60 e0       	ldi	r22, 0x00	; 0
     658:	70 e0       	ldi	r23, 0x00	; 0
     65a:	04 c0       	rjmp	.+8      	; 0x664 <__udivdi3+0x384>
     65c:	40 e1       	ldi	r20, 0x10	; 16
     65e:	50 e0       	ldi	r21, 0x00	; 0
     660:	60 e0       	ldi	r22, 0x00	; 0
     662:	70 e0       	ldi	r23, 0x00	; 0
     664:	d2 01       	movw	r26, r4
     666:	c1 01       	movw	r24, r2
     668:	04 2e       	mov	r0, r20
     66a:	04 c0       	rjmp	.+8      	; 0x674 <__udivdi3+0x394>
     66c:	b6 95       	lsr	r27
     66e:	a7 95       	ror	r26
     670:	97 95       	ror	r25
     672:	87 95       	ror	r24
     674:	0a 94       	dec	r0
     676:	d2 f7       	brpl	.-12     	; 0x66c <__udivdi3+0x38c>
     678:	8d 56       	subi	r24, 0x6D	; 109
     67a:	9f 4f       	sbci	r25, 0xFF	; 255
     67c:	dc 01       	movw	r26, r24
     67e:	2c 91       	ld	r18, X
     680:	e0 e2       	ldi	r30, 0x20	; 32
     682:	ee 2e       	mov	r14, r30
     684:	f1 2c       	mov	r15, r1
     686:	01 2d       	mov	r16, r1
     688:	11 2d       	mov	r17, r1
     68a:	d8 01       	movw	r26, r16
     68c:	c7 01       	movw	r24, r14
     68e:	84 1b       	sub	r24, r20
     690:	95 0b       	sbc	r25, r21
     692:	a6 0b       	sbc	r26, r22
     694:	b7 0b       	sbc	r27, r23
     696:	82 1b       	sub	r24, r18
     698:	91 09       	sbc	r25, r1
     69a:	a1 09       	sbc	r26, r1
     69c:	b1 09       	sbc	r27, r1
     69e:	00 97       	sbiw	r24, 0x00	; 0
     6a0:	a1 05       	cpc	r26, r1
     6a2:	b1 05       	cpc	r27, r1
     6a4:	61 f4       	brne	.+24     	; 0x6be <__udivdi3+0x3de>
     6a6:	64 01       	movw	r12, r8
     6a8:	53 01       	movw	r10, r6
     6aa:	a2 18       	sub	r10, r2
     6ac:	b3 08       	sbc	r11, r3
     6ae:	c4 08       	sbc	r12, r4
     6b0:	d5 08       	sbc	r13, r5
     6b2:	31 e0       	ldi	r19, 0x01	; 1
     6b4:	63 2e       	mov	r6, r19
     6b6:	71 2c       	mov	r7, r1
     6b8:	81 2c       	mov	r8, r1
     6ba:	91 2c       	mov	r9, r1
     6bc:	1e c1       	rjmp	.+572    	; 0x8fa <__stack+0x9b>
     6be:	6f 96       	adiw	r28, 0x1f	; 31
     6c0:	8f af       	std	Y+63, r24	; 0x3f
     6c2:	6f 97       	sbiw	r28, 0x1f	; 31
     6c4:	08 2e       	mov	r0, r24
     6c6:	04 c0       	rjmp	.+8      	; 0x6d0 <__udivdi3+0x3f0>
     6c8:	22 0c       	add	r2, r2
     6ca:	33 1c       	adc	r3, r3
     6cc:	44 1c       	adc	r4, r4
     6ce:	55 1c       	adc	r5, r5
     6d0:	0a 94       	dec	r0
     6d2:	d2 f7       	brpl	.-12     	; 0x6c8 <__udivdi3+0x3e8>
     6d4:	ee 2d       	mov	r30, r14
     6d6:	e8 1b       	sub	r30, r24
     6d8:	64 01       	movw	r12, r8
     6da:	53 01       	movw	r10, r6
     6dc:	0e 2e       	mov	r0, r30
     6de:	04 c0       	rjmp	.+8      	; 0x6e8 <__udivdi3+0x408>
     6e0:	d6 94       	lsr	r13
     6e2:	c7 94       	ror	r12
     6e4:	b7 94       	ror	r11
     6e6:	a7 94       	ror	r10
     6e8:	0a 94       	dec	r0
     6ea:	d2 f7       	brpl	.-12     	; 0x6e0 <__udivdi3+0x400>
     6ec:	a4 01       	movw	r20, r8
     6ee:	93 01       	movw	r18, r6
     6f0:	6f 96       	adiw	r28, 0x1f	; 31
     6f2:	0f ac       	ldd	r0, Y+63	; 0x3f
     6f4:	6f 97       	sbiw	r28, 0x1f	; 31
     6f6:	04 c0       	rjmp	.+8      	; 0x700 <__udivdi3+0x420>
     6f8:	22 0f       	add	r18, r18
     6fa:	33 1f       	adc	r19, r19
     6fc:	44 1f       	adc	r20, r20
     6fe:	55 1f       	adc	r21, r21
     700:	0a 94       	dec	r0
     702:	d2 f7       	brpl	.-12     	; 0x6f8 <__udivdi3+0x418>
     704:	6d a4       	ldd	r6, Y+45	; 0x2d
     706:	7e a4       	ldd	r7, Y+46	; 0x2e
     708:	8f a4       	ldd	r8, Y+47	; 0x2f
     70a:	98 a8       	ldd	r9, Y+48	; 0x30
     70c:	0e 2e       	mov	r0, r30
     70e:	04 c0       	rjmp	.+8      	; 0x718 <__udivdi3+0x438>
     710:	96 94       	lsr	r9
     712:	87 94       	ror	r8
     714:	77 94       	ror	r7
     716:	67 94       	ror	r6
     718:	0a 94       	dec	r0
     71a:	d2 f7       	brpl	.-12     	; 0x710 <__udivdi3+0x430>
     71c:	84 01       	movw	r16, r8
     71e:	73 01       	movw	r14, r6
     720:	e2 2a       	or	r14, r18
     722:	f3 2a       	or	r15, r19
     724:	04 2b       	or	r16, r20
     726:	15 2b       	or	r17, r21
     728:	e9 a6       	std	Y+41, r14	; 0x29
     72a:	fa a6       	std	Y+42, r15	; 0x2a
     72c:	0b a7       	std	Y+43, r16	; 0x2b
     72e:	1c a7       	std	Y+44, r17	; 0x2c
     730:	32 01       	movw	r6, r4
     732:	88 24       	eor	r8, r8
     734:	99 24       	eor	r9, r9
     736:	92 01       	movw	r18, r4
     738:	81 01       	movw	r16, r2
     73a:	20 70       	andi	r18, 0x00	; 0
     73c:	30 70       	andi	r19, 0x00	; 0
     73e:	21 96       	adiw	r28, 0x01	; 1
     740:	0c af       	std	Y+60, r16	; 0x3c
     742:	1d af       	std	Y+61, r17	; 0x3d
     744:	2e af       	std	Y+62, r18	; 0x3e
     746:	3f af       	std	Y+63, r19	; 0x3f
     748:	21 97       	sbiw	r28, 0x01	; 1
     74a:	c6 01       	movw	r24, r12
     74c:	b5 01       	movw	r22, r10
     74e:	a4 01       	movw	r20, r8
     750:	93 01       	movw	r18, r6
     752:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     756:	7b 01       	movw	r14, r22
     758:	8c 01       	movw	r16, r24
     75a:	c6 01       	movw	r24, r12
     75c:	b5 01       	movw	r22, r10
     75e:	a4 01       	movw	r20, r8
     760:	93 01       	movw	r18, r6
     762:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     766:	c9 01       	movw	r24, r18
     768:	da 01       	movw	r26, r20
     76a:	25 96       	adiw	r28, 0x05	; 5
     76c:	8c af       	std	Y+60, r24	; 0x3c
     76e:	9d af       	std	Y+61, r25	; 0x3d
     770:	ae af       	std	Y+62, r26	; 0x3e
     772:	bf af       	std	Y+63, r27	; 0x3f
     774:	25 97       	sbiw	r28, 0x05	; 5
     776:	bc 01       	movw	r22, r24
     778:	cd 01       	movw	r24, r26
     77a:	21 96       	adiw	r28, 0x01	; 1
     77c:	2c ad       	ldd	r18, Y+60	; 0x3c
     77e:	3d ad       	ldd	r19, Y+61	; 0x3d
     780:	4e ad       	ldd	r20, Y+62	; 0x3e
     782:	5f ad       	ldd	r21, Y+63	; 0x3f
     784:	21 97       	sbiw	r28, 0x01	; 1
     786:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     78a:	9b 01       	movw	r18, r22
     78c:	ac 01       	movw	r20, r24
     78e:	87 01       	movw	r16, r14
     790:	ff 24       	eor	r15, r15
     792:	ee 24       	eor	r14, r14
     794:	a9 a4       	ldd	r10, Y+41	; 0x29
     796:	ba a4       	ldd	r11, Y+42	; 0x2a
     798:	cb a4       	ldd	r12, Y+43	; 0x2b
     79a:	dc a4       	ldd	r13, Y+44	; 0x2c
     79c:	c6 01       	movw	r24, r12
     79e:	aa 27       	eor	r26, r26
     7a0:	bb 27       	eor	r27, r27
     7a2:	5c 01       	movw	r10, r24
     7a4:	6d 01       	movw	r12, r26
     7a6:	ae 28       	or	r10, r14
     7a8:	bf 28       	or	r11, r15
     7aa:	c0 2a       	or	r12, r16
     7ac:	d1 2a       	or	r13, r17
     7ae:	a2 16       	cp	r10, r18
     7b0:	b3 06       	cpc	r11, r19
     7b2:	c4 06       	cpc	r12, r20
     7b4:	d5 06       	cpc	r13, r21
     7b6:	60 f5       	brcc	.+88     	; 0x810 <__udivdi3+0x530>
     7b8:	25 96       	adiw	r28, 0x05	; 5
     7ba:	6c ad       	ldd	r22, Y+60	; 0x3c
     7bc:	7d ad       	ldd	r23, Y+61	; 0x3d
     7be:	8e ad       	ldd	r24, Y+62	; 0x3e
     7c0:	9f ad       	ldd	r25, Y+63	; 0x3f
     7c2:	25 97       	sbiw	r28, 0x05	; 5
     7c4:	61 50       	subi	r22, 0x01	; 1
     7c6:	70 40       	sbci	r23, 0x00	; 0
     7c8:	80 40       	sbci	r24, 0x00	; 0
     7ca:	90 40       	sbci	r25, 0x00	; 0
     7cc:	25 96       	adiw	r28, 0x05	; 5
     7ce:	6c af       	std	Y+60, r22	; 0x3c
     7d0:	7d af       	std	Y+61, r23	; 0x3d
     7d2:	8e af       	std	Y+62, r24	; 0x3e
     7d4:	9f af       	std	Y+63, r25	; 0x3f
     7d6:	25 97       	sbiw	r28, 0x05	; 5
     7d8:	a2 0c       	add	r10, r2
     7da:	b3 1c       	adc	r11, r3
     7dc:	c4 1c       	adc	r12, r4
     7de:	d5 1c       	adc	r13, r5
     7e0:	a2 14       	cp	r10, r2
     7e2:	b3 04       	cpc	r11, r3
     7e4:	c4 04       	cpc	r12, r4
     7e6:	d5 04       	cpc	r13, r5
     7e8:	98 f0       	brcs	.+38     	; 0x810 <__udivdi3+0x530>
     7ea:	a2 16       	cp	r10, r18
     7ec:	b3 06       	cpc	r11, r19
     7ee:	c4 06       	cpc	r12, r20
     7f0:	d5 06       	cpc	r13, r21
     7f2:	70 f4       	brcc	.+28     	; 0x810 <__udivdi3+0x530>
     7f4:	61 50       	subi	r22, 0x01	; 1
     7f6:	70 40       	sbci	r23, 0x00	; 0
     7f8:	80 40       	sbci	r24, 0x00	; 0
     7fa:	90 40       	sbci	r25, 0x00	; 0
     7fc:	25 96       	adiw	r28, 0x05	; 5
     7fe:	6c af       	std	Y+60, r22	; 0x3c
     800:	7d af       	std	Y+61, r23	; 0x3d
     802:	8e af       	std	Y+62, r24	; 0x3e
     804:	9f af       	std	Y+63, r25	; 0x3f
     806:	25 97       	sbiw	r28, 0x05	; 5
     808:	a2 0c       	add	r10, r2
     80a:	b3 1c       	adc	r11, r3
     80c:	c4 1c       	adc	r12, r4
     80e:	d5 1c       	adc	r13, r5
     810:	a2 1a       	sub	r10, r18
     812:	b3 0a       	sbc	r11, r19
     814:	c4 0a       	sbc	r12, r20
     816:	d5 0a       	sbc	r13, r21
     818:	c6 01       	movw	r24, r12
     81a:	b5 01       	movw	r22, r10
     81c:	a4 01       	movw	r20, r8
     81e:	93 01       	movw	r18, r6
     820:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     824:	7b 01       	movw	r14, r22
     826:	8c 01       	movw	r16, r24
     828:	c6 01       	movw	r24, r12
     82a:	b5 01       	movw	r22, r10
     82c:	a4 01       	movw	r20, r8
     82e:	93 01       	movw	r18, r6
     830:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     834:	c9 01       	movw	r24, r18
     836:	da 01       	movw	r26, r20
     838:	3c 01       	movw	r6, r24
     83a:	4d 01       	movw	r8, r26
     83c:	c4 01       	movw	r24, r8
     83e:	b3 01       	movw	r22, r6
     840:	21 96       	adiw	r28, 0x01	; 1
     842:	2c ad       	ldd	r18, Y+60	; 0x3c
     844:	3d ad       	ldd	r19, Y+61	; 0x3d
     846:	4e ad       	ldd	r20, Y+62	; 0x3e
     848:	5f ad       	ldd	r21, Y+63	; 0x3f
     84a:	21 97       	sbiw	r28, 0x01	; 1
     84c:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     850:	9b 01       	movw	r18, r22
     852:	ac 01       	movw	r20, r24
     854:	87 01       	movw	r16, r14
     856:	ff 24       	eor	r15, r15
     858:	ee 24       	eor	r14, r14
     85a:	89 a5       	ldd	r24, Y+41	; 0x29
     85c:	9a a5       	ldd	r25, Y+42	; 0x2a
     85e:	ab a5       	ldd	r26, Y+43	; 0x2b
     860:	bc a5       	ldd	r27, Y+44	; 0x2c
     862:	a0 70       	andi	r26, 0x00	; 0
     864:	b0 70       	andi	r27, 0x00	; 0
     866:	57 01       	movw	r10, r14
     868:	68 01       	movw	r12, r16
     86a:	a8 2a       	or	r10, r24
     86c:	b9 2a       	or	r11, r25
     86e:	ca 2a       	or	r12, r26
     870:	db 2a       	or	r13, r27
     872:	a2 16       	cp	r10, r18
     874:	b3 06       	cpc	r11, r19
     876:	c4 06       	cpc	r12, r20
     878:	d5 06       	cpc	r13, r21
     87a:	e0 f4       	brcc	.+56     	; 0x8b4 <__stack+0x55>
     87c:	08 94       	sec
     87e:	61 08       	sbc	r6, r1
     880:	71 08       	sbc	r7, r1
     882:	81 08       	sbc	r8, r1
     884:	91 08       	sbc	r9, r1
     886:	a2 0c       	add	r10, r2
     888:	b3 1c       	adc	r11, r3
     88a:	c4 1c       	adc	r12, r4
     88c:	d5 1c       	adc	r13, r5
     88e:	a2 14       	cp	r10, r2
     890:	b3 04       	cpc	r11, r3
     892:	c4 04       	cpc	r12, r4
     894:	d5 04       	cpc	r13, r5
     896:	70 f0       	brcs	.+28     	; 0x8b4 <__stack+0x55>
     898:	a2 16       	cp	r10, r18
     89a:	b3 06       	cpc	r11, r19
     89c:	c4 06       	cpc	r12, r20
     89e:	d5 06       	cpc	r13, r21
     8a0:	48 f4       	brcc	.+18     	; 0x8b4 <__stack+0x55>
     8a2:	08 94       	sec
     8a4:	61 08       	sbc	r6, r1
     8a6:	71 08       	sbc	r7, r1
     8a8:	81 08       	sbc	r8, r1
     8aa:	91 08       	sbc	r9, r1
     8ac:	a2 0c       	add	r10, r2
     8ae:	b3 1c       	adc	r11, r3
     8b0:	c4 1c       	adc	r12, r4
     8b2:	d5 1c       	adc	r13, r5
     8b4:	8d a5       	ldd	r24, Y+45	; 0x2d
     8b6:	9e a5       	ldd	r25, Y+46	; 0x2e
     8b8:	af a5       	ldd	r26, Y+47	; 0x2f
     8ba:	b8 a9       	ldd	r27, Y+48	; 0x30
     8bc:	6f 96       	adiw	r28, 0x1f	; 31
     8be:	0f ac       	ldd	r0, Y+63	; 0x3f
     8c0:	6f 97       	sbiw	r28, 0x1f	; 31
     8c2:	04 c0       	rjmp	.+8      	; 0x8cc <__stack+0x6d>
     8c4:	88 0f       	add	r24, r24
     8c6:	99 1f       	adc	r25, r25
     8c8:	aa 1f       	adc	r26, r26
     8ca:	bb 1f       	adc	r27, r27
     8cc:	0a 94       	dec	r0
     8ce:	d2 f7       	brpl	.-12     	; 0x8c4 <__stack+0x65>
     8d0:	8d a7       	std	Y+45, r24	; 0x2d
     8d2:	9e a7       	std	Y+46, r25	; 0x2e
     8d4:	af a7       	std	Y+47, r26	; 0x2f
     8d6:	b8 ab       	std	Y+48, r27	; 0x30
     8d8:	a2 1a       	sub	r10, r18
     8da:	b3 0a       	sbc	r11, r19
     8dc:	c4 0a       	sbc	r12, r20
     8de:	d5 0a       	sbc	r13, r21
     8e0:	25 96       	adiw	r28, 0x05	; 5
     8e2:	ec ac       	ldd	r14, Y+60	; 0x3c
     8e4:	fd ac       	ldd	r15, Y+61	; 0x3d
     8e6:	0e ad       	ldd	r16, Y+62	; 0x3e
     8e8:	1f ad       	ldd	r17, Y+63	; 0x3f
     8ea:	25 97       	sbiw	r28, 0x05	; 5
     8ec:	d7 01       	movw	r26, r14
     8ee:	99 27       	eor	r25, r25
     8f0:	88 27       	eor	r24, r24
     8f2:	68 2a       	or	r6, r24
     8f4:	79 2a       	or	r7, r25
     8f6:	8a 2a       	or	r8, r26
     8f8:	9b 2a       	or	r9, r27
     8fa:	82 01       	movw	r16, r4
     8fc:	22 27       	eor	r18, r18
     8fe:	33 27       	eor	r19, r19
     900:	29 96       	adiw	r28, 0x09	; 9
     902:	0c af       	std	Y+60, r16	; 0x3c
     904:	1d af       	std	Y+61, r17	; 0x3d
     906:	2e af       	std	Y+62, r18	; 0x3e
     908:	3f af       	std	Y+63, r19	; 0x3f
     90a:	29 97       	sbiw	r28, 0x09	; 9
     90c:	a2 01       	movw	r20, r4
     90e:	91 01       	movw	r18, r2
     910:	40 70       	andi	r20, 0x00	; 0
     912:	50 70       	andi	r21, 0x00	; 0
     914:	2d 96       	adiw	r28, 0x0d	; 13
     916:	2c af       	std	Y+60, r18	; 0x3c
     918:	3d af       	std	Y+61, r19	; 0x3d
     91a:	4e af       	std	Y+62, r20	; 0x3e
     91c:	5f af       	std	Y+63, r21	; 0x3f
     91e:	2d 97       	sbiw	r28, 0x0d	; 13
     920:	c6 01       	movw	r24, r12
     922:	b5 01       	movw	r22, r10
     924:	29 96       	adiw	r28, 0x09	; 9
     926:	2c ad       	ldd	r18, Y+60	; 0x3c
     928:	3d ad       	ldd	r19, Y+61	; 0x3d
     92a:	4e ad       	ldd	r20, Y+62	; 0x3e
     92c:	5f ad       	ldd	r21, Y+63	; 0x3f
     92e:	29 97       	sbiw	r28, 0x09	; 9
     930:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     934:	7b 01       	movw	r14, r22
     936:	8c 01       	movw	r16, r24
     938:	c6 01       	movw	r24, r12
     93a:	b5 01       	movw	r22, r10
     93c:	29 96       	adiw	r28, 0x09	; 9
     93e:	2c ad       	ldd	r18, Y+60	; 0x3c
     940:	3d ad       	ldd	r19, Y+61	; 0x3d
     942:	4e ad       	ldd	r20, Y+62	; 0x3e
     944:	5f ad       	ldd	r21, Y+63	; 0x3f
     946:	29 97       	sbiw	r28, 0x09	; 9
     948:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     94c:	c9 01       	movw	r24, r18
     94e:	da 01       	movw	r26, r20
     950:	61 96       	adiw	r28, 0x11	; 17
     952:	8c af       	std	Y+60, r24	; 0x3c
     954:	9d af       	std	Y+61, r25	; 0x3d
     956:	ae af       	std	Y+62, r26	; 0x3e
     958:	bf af       	std	Y+63, r27	; 0x3f
     95a:	61 97       	sbiw	r28, 0x11	; 17
     95c:	bc 01       	movw	r22, r24
     95e:	cd 01       	movw	r24, r26
     960:	2d 96       	adiw	r28, 0x0d	; 13
     962:	2c ad       	ldd	r18, Y+60	; 0x3c
     964:	3d ad       	ldd	r19, Y+61	; 0x3d
     966:	4e ad       	ldd	r20, Y+62	; 0x3e
     968:	5f ad       	ldd	r21, Y+63	; 0x3f
     96a:	2d 97       	sbiw	r28, 0x0d	; 13
     96c:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     970:	9b 01       	movw	r18, r22
     972:	ac 01       	movw	r20, r24
     974:	87 01       	movw	r16, r14
     976:	ff 24       	eor	r15, r15
     978:	ee 24       	eor	r14, r14
     97a:	ad a4       	ldd	r10, Y+45	; 0x2d
     97c:	be a4       	ldd	r11, Y+46	; 0x2e
     97e:	cf a4       	ldd	r12, Y+47	; 0x2f
     980:	d8 a8       	ldd	r13, Y+48	; 0x30
     982:	c6 01       	movw	r24, r12
     984:	aa 27       	eor	r26, r26
     986:	bb 27       	eor	r27, r27
     988:	57 01       	movw	r10, r14
     98a:	68 01       	movw	r12, r16
     98c:	a8 2a       	or	r10, r24
     98e:	b9 2a       	or	r11, r25
     990:	ca 2a       	or	r12, r26
     992:	db 2a       	or	r13, r27
     994:	a2 16       	cp	r10, r18
     996:	b3 06       	cpc	r11, r19
     998:	c4 06       	cpc	r12, r20
     99a:	d5 06       	cpc	r13, r21
     99c:	60 f5       	brcc	.+88     	; 0x9f6 <__stack+0x197>
     99e:	61 96       	adiw	r28, 0x11	; 17
     9a0:	6c ad       	ldd	r22, Y+60	; 0x3c
     9a2:	7d ad       	ldd	r23, Y+61	; 0x3d
     9a4:	8e ad       	ldd	r24, Y+62	; 0x3e
     9a6:	9f ad       	ldd	r25, Y+63	; 0x3f
     9a8:	61 97       	sbiw	r28, 0x11	; 17
     9aa:	61 50       	subi	r22, 0x01	; 1
     9ac:	70 40       	sbci	r23, 0x00	; 0
     9ae:	80 40       	sbci	r24, 0x00	; 0
     9b0:	90 40       	sbci	r25, 0x00	; 0
     9b2:	61 96       	adiw	r28, 0x11	; 17
     9b4:	6c af       	std	Y+60, r22	; 0x3c
     9b6:	7d af       	std	Y+61, r23	; 0x3d
     9b8:	8e af       	std	Y+62, r24	; 0x3e
     9ba:	9f af       	std	Y+63, r25	; 0x3f
     9bc:	61 97       	sbiw	r28, 0x11	; 17
     9be:	a2 0c       	add	r10, r2
     9c0:	b3 1c       	adc	r11, r3
     9c2:	c4 1c       	adc	r12, r4
     9c4:	d5 1c       	adc	r13, r5
     9c6:	a2 14       	cp	r10, r2
     9c8:	b3 04       	cpc	r11, r3
     9ca:	c4 04       	cpc	r12, r4
     9cc:	d5 04       	cpc	r13, r5
     9ce:	98 f0       	brcs	.+38     	; 0x9f6 <__stack+0x197>
     9d0:	a2 16       	cp	r10, r18
     9d2:	b3 06       	cpc	r11, r19
     9d4:	c4 06       	cpc	r12, r20
     9d6:	d5 06       	cpc	r13, r21
     9d8:	70 f4       	brcc	.+28     	; 0x9f6 <__stack+0x197>
     9da:	61 50       	subi	r22, 0x01	; 1
     9dc:	70 40       	sbci	r23, 0x00	; 0
     9de:	80 40       	sbci	r24, 0x00	; 0
     9e0:	90 40       	sbci	r25, 0x00	; 0
     9e2:	61 96       	adiw	r28, 0x11	; 17
     9e4:	6c af       	std	Y+60, r22	; 0x3c
     9e6:	7d af       	std	Y+61, r23	; 0x3d
     9e8:	8e af       	std	Y+62, r24	; 0x3e
     9ea:	9f af       	std	Y+63, r25	; 0x3f
     9ec:	61 97       	sbiw	r28, 0x11	; 17
     9ee:	a2 0c       	add	r10, r2
     9f0:	b3 1c       	adc	r11, r3
     9f2:	c4 1c       	adc	r12, r4
     9f4:	d5 1c       	adc	r13, r5
     9f6:	a2 1a       	sub	r10, r18
     9f8:	b3 0a       	sbc	r11, r19
     9fa:	c4 0a       	sbc	r12, r20
     9fc:	d5 0a       	sbc	r13, r21
     9fe:	c6 01       	movw	r24, r12
     a00:	b5 01       	movw	r22, r10
     a02:	29 96       	adiw	r28, 0x09	; 9
     a04:	2c ad       	ldd	r18, Y+60	; 0x3c
     a06:	3d ad       	ldd	r19, Y+61	; 0x3d
     a08:	4e ad       	ldd	r20, Y+62	; 0x3e
     a0a:	5f ad       	ldd	r21, Y+63	; 0x3f
     a0c:	29 97       	sbiw	r28, 0x09	; 9
     a0e:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     a12:	7b 01       	movw	r14, r22
     a14:	8c 01       	movw	r16, r24
     a16:	c6 01       	movw	r24, r12
     a18:	b5 01       	movw	r22, r10
     a1a:	29 96       	adiw	r28, 0x09	; 9
     a1c:	2c ad       	ldd	r18, Y+60	; 0x3c
     a1e:	3d ad       	ldd	r19, Y+61	; 0x3d
     a20:	4e ad       	ldd	r20, Y+62	; 0x3e
     a22:	5f ad       	ldd	r21, Y+63	; 0x3f
     a24:	29 97       	sbiw	r28, 0x09	; 9
     a26:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     a2a:	c9 01       	movw	r24, r18
     a2c:	da 01       	movw	r26, r20
     a2e:	5c 01       	movw	r10, r24
     a30:	6d 01       	movw	r12, r26
     a32:	c6 01       	movw	r24, r12
     a34:	b5 01       	movw	r22, r10
     a36:	2d 96       	adiw	r28, 0x0d	; 13
     a38:	2c ad       	ldd	r18, Y+60	; 0x3c
     a3a:	3d ad       	ldd	r19, Y+61	; 0x3d
     a3c:	4e ad       	ldd	r20, Y+62	; 0x3e
     a3e:	5f ad       	ldd	r21, Y+63	; 0x3f
     a40:	2d 97       	sbiw	r28, 0x0d	; 13
     a42:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     a46:	9b 01       	movw	r18, r22
     a48:	ac 01       	movw	r20, r24
     a4a:	87 01       	movw	r16, r14
     a4c:	ff 24       	eor	r15, r15
     a4e:	ee 24       	eor	r14, r14
     a50:	8d a5       	ldd	r24, Y+45	; 0x2d
     a52:	9e a5       	ldd	r25, Y+46	; 0x2e
     a54:	af a5       	ldd	r26, Y+47	; 0x2f
     a56:	b8 a9       	ldd	r27, Y+48	; 0x30
     a58:	a0 70       	andi	r26, 0x00	; 0
     a5a:	b0 70       	andi	r27, 0x00	; 0
     a5c:	e8 2a       	or	r14, r24
     a5e:	f9 2a       	or	r15, r25
     a60:	0a 2b       	or	r16, r26
     a62:	1b 2b       	or	r17, r27
     a64:	e2 16       	cp	r14, r18
     a66:	f3 06       	cpc	r15, r19
     a68:	04 07       	cpc	r16, r20
     a6a:	15 07       	cpc	r17, r21
     a6c:	c0 f4       	brcc	.+48     	; 0xa9e <__stack+0x23f>
     a6e:	08 94       	sec
     a70:	a1 08       	sbc	r10, r1
     a72:	b1 08       	sbc	r11, r1
     a74:	c1 08       	sbc	r12, r1
     a76:	d1 08       	sbc	r13, r1
     a78:	e2 0c       	add	r14, r2
     a7a:	f3 1c       	adc	r15, r3
     a7c:	04 1d       	adc	r16, r4
     a7e:	15 1d       	adc	r17, r5
     a80:	e2 14       	cp	r14, r2
     a82:	f3 04       	cpc	r15, r3
     a84:	04 05       	cpc	r16, r4
     a86:	15 05       	cpc	r17, r5
     a88:	50 f0       	brcs	.+20     	; 0xa9e <__stack+0x23f>
     a8a:	e2 16       	cp	r14, r18
     a8c:	f3 06       	cpc	r15, r19
     a8e:	04 07       	cpc	r16, r20
     a90:	15 07       	cpc	r17, r21
     a92:	28 f4       	brcc	.+10     	; 0xa9e <__stack+0x23f>
     a94:	08 94       	sec
     a96:	a1 08       	sbc	r10, r1
     a98:	b1 08       	sbc	r11, r1
     a9a:	c1 08       	sbc	r12, r1
     a9c:	d1 08       	sbc	r13, r1
     a9e:	61 96       	adiw	r28, 0x11	; 17
     aa0:	ec ac       	ldd	r14, Y+60	; 0x3c
     aa2:	fd ac       	ldd	r15, Y+61	; 0x3d
     aa4:	0e ad       	ldd	r16, Y+62	; 0x3e
     aa6:	1f ad       	ldd	r17, Y+63	; 0x3f
     aa8:	61 97       	sbiw	r28, 0x11	; 17
     aaa:	d7 01       	movw	r26, r14
     aac:	99 27       	eor	r25, r25
     aae:	88 27       	eor	r24, r24
     ab0:	96 01       	movw	r18, r12
     ab2:	85 01       	movw	r16, r10
     ab4:	08 2b       	or	r16, r24
     ab6:	19 2b       	or	r17, r25
     ab8:	2a 2b       	or	r18, r26
     aba:	3b 2b       	or	r19, r27
     abc:	09 ab       	std	Y+49, r16	; 0x31
     abe:	1a ab       	std	Y+50, r17	; 0x32
     ac0:	2b ab       	std	Y+51, r18	; 0x33
     ac2:	3c ab       	std	Y+52, r19	; 0x34
     ac4:	62 c2       	rjmp	.+1220   	; 0xf8a <__stack+0x72b>
     ac6:	6e 14       	cp	r6, r14
     ac8:	7f 04       	cpc	r7, r15
     aca:	80 06       	cpc	r8, r16
     acc:	91 06       	cpc	r9, r17
     ace:	08 f4       	brcc	.+2      	; 0xad2 <__stack+0x273>
     ad0:	51 c2       	rjmp	.+1186   	; 0xf74 <__stack+0x715>
     ad2:	20 e0       	ldi	r18, 0x00	; 0
     ad4:	e2 16       	cp	r14, r18
     ad6:	20 e0       	ldi	r18, 0x00	; 0
     ad8:	f2 06       	cpc	r15, r18
     ada:	21 e0       	ldi	r18, 0x01	; 1
     adc:	02 07       	cpc	r16, r18
     ade:	20 e0       	ldi	r18, 0x00	; 0
     ae0:	12 07       	cpc	r17, r18
     ae2:	88 f4       	brcc	.+34     	; 0xb06 <__stack+0x2a7>
     ae4:	3f ef       	ldi	r19, 0xFF	; 255
     ae6:	e3 16       	cp	r14, r19
     ae8:	f1 04       	cpc	r15, r1
     aea:	01 05       	cpc	r16, r1
     aec:	11 05       	cpc	r17, r1
     aee:	31 f0       	breq	.+12     	; 0xafc <__stack+0x29d>
     af0:	28 f0       	brcs	.+10     	; 0xafc <__stack+0x29d>
     af2:	48 e0       	ldi	r20, 0x08	; 8
     af4:	50 e0       	ldi	r21, 0x00	; 0
     af6:	60 e0       	ldi	r22, 0x00	; 0
     af8:	70 e0       	ldi	r23, 0x00	; 0
     afa:	17 c0       	rjmp	.+46     	; 0xb2a <__stack+0x2cb>
     afc:	40 e0       	ldi	r20, 0x00	; 0
     afe:	50 e0       	ldi	r21, 0x00	; 0
     b00:	60 e0       	ldi	r22, 0x00	; 0
     b02:	70 e0       	ldi	r23, 0x00	; 0
     b04:	12 c0       	rjmp	.+36     	; 0xb2a <__stack+0x2cb>
     b06:	40 e0       	ldi	r20, 0x00	; 0
     b08:	e4 16       	cp	r14, r20
     b0a:	40 e0       	ldi	r20, 0x00	; 0
     b0c:	f4 06       	cpc	r15, r20
     b0e:	40 e0       	ldi	r20, 0x00	; 0
     b10:	04 07       	cpc	r16, r20
     b12:	41 e0       	ldi	r20, 0x01	; 1
     b14:	14 07       	cpc	r17, r20
     b16:	28 f0       	brcs	.+10     	; 0xb22 <__stack+0x2c3>
     b18:	48 e1       	ldi	r20, 0x18	; 24
     b1a:	50 e0       	ldi	r21, 0x00	; 0
     b1c:	60 e0       	ldi	r22, 0x00	; 0
     b1e:	70 e0       	ldi	r23, 0x00	; 0
     b20:	04 c0       	rjmp	.+8      	; 0xb2a <__stack+0x2cb>
     b22:	40 e1       	ldi	r20, 0x10	; 16
     b24:	50 e0       	ldi	r21, 0x00	; 0
     b26:	60 e0       	ldi	r22, 0x00	; 0
     b28:	70 e0       	ldi	r23, 0x00	; 0
     b2a:	d8 01       	movw	r26, r16
     b2c:	c7 01       	movw	r24, r14
     b2e:	04 2e       	mov	r0, r20
     b30:	04 c0       	rjmp	.+8      	; 0xb3a <__stack+0x2db>
     b32:	b6 95       	lsr	r27
     b34:	a7 95       	ror	r26
     b36:	97 95       	ror	r25
     b38:	87 95       	ror	r24
     b3a:	0a 94       	dec	r0
     b3c:	d2 f7       	brpl	.-12     	; 0xb32 <__stack+0x2d3>
     b3e:	8d 56       	subi	r24, 0x6D	; 109
     b40:	9f 4f       	sbci	r25, 0xFF	; 255
     b42:	dc 01       	movw	r26, r24
     b44:	2c 91       	ld	r18, X
     b46:	30 e2       	ldi	r19, 0x20	; 32
     b48:	a3 2e       	mov	r10, r19
     b4a:	b1 2c       	mov	r11, r1
     b4c:	c1 2c       	mov	r12, r1
     b4e:	d1 2c       	mov	r13, r1
     b50:	d6 01       	movw	r26, r12
     b52:	c5 01       	movw	r24, r10
     b54:	84 1b       	sub	r24, r20
     b56:	95 0b       	sbc	r25, r21
     b58:	a6 0b       	sbc	r26, r22
     b5a:	b7 0b       	sbc	r27, r23
     b5c:	82 1b       	sub	r24, r18
     b5e:	91 09       	sbc	r25, r1
     b60:	a1 09       	sbc	r26, r1
     b62:	b1 09       	sbc	r27, r1
     b64:	00 97       	sbiw	r24, 0x00	; 0
     b66:	a1 05       	cpc	r26, r1
     b68:	b1 05       	cpc	r27, r1
     b6a:	89 f4       	brne	.+34     	; 0xb8e <__stack+0x32f>
     b6c:	e6 14       	cp	r14, r6
     b6e:	f7 04       	cpc	r15, r7
     b70:	08 05       	cpc	r16, r8
     b72:	19 05       	cpc	r17, r9
     b74:	08 f4       	brcc	.+2      	; 0xb78 <__stack+0x319>
     b76:	f2 c1       	rjmp	.+996    	; 0xf5c <__stack+0x6fd>
     b78:	6d a4       	ldd	r6, Y+45	; 0x2d
     b7a:	7e a4       	ldd	r7, Y+46	; 0x2e
     b7c:	8f a4       	ldd	r8, Y+47	; 0x2f
     b7e:	98 a8       	ldd	r9, Y+48	; 0x30
     b80:	62 14       	cp	r6, r2
     b82:	73 04       	cpc	r7, r3
     b84:	84 04       	cpc	r8, r4
     b86:	95 04       	cpc	r9, r5
     b88:	08 f0       	brcs	.+2      	; 0xb8c <__stack+0x32d>
     b8a:	e8 c1       	rjmp	.+976    	; 0xf5c <__stack+0x6fd>
     b8c:	f3 c1       	rjmp	.+998    	; 0xf74 <__stack+0x715>
     b8e:	6e 96       	adiw	r28, 0x1e	; 30
     b90:	8f af       	std	Y+63, r24	; 0x3f
     b92:	6e 97       	sbiw	r28, 0x1e	; 30
     b94:	08 2e       	mov	r0, r24
     b96:	04 c0       	rjmp	.+8      	; 0xba0 <__stack+0x341>
     b98:	ee 0c       	add	r14, r14
     b9a:	ff 1c       	adc	r15, r15
     b9c:	00 1f       	adc	r16, r16
     b9e:	11 1f       	adc	r17, r17
     ba0:	0a 94       	dec	r0
     ba2:	d2 f7       	brpl	.-12     	; 0xb98 <__stack+0x339>
     ba4:	6a 2d       	mov	r22, r10
     ba6:	68 1b       	sub	r22, r24
     ba8:	d2 01       	movw	r26, r4
     baa:	c1 01       	movw	r24, r2
     bac:	06 2e       	mov	r0, r22
     bae:	04 c0       	rjmp	.+8      	; 0xbb8 <__stack+0x359>
     bb0:	b6 95       	lsr	r27
     bb2:	a7 95       	ror	r26
     bb4:	97 95       	ror	r25
     bb6:	87 95       	ror	r24
     bb8:	0a 94       	dec	r0
     bba:	d2 f7       	brpl	.-12     	; 0xbb0 <__stack+0x351>
     bbc:	5c 01       	movw	r10, r24
     bbe:	6d 01       	movw	r12, r26
     bc0:	ae 28       	or	r10, r14
     bc2:	bf 28       	or	r11, r15
     bc4:	c0 2a       	or	r12, r16
     bc6:	d1 2a       	or	r13, r17
     bc8:	ad a2       	std	Y+37, r10	; 0x25
     bca:	be a2       	std	Y+38, r11	; 0x26
     bcc:	cf a2       	std	Y+39, r12	; 0x27
     bce:	d8 a6       	std	Y+40, r13	; 0x28
     bd0:	72 01       	movw	r14, r4
     bd2:	61 01       	movw	r12, r2
     bd4:	6e 96       	adiw	r28, 0x1e	; 30
     bd6:	0f ac       	ldd	r0, Y+63	; 0x3f
     bd8:	6e 97       	sbiw	r28, 0x1e	; 30
     bda:	04 c0       	rjmp	.+8      	; 0xbe4 <__stack+0x385>
     bdc:	cc 0c       	add	r12, r12
     bde:	dd 1c       	adc	r13, r13
     be0:	ee 1c       	adc	r14, r14
     be2:	ff 1c       	adc	r15, r15
     be4:	0a 94       	dec	r0
     be6:	d2 f7       	brpl	.-12     	; 0xbdc <__stack+0x37d>
     be8:	c9 a2       	std	Y+33, r12	; 0x21
     bea:	da a2       	std	Y+34, r13	; 0x22
     bec:	eb a2       	std	Y+35, r14	; 0x23
     bee:	fc a2       	std	Y+36, r15	; 0x24
     bf0:	64 01       	movw	r12, r8
     bf2:	53 01       	movw	r10, r6
     bf4:	06 2e       	mov	r0, r22
     bf6:	04 c0       	rjmp	.+8      	; 0xc00 <__stack+0x3a1>
     bf8:	d6 94       	lsr	r13
     bfa:	c7 94       	ror	r12
     bfc:	b7 94       	ror	r11
     bfe:	a7 94       	ror	r10
     c00:	0a 94       	dec	r0
     c02:	d2 f7       	brpl	.-12     	; 0xbf8 <__stack+0x399>
     c04:	d4 01       	movw	r26, r8
     c06:	c3 01       	movw	r24, r6
     c08:	6e 96       	adiw	r28, 0x1e	; 30
     c0a:	0f ac       	ldd	r0, Y+63	; 0x3f
     c0c:	6e 97       	sbiw	r28, 0x1e	; 30
     c0e:	04 c0       	rjmp	.+8      	; 0xc18 <__stack+0x3b9>
     c10:	88 0f       	add	r24, r24
     c12:	99 1f       	adc	r25, r25
     c14:	aa 1f       	adc	r26, r26
     c16:	bb 1f       	adc	r27, r27
     c18:	0a 94       	dec	r0
     c1a:	d2 f7       	brpl	.-12     	; 0xc10 <__stack+0x3b1>
     c1c:	ed a4       	ldd	r14, Y+45	; 0x2d
     c1e:	fe a4       	ldd	r15, Y+46	; 0x2e
     c20:	0f a5       	ldd	r16, Y+47	; 0x2f
     c22:	18 a9       	ldd	r17, Y+48	; 0x30
     c24:	04 c0       	rjmp	.+8      	; 0xc2e <__stack+0x3cf>
     c26:	16 95       	lsr	r17
     c28:	07 95       	ror	r16
     c2a:	f7 94       	ror	r15
     c2c:	e7 94       	ror	r14
     c2e:	6a 95       	dec	r22
     c30:	d2 f7       	brpl	.-12     	; 0xc26 <__stack+0x3c7>
     c32:	37 01       	movw	r6, r14
     c34:	48 01       	movw	r8, r16
     c36:	68 2a       	or	r6, r24
     c38:	79 2a       	or	r7, r25
     c3a:	8a 2a       	or	r8, r26
     c3c:	9b 2a       	or	r9, r27
     c3e:	6d 8e       	std	Y+29, r6	; 0x1d
     c40:	7e 8e       	std	Y+30, r7	; 0x1e
     c42:	8f 8e       	std	Y+31, r8	; 0x1f
     c44:	98 a2       	std	Y+32, r9	; 0x20
     c46:	ed a0       	ldd	r14, Y+37	; 0x25
     c48:	fe a0       	ldd	r15, Y+38	; 0x26
     c4a:	0f a1       	ldd	r16, Y+39	; 0x27
     c4c:	18 a5       	ldd	r17, Y+40	; 0x28
     c4e:	38 01       	movw	r6, r16
     c50:	88 24       	eor	r8, r8
     c52:	99 24       	eor	r9, r9
     c54:	98 01       	movw	r18, r16
     c56:	87 01       	movw	r16, r14
     c58:	20 70       	andi	r18, 0x00	; 0
     c5a:	30 70       	andi	r19, 0x00	; 0
     c5c:	65 96       	adiw	r28, 0x15	; 21
     c5e:	0c af       	std	Y+60, r16	; 0x3c
     c60:	1d af       	std	Y+61, r17	; 0x3d
     c62:	2e af       	std	Y+62, r18	; 0x3e
     c64:	3f af       	std	Y+63, r19	; 0x3f
     c66:	65 97       	sbiw	r28, 0x15	; 21
     c68:	c6 01       	movw	r24, r12
     c6a:	b5 01       	movw	r22, r10
     c6c:	a4 01       	movw	r20, r8
     c6e:	93 01       	movw	r18, r6
     c70:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     c74:	7b 01       	movw	r14, r22
     c76:	8c 01       	movw	r16, r24
     c78:	c6 01       	movw	r24, r12
     c7a:	b5 01       	movw	r22, r10
     c7c:	a4 01       	movw	r20, r8
     c7e:	93 01       	movw	r18, r6
     c80:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     c84:	c9 01       	movw	r24, r18
     c86:	da 01       	movw	r26, r20
     c88:	1c 01       	movw	r2, r24
     c8a:	2d 01       	movw	r4, r26
     c8c:	c2 01       	movw	r24, r4
     c8e:	b1 01       	movw	r22, r2
     c90:	65 96       	adiw	r28, 0x15	; 21
     c92:	2c ad       	ldd	r18, Y+60	; 0x3c
     c94:	3d ad       	ldd	r19, Y+61	; 0x3d
     c96:	4e ad       	ldd	r20, Y+62	; 0x3e
     c98:	5f ad       	ldd	r21, Y+63	; 0x3f
     c9a:	65 97       	sbiw	r28, 0x15	; 21
     c9c:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     ca0:	9b 01       	movw	r18, r22
     ca2:	ac 01       	movw	r20, r24
     ca4:	87 01       	movw	r16, r14
     ca6:	ff 24       	eor	r15, r15
     ca8:	ee 24       	eor	r14, r14
     caa:	ad 8c       	ldd	r10, Y+29	; 0x1d
     cac:	be 8c       	ldd	r11, Y+30	; 0x1e
     cae:	cf 8c       	ldd	r12, Y+31	; 0x1f
     cb0:	d8 a0       	ldd	r13, Y+32	; 0x20
     cb2:	c6 01       	movw	r24, r12
     cb4:	aa 27       	eor	r26, r26
     cb6:	bb 27       	eor	r27, r27
     cb8:	57 01       	movw	r10, r14
     cba:	68 01       	movw	r12, r16
     cbc:	a8 2a       	or	r10, r24
     cbe:	b9 2a       	or	r11, r25
     cc0:	ca 2a       	or	r12, r26
     cc2:	db 2a       	or	r13, r27
     cc4:	a2 16       	cp	r10, r18
     cc6:	b3 06       	cpc	r11, r19
     cc8:	c4 06       	cpc	r12, r20
     cca:	d5 06       	cpc	r13, r21
     ccc:	00 f5       	brcc	.+64     	; 0xd0e <__stack+0x4af>
     cce:	08 94       	sec
     cd0:	21 08       	sbc	r2, r1
     cd2:	31 08       	sbc	r3, r1
     cd4:	41 08       	sbc	r4, r1
     cd6:	51 08       	sbc	r5, r1
     cd8:	ed a0       	ldd	r14, Y+37	; 0x25
     cda:	fe a0       	ldd	r15, Y+38	; 0x26
     cdc:	0f a1       	ldd	r16, Y+39	; 0x27
     cde:	18 a5       	ldd	r17, Y+40	; 0x28
     ce0:	ae 0c       	add	r10, r14
     ce2:	bf 1c       	adc	r11, r15
     ce4:	c0 1e       	adc	r12, r16
     ce6:	d1 1e       	adc	r13, r17
     ce8:	ae 14       	cp	r10, r14
     cea:	bf 04       	cpc	r11, r15
     cec:	c0 06       	cpc	r12, r16
     cee:	d1 06       	cpc	r13, r17
     cf0:	70 f0       	brcs	.+28     	; 0xd0e <__stack+0x4af>
     cf2:	a2 16       	cp	r10, r18
     cf4:	b3 06       	cpc	r11, r19
     cf6:	c4 06       	cpc	r12, r20
     cf8:	d5 06       	cpc	r13, r21
     cfa:	48 f4       	brcc	.+18     	; 0xd0e <__stack+0x4af>
     cfc:	08 94       	sec
     cfe:	21 08       	sbc	r2, r1
     d00:	31 08       	sbc	r3, r1
     d02:	41 08       	sbc	r4, r1
     d04:	51 08       	sbc	r5, r1
     d06:	ae 0c       	add	r10, r14
     d08:	bf 1c       	adc	r11, r15
     d0a:	c0 1e       	adc	r12, r16
     d0c:	d1 1e       	adc	r13, r17
     d0e:	a2 1a       	sub	r10, r18
     d10:	b3 0a       	sbc	r11, r19
     d12:	c4 0a       	sbc	r12, r20
     d14:	d5 0a       	sbc	r13, r21
     d16:	c6 01       	movw	r24, r12
     d18:	b5 01       	movw	r22, r10
     d1a:	a4 01       	movw	r20, r8
     d1c:	93 01       	movw	r18, r6
     d1e:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     d22:	7b 01       	movw	r14, r22
     d24:	8c 01       	movw	r16, r24
     d26:	c6 01       	movw	r24, r12
     d28:	b5 01       	movw	r22, r10
     d2a:	a4 01       	movw	r20, r8
     d2c:	93 01       	movw	r18, r6
     d2e:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
     d32:	c9 01       	movw	r24, r18
     d34:	da 01       	movw	r26, r20
     d36:	3c 01       	movw	r6, r24
     d38:	4d 01       	movw	r8, r26
     d3a:	c4 01       	movw	r24, r8
     d3c:	b3 01       	movw	r22, r6
     d3e:	65 96       	adiw	r28, 0x15	; 21
     d40:	2c ad       	ldd	r18, Y+60	; 0x3c
     d42:	3d ad       	ldd	r19, Y+61	; 0x3d
     d44:	4e ad       	ldd	r20, Y+62	; 0x3e
     d46:	5f ad       	ldd	r21, Y+63	; 0x3f
     d48:	65 97       	sbiw	r28, 0x15	; 21
     d4a:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     d4e:	9b 01       	movw	r18, r22
     d50:	ac 01       	movw	r20, r24
     d52:	87 01       	movw	r16, r14
     d54:	ff 24       	eor	r15, r15
     d56:	ee 24       	eor	r14, r14
     d58:	8d 8d       	ldd	r24, Y+29	; 0x1d
     d5a:	9e 8d       	ldd	r25, Y+30	; 0x1e
     d5c:	af 8d       	ldd	r26, Y+31	; 0x1f
     d5e:	b8 a1       	ldd	r27, Y+32	; 0x20
     d60:	a0 70       	andi	r26, 0x00	; 0
     d62:	b0 70       	andi	r27, 0x00	; 0
     d64:	57 01       	movw	r10, r14
     d66:	68 01       	movw	r12, r16
     d68:	a8 2a       	or	r10, r24
     d6a:	b9 2a       	or	r11, r25
     d6c:	ca 2a       	or	r12, r26
     d6e:	db 2a       	or	r13, r27
     d70:	a2 16       	cp	r10, r18
     d72:	b3 06       	cpc	r11, r19
     d74:	c4 06       	cpc	r12, r20
     d76:	d5 06       	cpc	r13, r21
     d78:	00 f5       	brcc	.+64     	; 0xdba <__stack+0x55b>
     d7a:	08 94       	sec
     d7c:	61 08       	sbc	r6, r1
     d7e:	71 08       	sbc	r7, r1
     d80:	81 08       	sbc	r8, r1
     d82:	91 08       	sbc	r9, r1
     d84:	6d a1       	ldd	r22, Y+37	; 0x25
     d86:	7e a1       	ldd	r23, Y+38	; 0x26
     d88:	8f a1       	ldd	r24, Y+39	; 0x27
     d8a:	98 a5       	ldd	r25, Y+40	; 0x28
     d8c:	a6 0e       	add	r10, r22
     d8e:	b7 1e       	adc	r11, r23
     d90:	c8 1e       	adc	r12, r24
     d92:	d9 1e       	adc	r13, r25
     d94:	a6 16       	cp	r10, r22
     d96:	b7 06       	cpc	r11, r23
     d98:	c8 06       	cpc	r12, r24
     d9a:	d9 06       	cpc	r13, r25
     d9c:	70 f0       	brcs	.+28     	; 0xdba <__stack+0x55b>
     d9e:	a2 16       	cp	r10, r18
     da0:	b3 06       	cpc	r11, r19
     da2:	c4 06       	cpc	r12, r20
     da4:	d5 06       	cpc	r13, r21
     da6:	48 f4       	brcc	.+18     	; 0xdba <__stack+0x55b>
     da8:	08 94       	sec
     daa:	61 08       	sbc	r6, r1
     dac:	71 08       	sbc	r7, r1
     dae:	81 08       	sbc	r8, r1
     db0:	91 08       	sbc	r9, r1
     db2:	a6 0e       	add	r10, r22
     db4:	b7 1e       	adc	r11, r23
     db6:	c8 1e       	adc	r12, r24
     db8:	d9 1e       	adc	r13, r25
     dba:	d6 01       	movw	r26, r12
     dbc:	c5 01       	movw	r24, r10
     dbe:	82 1b       	sub	r24, r18
     dc0:	93 0b       	sbc	r25, r19
     dc2:	a4 0b       	sbc	r26, r20
     dc4:	b5 0b       	sbc	r27, r21
     dc6:	89 8f       	std	Y+25, r24	; 0x19
     dc8:	9a 8f       	std	Y+26, r25	; 0x1a
     dca:	ab 8f       	std	Y+27, r26	; 0x1b
     dcc:	bc 8f       	std	Y+28, r27	; 0x1c
     dce:	d1 01       	movw	r26, r2
     dd0:	99 27       	eor	r25, r25
     dd2:	88 27       	eor	r24, r24
     dd4:	64 01       	movw	r12, r8
     dd6:	53 01       	movw	r10, r6
     dd8:	a8 2a       	or	r10, r24
     dda:	b9 2a       	or	r11, r25
     ddc:	ca 2a       	or	r12, r26
     dde:	db 2a       	or	r13, r27
     de0:	a9 aa       	std	Y+49, r10	; 0x31
     de2:	ba aa       	std	Y+50, r11	; 0x32
     de4:	cb aa       	std	Y+51, r12	; 0x33
     de6:	dc aa       	std	Y+52, r13	; 0x34
     de8:	86 01       	movw	r16, r12
     dea:	75 01       	movw	r14, r10
     dec:	2f ef       	ldi	r18, 0xFF	; 255
     dee:	3f ef       	ldi	r19, 0xFF	; 255
     df0:	40 e0       	ldi	r20, 0x00	; 0
     df2:	50 e0       	ldi	r21, 0x00	; 0
     df4:	e2 22       	and	r14, r18
     df6:	f3 22       	and	r15, r19
     df8:	04 23       	and	r16, r20
     dfa:	15 23       	and	r17, r21
     dfc:	a6 01       	movw	r20, r12
     dfe:	66 27       	eor	r22, r22
     e00:	77 27       	eor	r23, r23
     e02:	6d 96       	adiw	r28, 0x1d	; 29
     e04:	4c af       	std	Y+60, r20	; 0x3c
     e06:	5d af       	std	Y+61, r21	; 0x3d
     e08:	6e af       	std	Y+62, r22	; 0x3e
     e0a:	7f af       	std	Y+63, r23	; 0x3f
     e0c:	6d 97       	sbiw	r28, 0x1d	; 29
     e0e:	a9 a0       	ldd	r10, Y+33	; 0x21
     e10:	ba a0       	ldd	r11, Y+34	; 0x22
     e12:	cb a0       	ldd	r12, Y+35	; 0x23
     e14:	dc a0       	ldd	r13, Y+36	; 0x24
     e16:	6f ef       	ldi	r22, 0xFF	; 255
     e18:	7f ef       	ldi	r23, 0xFF	; 255
     e1a:	80 e0       	ldi	r24, 0x00	; 0
     e1c:	90 e0       	ldi	r25, 0x00	; 0
     e1e:	a6 22       	and	r10, r22
     e20:	b7 22       	and	r11, r23
     e22:	c8 22       	and	r12, r24
     e24:	d9 22       	and	r13, r25
     e26:	89 a1       	ldd	r24, Y+33	; 0x21
     e28:	9a a1       	ldd	r25, Y+34	; 0x22
     e2a:	ab a1       	ldd	r26, Y+35	; 0x23
     e2c:	bc a1       	ldd	r27, Y+36	; 0x24
     e2e:	1d 01       	movw	r2, r26
     e30:	44 24       	eor	r4, r4
     e32:	55 24       	eor	r5, r5
     e34:	c8 01       	movw	r24, r16
     e36:	b7 01       	movw	r22, r14
     e38:	a6 01       	movw	r20, r12
     e3a:	95 01       	movw	r18, r10
     e3c:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     e40:	69 96       	adiw	r28, 0x19	; 25
     e42:	6c af       	std	Y+60, r22	; 0x3c
     e44:	7d af       	std	Y+61, r23	; 0x3d
     e46:	8e af       	std	Y+62, r24	; 0x3e
     e48:	9f af       	std	Y+63, r25	; 0x3f
     e4a:	69 97       	sbiw	r28, 0x19	; 25
     e4c:	c8 01       	movw	r24, r16
     e4e:	b7 01       	movw	r22, r14
     e50:	a2 01       	movw	r20, r4
     e52:	91 01       	movw	r18, r2
     e54:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     e58:	3b 01       	movw	r6, r22
     e5a:	4c 01       	movw	r8, r24
     e5c:	6d 96       	adiw	r28, 0x1d	; 29
     e5e:	6c ad       	ldd	r22, Y+60	; 0x3c
     e60:	7d ad       	ldd	r23, Y+61	; 0x3d
     e62:	8e ad       	ldd	r24, Y+62	; 0x3e
     e64:	9f ad       	ldd	r25, Y+63	; 0x3f
     e66:	6d 97       	sbiw	r28, 0x1d	; 29
     e68:	a6 01       	movw	r20, r12
     e6a:	95 01       	movw	r18, r10
     e6c:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     e70:	7b 01       	movw	r14, r22
     e72:	8c 01       	movw	r16, r24
     e74:	6d 96       	adiw	r28, 0x1d	; 29
     e76:	6c ad       	ldd	r22, Y+60	; 0x3c
     e78:	7d ad       	ldd	r23, Y+61	; 0x3d
     e7a:	8e ad       	ldd	r24, Y+62	; 0x3e
     e7c:	9f ad       	ldd	r25, Y+63	; 0x3f
     e7e:	6d 97       	sbiw	r28, 0x1d	; 29
     e80:	a2 01       	movw	r20, r4
     e82:	91 01       	movw	r18, r2
     e84:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
     e88:	5b 01       	movw	r10, r22
     e8a:	6c 01       	movw	r12, r24
     e8c:	a8 01       	movw	r20, r16
     e8e:	97 01       	movw	r18, r14
     e90:	26 0d       	add	r18, r6
     e92:	37 1d       	adc	r19, r7
     e94:	48 1d       	adc	r20, r8
     e96:	59 1d       	adc	r21, r9
     e98:	69 96       	adiw	r28, 0x19	; 25
     e9a:	6c ac       	ldd	r6, Y+60	; 0x3c
     e9c:	7d ac       	ldd	r7, Y+61	; 0x3d
     e9e:	8e ac       	ldd	r8, Y+62	; 0x3e
     ea0:	9f ac       	ldd	r9, Y+63	; 0x3f
     ea2:	69 97       	sbiw	r28, 0x19	; 25
     ea4:	c4 01       	movw	r24, r8
     ea6:	aa 27       	eor	r26, r26
     ea8:	bb 27       	eor	r27, r27
     eaa:	28 0f       	add	r18, r24
     eac:	39 1f       	adc	r19, r25
     eae:	4a 1f       	adc	r20, r26
     eb0:	5b 1f       	adc	r21, r27
     eb2:	2e 15       	cp	r18, r14
     eb4:	3f 05       	cpc	r19, r15
     eb6:	40 07       	cpc	r20, r16
     eb8:	51 07       	cpc	r21, r17
     eba:	48 f4       	brcc	.+18     	; 0xece <__stack+0x66f>
     ebc:	e1 2c       	mov	r14, r1
     ebe:	f1 2c       	mov	r15, r1
     ec0:	61 e0       	ldi	r22, 0x01	; 1
     ec2:	06 2f       	mov	r16, r22
     ec4:	11 2d       	mov	r17, r1
     ec6:	ae 0c       	add	r10, r14
     ec8:	bf 1c       	adc	r11, r15
     eca:	c0 1e       	adc	r12, r16
     ecc:	d1 1e       	adc	r13, r17
     ece:	ca 01       	movw	r24, r20
     ed0:	aa 27       	eor	r26, r26
     ed2:	bb 27       	eor	r27, r27
     ed4:	bc 01       	movw	r22, r24
     ed6:	cd 01       	movw	r24, r26
     ed8:	6a 0d       	add	r22, r10
     eda:	7b 1d       	adc	r23, r11
     edc:	8c 1d       	adc	r24, r12
     ede:	9d 1d       	adc	r25, r13
     ee0:	69 8c       	ldd	r6, Y+25	; 0x19
     ee2:	7a 8c       	ldd	r7, Y+26	; 0x1a
     ee4:	8b 8c       	ldd	r8, Y+27	; 0x1b
     ee6:	9c 8c       	ldd	r9, Y+28	; 0x1c
     ee8:	66 16       	cp	r6, r22
     eea:	77 06       	cpc	r7, r23
     eec:	88 06       	cpc	r8, r24
     eee:	99 06       	cpc	r9, r25
     ef0:	40 f1       	brcs	.+80     	; 0xf42 <__stack+0x6e3>
     ef2:	66 15       	cp	r22, r6
     ef4:	77 05       	cpc	r23, r7
     ef6:	88 05       	cpc	r24, r8
     ef8:	99 05       	cpc	r25, r9
     efa:	09 f0       	breq	.+2      	; 0xefe <__stack+0x69f>
     efc:	43 c0       	rjmp	.+134    	; 0xf84 <__stack+0x725>
     efe:	d9 01       	movw	r26, r18
     f00:	99 27       	eor	r25, r25
     f02:	88 27       	eor	r24, r24
     f04:	69 96       	adiw	r28, 0x19	; 25
     f06:	2c ad       	ldd	r18, Y+60	; 0x3c
     f08:	3d ad       	ldd	r19, Y+61	; 0x3d
     f0a:	4e ad       	ldd	r20, Y+62	; 0x3e
     f0c:	5f ad       	ldd	r21, Y+63	; 0x3f
     f0e:	69 97       	sbiw	r28, 0x19	; 25
     f10:	40 70       	andi	r20, 0x00	; 0
     f12:	50 70       	andi	r21, 0x00	; 0
     f14:	82 0f       	add	r24, r18
     f16:	93 1f       	adc	r25, r19
     f18:	a4 1f       	adc	r26, r20
     f1a:	b5 1f       	adc	r27, r21
     f1c:	2d a5       	ldd	r18, Y+45	; 0x2d
     f1e:	3e a5       	ldd	r19, Y+46	; 0x2e
     f20:	4f a5       	ldd	r20, Y+47	; 0x2f
     f22:	58 a9       	ldd	r21, Y+48	; 0x30
     f24:	6e 96       	adiw	r28, 0x1e	; 30
     f26:	0f ac       	ldd	r0, Y+63	; 0x3f
     f28:	6e 97       	sbiw	r28, 0x1e	; 30
     f2a:	04 c0       	rjmp	.+8      	; 0xf34 <__stack+0x6d5>
     f2c:	22 0f       	add	r18, r18
     f2e:	33 1f       	adc	r19, r19
     f30:	44 1f       	adc	r20, r20
     f32:	55 1f       	adc	r21, r21
     f34:	0a 94       	dec	r0
     f36:	d2 f7       	brpl	.-12     	; 0xf2c <__stack+0x6cd>
     f38:	28 17       	cp	r18, r24
     f3a:	39 07       	cpc	r19, r25
     f3c:	4a 07       	cpc	r20, r26
     f3e:	5b 07       	cpc	r21, r27
     f40:	08 f5       	brcc	.+66     	; 0xf84 <__stack+0x725>
     f42:	09 a9       	ldd	r16, Y+49	; 0x31
     f44:	1a a9       	ldd	r17, Y+50	; 0x32
     f46:	2b a9       	ldd	r18, Y+51	; 0x33
     f48:	3c a9       	ldd	r19, Y+52	; 0x34
     f4a:	01 50       	subi	r16, 0x01	; 1
     f4c:	10 40       	sbci	r17, 0x00	; 0
     f4e:	20 40       	sbci	r18, 0x00	; 0
     f50:	30 40       	sbci	r19, 0x00	; 0
     f52:	09 ab       	std	Y+49, r16	; 0x31
     f54:	1a ab       	std	Y+50, r17	; 0x32
     f56:	2b ab       	std	Y+51, r18	; 0x33
     f58:	3c ab       	std	Y+52, r19	; 0x34
     f5a:	14 c0       	rjmp	.+40     	; 0xf84 <__stack+0x725>
     f5c:	66 24       	eor	r6, r6
     f5e:	77 24       	eor	r7, r7
     f60:	43 01       	movw	r8, r6
     f62:	21 e0       	ldi	r18, 0x01	; 1
     f64:	30 e0       	ldi	r19, 0x00	; 0
     f66:	40 e0       	ldi	r20, 0x00	; 0
     f68:	50 e0       	ldi	r21, 0x00	; 0
     f6a:	29 ab       	std	Y+49, r18	; 0x31
     f6c:	3a ab       	std	Y+50, r19	; 0x32
     f6e:	4b ab       	std	Y+51, r20	; 0x33
     f70:	5c ab       	std	Y+52, r21	; 0x34
     f72:	0b c0       	rjmp	.+22     	; 0xf8a <__stack+0x72b>
     f74:	66 24       	eor	r6, r6
     f76:	77 24       	eor	r7, r7
     f78:	43 01       	movw	r8, r6
     f7a:	19 aa       	std	Y+49, r1	; 0x31
     f7c:	1a aa       	std	Y+50, r1	; 0x32
     f7e:	1b aa       	std	Y+51, r1	; 0x33
     f80:	1c aa       	std	Y+52, r1	; 0x34
     f82:	03 c0       	rjmp	.+6      	; 0xf8a <__stack+0x72b>
     f84:	66 24       	eor	r6, r6
     f86:	77 24       	eor	r7, r7
     f88:	43 01       	movw	r8, r6
     f8a:	fe 01       	movw	r30, r28
     f8c:	71 96       	adiw	r30, 0x11	; 17
     f8e:	88 e0       	ldi	r24, 0x08	; 8
     f90:	df 01       	movw	r26, r30
     f92:	1d 92       	st	X+, r1
     f94:	8a 95       	dec	r24
     f96:	e9 f7       	brne	.-6      	; 0xf92 <__stack+0x733>
     f98:	a9 a8       	ldd	r10, Y+49	; 0x31
     f9a:	ba a8       	ldd	r11, Y+50	; 0x32
     f9c:	cb a8       	ldd	r12, Y+51	; 0x33
     f9e:	dc a8       	ldd	r13, Y+52	; 0x34
     fa0:	a9 8a       	std	Y+17, r10	; 0x11
     fa2:	ba 8a       	std	Y+18, r11	; 0x12
     fa4:	cb 8a       	std	Y+19, r12	; 0x13
     fa6:	dc 8a       	std	Y+20, r13	; 0x14
     fa8:	6d 8a       	std	Y+21, r6	; 0x15
     faa:	7e 8a       	std	Y+22, r7	; 0x16
     fac:	8f 8a       	std	Y+23, r8	; 0x17
     fae:	98 8e       	std	Y+24, r9	; 0x18
     fb0:	29 a9       	ldd	r18, Y+49	; 0x31
     fb2:	3a 89       	ldd	r19, Y+18	; 0x12
     fb4:	4b 89       	ldd	r20, Y+19	; 0x13
     fb6:	5c 89       	ldd	r21, Y+20	; 0x14
     fb8:	66 2d       	mov	r22, r6
     fba:	7e 89       	ldd	r23, Y+22	; 0x16
     fbc:	8f 89       	ldd	r24, Y+23	; 0x17
     fbe:	98 8d       	ldd	r25, Y+24	; 0x18
     fc0:	c2 5a       	subi	r28, 0xA2	; 162
     fc2:	df 4f       	sbci	r29, 0xFF	; 255
     fc4:	e2 e1       	ldi	r30, 0x12	; 18
     fc6:	0c 94 69 26 	jmp	0x4cd2	; 0x4cd2 <__epilogue_restores__>

00000fca <__umoddi3>:
     fca:	ab e5       	ldi	r26, 0x5B	; 91
     fcc:	b0 e0       	ldi	r27, 0x00	; 0
     fce:	eb ee       	ldi	r30, 0xEB	; 235
     fd0:	f7 e0       	ldi	r31, 0x07	; 7
     fd2:	0c 94 4d 26 	jmp	0x4c9a	; 0x4c9a <__prologue_saves__>
     fd6:	a8 e0       	ldi	r26, 0x08	; 8
     fd8:	4e 01       	movw	r8, r28
     fda:	08 94       	sec
     fdc:	81 1c       	adc	r8, r1
     fde:	91 1c       	adc	r9, r1
     fe0:	f4 01       	movw	r30, r8
     fe2:	6a 2e       	mov	r6, r26
     fe4:	11 92       	st	Z+, r1
     fe6:	6a 94       	dec	r6
     fe8:	e9 f7       	brne	.-6      	; 0xfe4 <__umoddi3+0x1a>
     fea:	29 83       	std	Y+1, r18	; 0x01
     fec:	3a 83       	std	Y+2, r19	; 0x02
     fee:	4b 83       	std	Y+3, r20	; 0x03
     ff0:	5c 83       	std	Y+4, r21	; 0x04
     ff2:	6d 83       	std	Y+5, r22	; 0x05
     ff4:	7e 83       	std	Y+6, r23	; 0x06
     ff6:	8f 83       	std	Y+7, r24	; 0x07
     ff8:	98 87       	std	Y+8, r25	; 0x08
     ffa:	ce 01       	movw	r24, r28
     ffc:	09 96       	adiw	r24, 0x09	; 9
     ffe:	fc 01       	movw	r30, r24
    1000:	11 92       	st	Z+, r1
    1002:	aa 95       	dec	r26
    1004:	e9 f7       	brne	.-6      	; 0x1000 <__umoddi3+0x36>
    1006:	a9 86       	std	Y+9, r10	; 0x09
    1008:	ba 86       	std	Y+10, r11	; 0x0a
    100a:	cb 86       	std	Y+11, r12	; 0x0b
    100c:	dc 86       	std	Y+12, r13	; 0x0c
    100e:	ed 86       	std	Y+13, r14	; 0x0d
    1010:	fe 86       	std	Y+14, r15	; 0x0e
    1012:	0f 87       	std	Y+15, r16	; 0x0f
    1014:	18 8b       	std	Y+16, r17	; 0x10
    1016:	29 84       	ldd	r2, Y+9	; 0x09
    1018:	3a 84       	ldd	r3, Y+10	; 0x0a
    101a:	4b 84       	ldd	r4, Y+11	; 0x0b
    101c:	5c 84       	ldd	r5, Y+12	; 0x0c
    101e:	ad 84       	ldd	r10, Y+13	; 0x0d
    1020:	be 84       	ldd	r11, Y+14	; 0x0e
    1022:	cf 84       	ldd	r12, Y+15	; 0x0f
    1024:	d8 88       	ldd	r13, Y+16	; 0x10
    1026:	29 81       	ldd	r18, Y+1	; 0x01
    1028:	3a 81       	ldd	r19, Y+2	; 0x02
    102a:	4b 81       	ldd	r20, Y+3	; 0x03
    102c:	5c 81       	ldd	r21, Y+4	; 0x04
    102e:	69 96       	adiw	r28, 0x19	; 25
    1030:	2f af       	std	Y+63, r18	; 0x3f
    1032:	69 97       	sbiw	r28, 0x19	; 25
    1034:	6a 96       	adiw	r28, 0x1a	; 26
    1036:	3f af       	std	Y+63, r19	; 0x3f
    1038:	6a 97       	sbiw	r28, 0x1a	; 26
    103a:	6b 96       	adiw	r28, 0x1b	; 27
    103c:	4f af       	std	Y+63, r20	; 0x3f
    103e:	6b 97       	sbiw	r28, 0x1b	; 27
    1040:	6c 96       	adiw	r28, 0x1c	; 28
    1042:	5f af       	std	Y+63, r21	; 0x3f
    1044:	6c 97       	sbiw	r28, 0x1c	; 28
    1046:	6c 96       	adiw	r28, 0x1c	; 28
    1048:	6c ac       	ldd	r6, Y+60	; 0x3c
    104a:	7d ac       	ldd	r7, Y+61	; 0x3d
    104c:	8e ac       	ldd	r8, Y+62	; 0x3e
    104e:	9f ac       	ldd	r9, Y+63	; 0x3f
    1050:	6c 97       	sbiw	r28, 0x1c	; 28
    1052:	69 aa       	std	Y+49, r6	; 0x31
    1054:	7a aa       	std	Y+50, r7	; 0x32
    1056:	8b aa       	std	Y+51, r8	; 0x33
    1058:	9c aa       	std	Y+52, r9	; 0x34
    105a:	6d 81       	ldd	r22, Y+5	; 0x05
    105c:	7e 81       	ldd	r23, Y+6	; 0x06
    105e:	8f 81       	ldd	r24, Y+7	; 0x07
    1060:	98 85       	ldd	r25, Y+8	; 0x08
    1062:	3b 01       	movw	r6, r22
    1064:	4c 01       	movw	r8, r24
    1066:	6d aa       	std	Y+53, r6	; 0x35
    1068:	7e aa       	std	Y+54, r7	; 0x36
    106a:	8f aa       	std	Y+55, r8	; 0x37
    106c:	98 ae       	std	Y+56, r9	; 0x38
    106e:	a1 14       	cp	r10, r1
    1070:	b1 04       	cpc	r11, r1
    1072:	c1 04       	cpc	r12, r1
    1074:	d1 04       	cpc	r13, r1
    1076:	09 f0       	breq	.+2      	; 0x107a <__umoddi3+0xb0>
    1078:	04 c3       	rjmp	.+1544   	; 0x1682 <__umoddi3+0x6b8>
    107a:	62 14       	cp	r6, r2
    107c:	73 04       	cpc	r7, r3
    107e:	84 04       	cpc	r8, r4
    1080:	95 04       	cpc	r9, r5
    1082:	08 f0       	brcs	.+2      	; 0x1086 <__umoddi3+0xbc>
    1084:	00 c1       	rjmp	.+512    	; 0x1286 <__umoddi3+0x2bc>
    1086:	00 e0       	ldi	r16, 0x00	; 0
    1088:	20 16       	cp	r2, r16
    108a:	00 e0       	ldi	r16, 0x00	; 0
    108c:	30 06       	cpc	r3, r16
    108e:	01 e0       	ldi	r16, 0x01	; 1
    1090:	40 06       	cpc	r4, r16
    1092:	00 e0       	ldi	r16, 0x00	; 0
    1094:	50 06       	cpc	r5, r16
    1096:	88 f4       	brcc	.+34     	; 0x10ba <__umoddi3+0xf0>
    1098:	1f ef       	ldi	r17, 0xFF	; 255
    109a:	21 16       	cp	r2, r17
    109c:	31 04       	cpc	r3, r1
    109e:	41 04       	cpc	r4, r1
    10a0:	51 04       	cpc	r5, r1
    10a2:	39 f0       	breq	.+14     	; 0x10b2 <__umoddi3+0xe8>
    10a4:	30 f0       	brcs	.+12     	; 0x10b2 <__umoddi3+0xe8>
    10a6:	88 e0       	ldi	r24, 0x08	; 8
    10a8:	e8 2e       	mov	r14, r24
    10aa:	f1 2c       	mov	r15, r1
    10ac:	01 2d       	mov	r16, r1
    10ae:	11 2d       	mov	r17, r1
    10b0:	18 c0       	rjmp	.+48     	; 0x10e2 <__umoddi3+0x118>
    10b2:	ee 24       	eor	r14, r14
    10b4:	ff 24       	eor	r15, r15
    10b6:	87 01       	movw	r16, r14
    10b8:	14 c0       	rjmp	.+40     	; 0x10e2 <__umoddi3+0x118>
    10ba:	40 e0       	ldi	r20, 0x00	; 0
    10bc:	24 16       	cp	r2, r20
    10be:	40 e0       	ldi	r20, 0x00	; 0
    10c0:	34 06       	cpc	r3, r20
    10c2:	40 e0       	ldi	r20, 0x00	; 0
    10c4:	44 06       	cpc	r4, r20
    10c6:	41 e0       	ldi	r20, 0x01	; 1
    10c8:	54 06       	cpc	r5, r20
    10ca:	30 f0       	brcs	.+12     	; 0x10d8 <__umoddi3+0x10e>
    10cc:	b8 e1       	ldi	r27, 0x18	; 24
    10ce:	eb 2e       	mov	r14, r27
    10d0:	f1 2c       	mov	r15, r1
    10d2:	01 2d       	mov	r16, r1
    10d4:	11 2d       	mov	r17, r1
    10d6:	05 c0       	rjmp	.+10     	; 0x10e2 <__umoddi3+0x118>
    10d8:	a0 e1       	ldi	r26, 0x10	; 16
    10da:	ea 2e       	mov	r14, r26
    10dc:	f1 2c       	mov	r15, r1
    10de:	01 2d       	mov	r16, r1
    10e0:	11 2d       	mov	r17, r1
    10e2:	d2 01       	movw	r26, r4
    10e4:	c1 01       	movw	r24, r2
    10e6:	0e 2c       	mov	r0, r14
    10e8:	04 c0       	rjmp	.+8      	; 0x10f2 <__umoddi3+0x128>
    10ea:	b6 95       	lsr	r27
    10ec:	a7 95       	ror	r26
    10ee:	97 95       	ror	r25
    10f0:	87 95       	ror	r24
    10f2:	0a 94       	dec	r0
    10f4:	d2 f7       	brpl	.-12     	; 0x10ea <__umoddi3+0x120>
    10f6:	8d 56       	subi	r24, 0x6D	; 109
    10f8:	9f 4f       	sbci	r25, 0xFF	; 255
    10fa:	dc 01       	movw	r26, r24
    10fc:	2c 91       	ld	r18, X
    10fe:	80 e2       	ldi	r24, 0x20	; 32
    1100:	90 e0       	ldi	r25, 0x00	; 0
    1102:	a0 e0       	ldi	r26, 0x00	; 0
    1104:	b0 e0       	ldi	r27, 0x00	; 0
    1106:	8e 19       	sub	r24, r14
    1108:	9f 09       	sbc	r25, r15
    110a:	a0 0b       	sbc	r26, r16
    110c:	b1 0b       	sbc	r27, r17
    110e:	5c 01       	movw	r10, r24
    1110:	6d 01       	movw	r12, r26
    1112:	a2 1a       	sub	r10, r18
    1114:	b1 08       	sbc	r11, r1
    1116:	c1 08       	sbc	r12, r1
    1118:	d1 08       	sbc	r13, r1
    111a:	a9 ae       	std	Y+57, r10	; 0x39
    111c:	ba ae       	std	Y+58, r11	; 0x3a
    111e:	cb ae       	std	Y+59, r12	; 0x3b
    1120:	dc ae       	std	Y+60, r13	; 0x3c
    1122:	a1 14       	cp	r10, r1
    1124:	b1 04       	cpc	r11, r1
    1126:	c1 04       	cpc	r12, r1
    1128:	d1 04       	cpc	r13, r1
    112a:	09 f4       	brne	.+2      	; 0x112e <__umoddi3+0x164>
    112c:	3f c0       	rjmp	.+126    	; 0x11ac <__umoddi3+0x1e2>
    112e:	69 ad       	ldd	r22, Y+57	; 0x39
    1130:	06 2e       	mov	r0, r22
    1132:	04 c0       	rjmp	.+8      	; 0x113c <__umoddi3+0x172>
    1134:	22 0c       	add	r2, r2
    1136:	33 1c       	adc	r3, r3
    1138:	44 1c       	adc	r4, r4
    113a:	55 1c       	adc	r5, r5
    113c:	0a 94       	dec	r0
    113e:	d2 f7       	brpl	.-12     	; 0x1134 <__umoddi3+0x16a>
    1140:	a4 01       	movw	r20, r8
    1142:	93 01       	movw	r18, r6
    1144:	06 2e       	mov	r0, r22
    1146:	04 c0       	rjmp	.+8      	; 0x1150 <__umoddi3+0x186>
    1148:	22 0f       	add	r18, r18
    114a:	33 1f       	adc	r19, r19
    114c:	44 1f       	adc	r20, r20
    114e:	55 1f       	adc	r21, r21
    1150:	0a 94       	dec	r0
    1152:	d2 f7       	brpl	.-12     	; 0x1148 <__umoddi3+0x17e>
    1154:	80 e2       	ldi	r24, 0x20	; 32
    1156:	90 e0       	ldi	r25, 0x00	; 0
    1158:	8a 19       	sub	r24, r10
    115a:	9b 09       	sbc	r25, r11
    115c:	6c 96       	adiw	r28, 0x1c	; 28
    115e:	cc ac       	ldd	r12, Y+60	; 0x3c
    1160:	dd ac       	ldd	r13, Y+61	; 0x3d
    1162:	ee ac       	ldd	r14, Y+62	; 0x3e
    1164:	ff ac       	ldd	r15, Y+63	; 0x3f
    1166:	6c 97       	sbiw	r28, 0x1c	; 28
    1168:	04 c0       	rjmp	.+8      	; 0x1172 <__umoddi3+0x1a8>
    116a:	f6 94       	lsr	r15
    116c:	e7 94       	ror	r14
    116e:	d7 94       	ror	r13
    1170:	c7 94       	ror	r12
    1172:	8a 95       	dec	r24
    1174:	d2 f7       	brpl	.-12     	; 0x116a <__umoddi3+0x1a0>
    1176:	87 01       	movw	r16, r14
    1178:	76 01       	movw	r14, r12
    117a:	e2 2a       	or	r14, r18
    117c:	f3 2a       	or	r15, r19
    117e:	04 2b       	or	r16, r20
    1180:	15 2b       	or	r17, r21
    1182:	ed aa       	std	Y+53, r14	; 0x35
    1184:	fe aa       	std	Y+54, r15	; 0x36
    1186:	0f ab       	std	Y+55, r16	; 0x37
    1188:	18 af       	std	Y+56, r17	; 0x38
    118a:	6c 96       	adiw	r28, 0x1c	; 28
    118c:	8c ad       	ldd	r24, Y+60	; 0x3c
    118e:	9d ad       	ldd	r25, Y+61	; 0x3d
    1190:	ae ad       	ldd	r26, Y+62	; 0x3e
    1192:	bf ad       	ldd	r27, Y+63	; 0x3f
    1194:	6c 97       	sbiw	r28, 0x1c	; 28
    1196:	04 c0       	rjmp	.+8      	; 0x11a0 <__umoddi3+0x1d6>
    1198:	88 0f       	add	r24, r24
    119a:	99 1f       	adc	r25, r25
    119c:	aa 1f       	adc	r26, r26
    119e:	bb 1f       	adc	r27, r27
    11a0:	6a 95       	dec	r22
    11a2:	d2 f7       	brpl	.-12     	; 0x1198 <__umoddi3+0x1ce>
    11a4:	89 ab       	std	Y+49, r24	; 0x31
    11a6:	9a ab       	std	Y+50, r25	; 0x32
    11a8:	ab ab       	std	Y+51, r26	; 0x33
    11aa:	bc ab       	std	Y+52, r27	; 0x34
    11ac:	32 01       	movw	r6, r4
    11ae:	88 24       	eor	r8, r8
    11b0:	99 24       	eor	r9, r9
    11b2:	b2 01       	movw	r22, r4
    11b4:	a1 01       	movw	r20, r2
    11b6:	60 70       	andi	r22, 0x00	; 0
    11b8:	70 70       	andi	r23, 0x00	; 0
    11ba:	21 96       	adiw	r28, 0x01	; 1
    11bc:	4c af       	std	Y+60, r20	; 0x3c
    11be:	5d af       	std	Y+61, r21	; 0x3d
    11c0:	6e af       	std	Y+62, r22	; 0x3e
    11c2:	7f af       	std	Y+63, r23	; 0x3f
    11c4:	21 97       	sbiw	r28, 0x01	; 1
    11c6:	6d a9       	ldd	r22, Y+53	; 0x35
    11c8:	7e a9       	ldd	r23, Y+54	; 0x36
    11ca:	8f a9       	ldd	r24, Y+55	; 0x37
    11cc:	98 ad       	ldd	r25, Y+56	; 0x38
    11ce:	a4 01       	movw	r20, r8
    11d0:	93 01       	movw	r18, r6
    11d2:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    11d6:	7b 01       	movw	r14, r22
    11d8:	8c 01       	movw	r16, r24
    11da:	6d a9       	ldd	r22, Y+53	; 0x35
    11dc:	7e a9       	ldd	r23, Y+54	; 0x36
    11de:	8f a9       	ldd	r24, Y+55	; 0x37
    11e0:	98 ad       	ldd	r25, Y+56	; 0x38
    11e2:	a4 01       	movw	r20, r8
    11e4:	93 01       	movw	r18, r6
    11e6:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    11ea:	ca 01       	movw	r24, r20
    11ec:	b9 01       	movw	r22, r18
    11ee:	21 96       	adiw	r28, 0x01	; 1
    11f0:	2c ad       	ldd	r18, Y+60	; 0x3c
    11f2:	3d ad       	ldd	r19, Y+61	; 0x3d
    11f4:	4e ad       	ldd	r20, Y+62	; 0x3e
    11f6:	5f ad       	ldd	r21, Y+63	; 0x3f
    11f8:	21 97       	sbiw	r28, 0x01	; 1
    11fa:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    11fe:	9b 01       	movw	r18, r22
    1200:	ac 01       	movw	r20, r24
    1202:	87 01       	movw	r16, r14
    1204:	ff 24       	eor	r15, r15
    1206:	ee 24       	eor	r14, r14
    1208:	a9 a8       	ldd	r10, Y+49	; 0x31
    120a:	ba a8       	ldd	r11, Y+50	; 0x32
    120c:	cb a8       	ldd	r12, Y+51	; 0x33
    120e:	dc a8       	ldd	r13, Y+52	; 0x34
    1210:	c6 01       	movw	r24, r12
    1212:	aa 27       	eor	r26, r26
    1214:	bb 27       	eor	r27, r27
    1216:	57 01       	movw	r10, r14
    1218:	68 01       	movw	r12, r16
    121a:	a8 2a       	or	r10, r24
    121c:	b9 2a       	or	r11, r25
    121e:	ca 2a       	or	r12, r26
    1220:	db 2a       	or	r13, r27
    1222:	a2 16       	cp	r10, r18
    1224:	b3 06       	cpc	r11, r19
    1226:	c4 06       	cpc	r12, r20
    1228:	d5 06       	cpc	r13, r21
    122a:	90 f4       	brcc	.+36     	; 0x1250 <__umoddi3+0x286>
    122c:	a2 0c       	add	r10, r2
    122e:	b3 1c       	adc	r11, r3
    1230:	c4 1c       	adc	r12, r4
    1232:	d5 1c       	adc	r13, r5
    1234:	a2 14       	cp	r10, r2
    1236:	b3 04       	cpc	r11, r3
    1238:	c4 04       	cpc	r12, r4
    123a:	d5 04       	cpc	r13, r5
    123c:	48 f0       	brcs	.+18     	; 0x1250 <__umoddi3+0x286>
    123e:	a2 16       	cp	r10, r18
    1240:	b3 06       	cpc	r11, r19
    1242:	c4 06       	cpc	r12, r20
    1244:	d5 06       	cpc	r13, r21
    1246:	20 f4       	brcc	.+8      	; 0x1250 <__umoddi3+0x286>
    1248:	a2 0c       	add	r10, r2
    124a:	b3 1c       	adc	r11, r3
    124c:	c4 1c       	adc	r12, r4
    124e:	d5 1c       	adc	r13, r5
    1250:	a2 1a       	sub	r10, r18
    1252:	b3 0a       	sbc	r11, r19
    1254:	c4 0a       	sbc	r12, r20
    1256:	d5 0a       	sbc	r13, r21
    1258:	c6 01       	movw	r24, r12
    125a:	b5 01       	movw	r22, r10
    125c:	a4 01       	movw	r20, r8
    125e:	93 01       	movw	r18, r6
    1260:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    1264:	7b 01       	movw	r14, r22
    1266:	8c 01       	movw	r16, r24
    1268:	c6 01       	movw	r24, r12
    126a:	b5 01       	movw	r22, r10
    126c:	a4 01       	movw	r20, r8
    126e:	93 01       	movw	r18, r6
    1270:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    1274:	ca 01       	movw	r24, r20
    1276:	b9 01       	movw	r22, r18
    1278:	21 96       	adiw	r28, 0x01	; 1
    127a:	2c ad       	ldd	r18, Y+60	; 0x3c
    127c:	3d ad       	ldd	r19, Y+61	; 0x3d
    127e:	4e ad       	ldd	r20, Y+62	; 0x3e
    1280:	5f ad       	ldd	r21, Y+63	; 0x3f
    1282:	21 97       	sbiw	r28, 0x01	; 1
    1284:	ba c1       	rjmp	.+884    	; 0x15fa <__umoddi3+0x630>
    1286:	21 14       	cp	r2, r1
    1288:	31 04       	cpc	r3, r1
    128a:	41 04       	cpc	r4, r1
    128c:	51 04       	cpc	r5, r1
    128e:	71 f4       	brne	.+28     	; 0x12ac <__umoddi3+0x2e2>
    1290:	61 e0       	ldi	r22, 0x01	; 1
    1292:	70 e0       	ldi	r23, 0x00	; 0
    1294:	80 e0       	ldi	r24, 0x00	; 0
    1296:	90 e0       	ldi	r25, 0x00	; 0
    1298:	20 e0       	ldi	r18, 0x00	; 0
    129a:	30 e0       	ldi	r19, 0x00	; 0
    129c:	40 e0       	ldi	r20, 0x00	; 0
    129e:	50 e0       	ldi	r21, 0x00	; 0
    12a0:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    12a4:	c9 01       	movw	r24, r18
    12a6:	da 01       	movw	r26, r20
    12a8:	1c 01       	movw	r2, r24
    12aa:	2d 01       	movw	r4, r26
    12ac:	00 e0       	ldi	r16, 0x00	; 0
    12ae:	20 16       	cp	r2, r16
    12b0:	00 e0       	ldi	r16, 0x00	; 0
    12b2:	30 06       	cpc	r3, r16
    12b4:	01 e0       	ldi	r16, 0x01	; 1
    12b6:	40 06       	cpc	r4, r16
    12b8:	00 e0       	ldi	r16, 0x00	; 0
    12ba:	50 06       	cpc	r5, r16
    12bc:	88 f4       	brcc	.+34     	; 0x12e0 <__umoddi3+0x316>
    12be:	1f ef       	ldi	r17, 0xFF	; 255
    12c0:	21 16       	cp	r2, r17
    12c2:	31 04       	cpc	r3, r1
    12c4:	41 04       	cpc	r4, r1
    12c6:	51 04       	cpc	r5, r1
    12c8:	39 f0       	breq	.+14     	; 0x12d8 <__umoddi3+0x30e>
    12ca:	30 f0       	brcs	.+12     	; 0x12d8 <__umoddi3+0x30e>
    12cc:	68 e0       	ldi	r22, 0x08	; 8
    12ce:	e6 2e       	mov	r14, r22
    12d0:	f1 2c       	mov	r15, r1
    12d2:	01 2d       	mov	r16, r1
    12d4:	11 2d       	mov	r17, r1
    12d6:	18 c0       	rjmp	.+48     	; 0x1308 <__umoddi3+0x33e>
    12d8:	ee 24       	eor	r14, r14
    12da:	ff 24       	eor	r15, r15
    12dc:	87 01       	movw	r16, r14
    12de:	14 c0       	rjmp	.+40     	; 0x1308 <__umoddi3+0x33e>
    12e0:	40 e0       	ldi	r20, 0x00	; 0
    12e2:	24 16       	cp	r2, r20
    12e4:	40 e0       	ldi	r20, 0x00	; 0
    12e6:	34 06       	cpc	r3, r20
    12e8:	40 e0       	ldi	r20, 0x00	; 0
    12ea:	44 06       	cpc	r4, r20
    12ec:	41 e0       	ldi	r20, 0x01	; 1
    12ee:	54 06       	cpc	r5, r20
    12f0:	30 f0       	brcs	.+12     	; 0x12fe <__umoddi3+0x334>
    12f2:	58 e1       	ldi	r21, 0x18	; 24
    12f4:	e5 2e       	mov	r14, r21
    12f6:	f1 2c       	mov	r15, r1
    12f8:	01 2d       	mov	r16, r1
    12fa:	11 2d       	mov	r17, r1
    12fc:	05 c0       	rjmp	.+10     	; 0x1308 <__umoddi3+0x33e>
    12fe:	40 e1       	ldi	r20, 0x10	; 16
    1300:	e4 2e       	mov	r14, r20
    1302:	f1 2c       	mov	r15, r1
    1304:	01 2d       	mov	r16, r1
    1306:	11 2d       	mov	r17, r1
    1308:	d2 01       	movw	r26, r4
    130a:	c1 01       	movw	r24, r2
    130c:	0e 2c       	mov	r0, r14
    130e:	04 c0       	rjmp	.+8      	; 0x1318 <__umoddi3+0x34e>
    1310:	b6 95       	lsr	r27
    1312:	a7 95       	ror	r26
    1314:	97 95       	ror	r25
    1316:	87 95       	ror	r24
    1318:	0a 94       	dec	r0
    131a:	d2 f7       	brpl	.-12     	; 0x1310 <__umoddi3+0x346>
    131c:	8d 56       	subi	r24, 0x6D	; 109
    131e:	9f 4f       	sbci	r25, 0xFF	; 255
    1320:	dc 01       	movw	r26, r24
    1322:	2c 91       	ld	r18, X
    1324:	30 e2       	ldi	r19, 0x20	; 32
    1326:	a3 2e       	mov	r10, r19
    1328:	b1 2c       	mov	r11, r1
    132a:	c1 2c       	mov	r12, r1
    132c:	d1 2c       	mov	r13, r1
    132e:	d6 01       	movw	r26, r12
    1330:	c5 01       	movw	r24, r10
    1332:	8e 19       	sub	r24, r14
    1334:	9f 09       	sbc	r25, r15
    1336:	a0 0b       	sbc	r26, r16
    1338:	b1 0b       	sbc	r27, r17
    133a:	7c 01       	movw	r14, r24
    133c:	8d 01       	movw	r16, r26
    133e:	e2 1a       	sub	r14, r18
    1340:	f1 08       	sbc	r15, r1
    1342:	01 09       	sbc	r16, r1
    1344:	11 09       	sbc	r17, r1
    1346:	e9 ae       	std	Y+57, r14	; 0x39
    1348:	fa ae       	std	Y+58, r15	; 0x3a
    134a:	0b af       	std	Y+59, r16	; 0x3b
    134c:	1c af       	std	Y+60, r17	; 0x3c
    134e:	e1 14       	cp	r14, r1
    1350:	f1 04       	cpc	r15, r1
    1352:	01 05       	cpc	r16, r1
    1354:	11 05       	cpc	r17, r1
    1356:	39 f4       	brne	.+14     	; 0x1366 <__umoddi3+0x39c>
    1358:	64 01       	movw	r12, r8
    135a:	53 01       	movw	r10, r6
    135c:	a2 18       	sub	r10, r2
    135e:	b3 08       	sbc	r11, r3
    1360:	c4 08       	sbc	r12, r4
    1362:	d5 08       	sbc	r13, r5
    1364:	e2 c0       	rjmp	.+452    	; 0x152a <__umoddi3+0x560>
    1366:	f9 ac       	ldd	r15, Y+57	; 0x39
    1368:	68 96       	adiw	r28, 0x18	; 24
    136a:	ff ae       	std	Y+63, r15	; 0x3f
    136c:	68 97       	sbiw	r28, 0x18	; 24
    136e:	0f 2c       	mov	r0, r15
    1370:	04 c0       	rjmp	.+8      	; 0x137a <__umoddi3+0x3b0>
    1372:	22 0c       	add	r2, r2
    1374:	33 1c       	adc	r3, r3
    1376:	44 1c       	adc	r4, r4
    1378:	55 1c       	adc	r5, r5
    137a:	0a 94       	dec	r0
    137c:	d2 f7       	brpl	.-12     	; 0x1372 <__umoddi3+0x3a8>
    137e:	8a 2d       	mov	r24, r10
    1380:	8f 19       	sub	r24, r15
    1382:	64 01       	movw	r12, r8
    1384:	53 01       	movw	r10, r6
    1386:	08 2e       	mov	r0, r24
    1388:	04 c0       	rjmp	.+8      	; 0x1392 <__umoddi3+0x3c8>
    138a:	d6 94       	lsr	r13
    138c:	c7 94       	ror	r12
    138e:	b7 94       	ror	r11
    1390:	a7 94       	ror	r10
    1392:	0a 94       	dec	r0
    1394:	d2 f7       	brpl	.-12     	; 0x138a <__umoddi3+0x3c0>
    1396:	a4 01       	movw	r20, r8
    1398:	93 01       	movw	r18, r6
    139a:	04 c0       	rjmp	.+8      	; 0x13a4 <__umoddi3+0x3da>
    139c:	22 0f       	add	r18, r18
    139e:	33 1f       	adc	r19, r19
    13a0:	44 1f       	adc	r20, r20
    13a2:	55 1f       	adc	r21, r21
    13a4:	fa 94       	dec	r15
    13a6:	d2 f7       	brpl	.-12     	; 0x139c <__umoddi3+0x3d2>
    13a8:	6c 96       	adiw	r28, 0x1c	; 28
    13aa:	6c ac       	ldd	r6, Y+60	; 0x3c
    13ac:	7d ac       	ldd	r7, Y+61	; 0x3d
    13ae:	8e ac       	ldd	r8, Y+62	; 0x3e
    13b0:	9f ac       	ldd	r9, Y+63	; 0x3f
    13b2:	6c 97       	sbiw	r28, 0x1c	; 28
    13b4:	04 c0       	rjmp	.+8      	; 0x13be <__umoddi3+0x3f4>
    13b6:	96 94       	lsr	r9
    13b8:	87 94       	ror	r8
    13ba:	77 94       	ror	r7
    13bc:	67 94       	ror	r6
    13be:	8a 95       	dec	r24
    13c0:	d2 f7       	brpl	.-12     	; 0x13b6 <__umoddi3+0x3ec>
    13c2:	84 01       	movw	r16, r8
    13c4:	73 01       	movw	r14, r6
    13c6:	e2 2a       	or	r14, r18
    13c8:	f3 2a       	or	r15, r19
    13ca:	04 2b       	or	r16, r20
    13cc:	15 2b       	or	r17, r21
    13ce:	ed a6       	std	Y+45, r14	; 0x2d
    13d0:	fe a6       	std	Y+46, r15	; 0x2e
    13d2:	0f a7       	std	Y+47, r16	; 0x2f
    13d4:	18 ab       	std	Y+48, r17	; 0x30
    13d6:	32 01       	movw	r6, r4
    13d8:	88 24       	eor	r8, r8
    13da:	99 24       	eor	r9, r9
    13dc:	b2 01       	movw	r22, r4
    13de:	a1 01       	movw	r20, r2
    13e0:	60 70       	andi	r22, 0x00	; 0
    13e2:	70 70       	andi	r23, 0x00	; 0
    13e4:	25 96       	adiw	r28, 0x05	; 5
    13e6:	4c af       	std	Y+60, r20	; 0x3c
    13e8:	5d af       	std	Y+61, r21	; 0x3d
    13ea:	6e af       	std	Y+62, r22	; 0x3e
    13ec:	7f af       	std	Y+63, r23	; 0x3f
    13ee:	25 97       	sbiw	r28, 0x05	; 5
    13f0:	c6 01       	movw	r24, r12
    13f2:	b5 01       	movw	r22, r10
    13f4:	a4 01       	movw	r20, r8
    13f6:	93 01       	movw	r18, r6
    13f8:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    13fc:	7b 01       	movw	r14, r22
    13fe:	8c 01       	movw	r16, r24
    1400:	c6 01       	movw	r24, r12
    1402:	b5 01       	movw	r22, r10
    1404:	a4 01       	movw	r20, r8
    1406:	93 01       	movw	r18, r6
    1408:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    140c:	ca 01       	movw	r24, r20
    140e:	b9 01       	movw	r22, r18
    1410:	25 96       	adiw	r28, 0x05	; 5
    1412:	2c ad       	ldd	r18, Y+60	; 0x3c
    1414:	3d ad       	ldd	r19, Y+61	; 0x3d
    1416:	4e ad       	ldd	r20, Y+62	; 0x3e
    1418:	5f ad       	ldd	r21, Y+63	; 0x3f
    141a:	25 97       	sbiw	r28, 0x05	; 5
    141c:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    1420:	9b 01       	movw	r18, r22
    1422:	ac 01       	movw	r20, r24
    1424:	87 01       	movw	r16, r14
    1426:	ff 24       	eor	r15, r15
    1428:	ee 24       	eor	r14, r14
    142a:	ad a4       	ldd	r10, Y+45	; 0x2d
    142c:	be a4       	ldd	r11, Y+46	; 0x2e
    142e:	cf a4       	ldd	r12, Y+47	; 0x2f
    1430:	d8 a8       	ldd	r13, Y+48	; 0x30
    1432:	c6 01       	movw	r24, r12
    1434:	aa 27       	eor	r26, r26
    1436:	bb 27       	eor	r27, r27
    1438:	5c 01       	movw	r10, r24
    143a:	6d 01       	movw	r12, r26
    143c:	ae 28       	or	r10, r14
    143e:	bf 28       	or	r11, r15
    1440:	c0 2a       	or	r12, r16
    1442:	d1 2a       	or	r13, r17
    1444:	a2 16       	cp	r10, r18
    1446:	b3 06       	cpc	r11, r19
    1448:	c4 06       	cpc	r12, r20
    144a:	d5 06       	cpc	r13, r21
    144c:	90 f4       	brcc	.+36     	; 0x1472 <__umoddi3+0x4a8>
    144e:	a2 0c       	add	r10, r2
    1450:	b3 1c       	adc	r11, r3
    1452:	c4 1c       	adc	r12, r4
    1454:	d5 1c       	adc	r13, r5
    1456:	a2 14       	cp	r10, r2
    1458:	b3 04       	cpc	r11, r3
    145a:	c4 04       	cpc	r12, r4
    145c:	d5 04       	cpc	r13, r5
    145e:	48 f0       	brcs	.+18     	; 0x1472 <__umoddi3+0x4a8>
    1460:	a2 16       	cp	r10, r18
    1462:	b3 06       	cpc	r11, r19
    1464:	c4 06       	cpc	r12, r20
    1466:	d5 06       	cpc	r13, r21
    1468:	20 f4       	brcc	.+8      	; 0x1472 <__umoddi3+0x4a8>
    146a:	a2 0c       	add	r10, r2
    146c:	b3 1c       	adc	r11, r3
    146e:	c4 1c       	adc	r12, r4
    1470:	d5 1c       	adc	r13, r5
    1472:	a2 1a       	sub	r10, r18
    1474:	b3 0a       	sbc	r11, r19
    1476:	c4 0a       	sbc	r12, r20
    1478:	d5 0a       	sbc	r13, r21
    147a:	c6 01       	movw	r24, r12
    147c:	b5 01       	movw	r22, r10
    147e:	a4 01       	movw	r20, r8
    1480:	93 01       	movw	r18, r6
    1482:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    1486:	7b 01       	movw	r14, r22
    1488:	8c 01       	movw	r16, r24
    148a:	c6 01       	movw	r24, r12
    148c:	b5 01       	movw	r22, r10
    148e:	a4 01       	movw	r20, r8
    1490:	93 01       	movw	r18, r6
    1492:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    1496:	ca 01       	movw	r24, r20
    1498:	b9 01       	movw	r22, r18
    149a:	25 96       	adiw	r28, 0x05	; 5
    149c:	2c ad       	ldd	r18, Y+60	; 0x3c
    149e:	3d ad       	ldd	r19, Y+61	; 0x3d
    14a0:	4e ad       	ldd	r20, Y+62	; 0x3e
    14a2:	5f ad       	ldd	r21, Y+63	; 0x3f
    14a4:	25 97       	sbiw	r28, 0x05	; 5
    14a6:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    14aa:	9b 01       	movw	r18, r22
    14ac:	ac 01       	movw	r20, r24
    14ae:	87 01       	movw	r16, r14
    14b0:	ff 24       	eor	r15, r15
    14b2:	ee 24       	eor	r14, r14
    14b4:	8d a5       	ldd	r24, Y+45	; 0x2d
    14b6:	9e a5       	ldd	r25, Y+46	; 0x2e
    14b8:	af a5       	ldd	r26, Y+47	; 0x2f
    14ba:	b8 a9       	ldd	r27, Y+48	; 0x30
    14bc:	a0 70       	andi	r26, 0x00	; 0
    14be:	b0 70       	andi	r27, 0x00	; 0
    14c0:	57 01       	movw	r10, r14
    14c2:	68 01       	movw	r12, r16
    14c4:	a8 2a       	or	r10, r24
    14c6:	b9 2a       	or	r11, r25
    14c8:	ca 2a       	or	r12, r26
    14ca:	db 2a       	or	r13, r27
    14cc:	a2 16       	cp	r10, r18
    14ce:	b3 06       	cpc	r11, r19
    14d0:	c4 06       	cpc	r12, r20
    14d2:	d5 06       	cpc	r13, r21
    14d4:	90 f4       	brcc	.+36     	; 0x14fa <__umoddi3+0x530>
    14d6:	a2 0c       	add	r10, r2
    14d8:	b3 1c       	adc	r11, r3
    14da:	c4 1c       	adc	r12, r4
    14dc:	d5 1c       	adc	r13, r5
    14de:	a2 14       	cp	r10, r2
    14e0:	b3 04       	cpc	r11, r3
    14e2:	c4 04       	cpc	r12, r4
    14e4:	d5 04       	cpc	r13, r5
    14e6:	48 f0       	brcs	.+18     	; 0x14fa <__umoddi3+0x530>
    14e8:	a2 16       	cp	r10, r18
    14ea:	b3 06       	cpc	r11, r19
    14ec:	c4 06       	cpc	r12, r20
    14ee:	d5 06       	cpc	r13, r21
    14f0:	20 f4       	brcc	.+8      	; 0x14fa <__umoddi3+0x530>
    14f2:	a2 0c       	add	r10, r2
    14f4:	b3 1c       	adc	r11, r3
    14f6:	c4 1c       	adc	r12, r4
    14f8:	d5 1c       	adc	r13, r5
    14fa:	6c 96       	adiw	r28, 0x1c	; 28
    14fc:	ec ac       	ldd	r14, Y+60	; 0x3c
    14fe:	fd ac       	ldd	r15, Y+61	; 0x3d
    1500:	0e ad       	ldd	r16, Y+62	; 0x3e
    1502:	1f ad       	ldd	r17, Y+63	; 0x3f
    1504:	6c 97       	sbiw	r28, 0x1c	; 28
    1506:	68 96       	adiw	r28, 0x18	; 24
    1508:	0f ac       	ldd	r0, Y+63	; 0x3f
    150a:	68 97       	sbiw	r28, 0x18	; 24
    150c:	04 c0       	rjmp	.+8      	; 0x1516 <__umoddi3+0x54c>
    150e:	ee 0c       	add	r14, r14
    1510:	ff 1c       	adc	r15, r15
    1512:	00 1f       	adc	r16, r16
    1514:	11 1f       	adc	r17, r17
    1516:	0a 94       	dec	r0
    1518:	d2 f7       	brpl	.-12     	; 0x150e <__umoddi3+0x544>
    151a:	e9 aa       	std	Y+49, r14	; 0x31
    151c:	fa aa       	std	Y+50, r15	; 0x32
    151e:	0b ab       	std	Y+51, r16	; 0x33
    1520:	1c ab       	std	Y+52, r17	; 0x34
    1522:	a2 1a       	sub	r10, r18
    1524:	b3 0a       	sbc	r11, r19
    1526:	c4 0a       	sbc	r12, r20
    1528:	d5 0a       	sbc	r13, r21
    152a:	32 01       	movw	r6, r4
    152c:	88 24       	eor	r8, r8
    152e:	99 24       	eor	r9, r9
    1530:	b2 01       	movw	r22, r4
    1532:	a1 01       	movw	r20, r2
    1534:	60 70       	andi	r22, 0x00	; 0
    1536:	70 70       	andi	r23, 0x00	; 0
    1538:	29 96       	adiw	r28, 0x09	; 9
    153a:	4c af       	std	Y+60, r20	; 0x3c
    153c:	5d af       	std	Y+61, r21	; 0x3d
    153e:	6e af       	std	Y+62, r22	; 0x3e
    1540:	7f af       	std	Y+63, r23	; 0x3f
    1542:	29 97       	sbiw	r28, 0x09	; 9
    1544:	c6 01       	movw	r24, r12
    1546:	b5 01       	movw	r22, r10
    1548:	a4 01       	movw	r20, r8
    154a:	93 01       	movw	r18, r6
    154c:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    1550:	7b 01       	movw	r14, r22
    1552:	8c 01       	movw	r16, r24
    1554:	c6 01       	movw	r24, r12
    1556:	b5 01       	movw	r22, r10
    1558:	a4 01       	movw	r20, r8
    155a:	93 01       	movw	r18, r6
    155c:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    1560:	ca 01       	movw	r24, r20
    1562:	b9 01       	movw	r22, r18
    1564:	29 96       	adiw	r28, 0x09	; 9
    1566:	2c ad       	ldd	r18, Y+60	; 0x3c
    1568:	3d ad       	ldd	r19, Y+61	; 0x3d
    156a:	4e ad       	ldd	r20, Y+62	; 0x3e
    156c:	5f ad       	ldd	r21, Y+63	; 0x3f
    156e:	29 97       	sbiw	r28, 0x09	; 9
    1570:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    1574:	9b 01       	movw	r18, r22
    1576:	ac 01       	movw	r20, r24
    1578:	87 01       	movw	r16, r14
    157a:	ff 24       	eor	r15, r15
    157c:	ee 24       	eor	r14, r14
    157e:	a9 a8       	ldd	r10, Y+49	; 0x31
    1580:	ba a8       	ldd	r11, Y+50	; 0x32
    1582:	cb a8       	ldd	r12, Y+51	; 0x33
    1584:	dc a8       	ldd	r13, Y+52	; 0x34
    1586:	c6 01       	movw	r24, r12
    1588:	aa 27       	eor	r26, r26
    158a:	bb 27       	eor	r27, r27
    158c:	57 01       	movw	r10, r14
    158e:	68 01       	movw	r12, r16
    1590:	a8 2a       	or	r10, r24
    1592:	b9 2a       	or	r11, r25
    1594:	ca 2a       	or	r12, r26
    1596:	db 2a       	or	r13, r27
    1598:	a2 16       	cp	r10, r18
    159a:	b3 06       	cpc	r11, r19
    159c:	c4 06       	cpc	r12, r20
    159e:	d5 06       	cpc	r13, r21
    15a0:	90 f4       	brcc	.+36     	; 0x15c6 <__umoddi3+0x5fc>
    15a2:	a2 0c       	add	r10, r2
    15a4:	b3 1c       	adc	r11, r3
    15a6:	c4 1c       	adc	r12, r4
    15a8:	d5 1c       	adc	r13, r5
    15aa:	a2 14       	cp	r10, r2
    15ac:	b3 04       	cpc	r11, r3
    15ae:	c4 04       	cpc	r12, r4
    15b0:	d5 04       	cpc	r13, r5
    15b2:	48 f0       	brcs	.+18     	; 0x15c6 <__umoddi3+0x5fc>
    15b4:	a2 16       	cp	r10, r18
    15b6:	b3 06       	cpc	r11, r19
    15b8:	c4 06       	cpc	r12, r20
    15ba:	d5 06       	cpc	r13, r21
    15bc:	20 f4       	brcc	.+8      	; 0x15c6 <__umoddi3+0x5fc>
    15be:	a2 0c       	add	r10, r2
    15c0:	b3 1c       	adc	r11, r3
    15c2:	c4 1c       	adc	r12, r4
    15c4:	d5 1c       	adc	r13, r5
    15c6:	a2 1a       	sub	r10, r18
    15c8:	b3 0a       	sbc	r11, r19
    15ca:	c4 0a       	sbc	r12, r20
    15cc:	d5 0a       	sbc	r13, r21
    15ce:	c6 01       	movw	r24, r12
    15d0:	b5 01       	movw	r22, r10
    15d2:	a4 01       	movw	r20, r8
    15d4:	93 01       	movw	r18, r6
    15d6:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    15da:	7b 01       	movw	r14, r22
    15dc:	8c 01       	movw	r16, r24
    15de:	c6 01       	movw	r24, r12
    15e0:	b5 01       	movw	r22, r10
    15e2:	a4 01       	movw	r20, r8
    15e4:	93 01       	movw	r18, r6
    15e6:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    15ea:	ca 01       	movw	r24, r20
    15ec:	b9 01       	movw	r22, r18
    15ee:	29 96       	adiw	r28, 0x09	; 9
    15f0:	2c ad       	ldd	r18, Y+60	; 0x3c
    15f2:	3d ad       	ldd	r19, Y+61	; 0x3d
    15f4:	4e ad       	ldd	r20, Y+62	; 0x3e
    15f6:	5f ad       	ldd	r21, Y+63	; 0x3f
    15f8:	29 97       	sbiw	r28, 0x09	; 9
    15fa:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    15fe:	9b 01       	movw	r18, r22
    1600:	ac 01       	movw	r20, r24
    1602:	87 01       	movw	r16, r14
    1604:	ff 24       	eor	r15, r15
    1606:	ee 24       	eor	r14, r14
    1608:	89 a9       	ldd	r24, Y+49	; 0x31
    160a:	9a a9       	ldd	r25, Y+50	; 0x32
    160c:	ab a9       	ldd	r26, Y+51	; 0x33
    160e:	bc a9       	ldd	r27, Y+52	; 0x34
    1610:	a0 70       	andi	r26, 0x00	; 0
    1612:	b0 70       	andi	r27, 0x00	; 0
    1614:	e8 2a       	or	r14, r24
    1616:	f9 2a       	or	r15, r25
    1618:	0a 2b       	or	r16, r26
    161a:	1b 2b       	or	r17, r27
    161c:	e2 16       	cp	r14, r18
    161e:	f3 06       	cpc	r15, r19
    1620:	04 07       	cpc	r16, r20
    1622:	15 07       	cpc	r17, r21
    1624:	90 f4       	brcc	.+36     	; 0x164a <__umoddi3+0x680>
    1626:	e2 0c       	add	r14, r2
    1628:	f3 1c       	adc	r15, r3
    162a:	04 1d       	adc	r16, r4
    162c:	15 1d       	adc	r17, r5
    162e:	e2 14       	cp	r14, r2
    1630:	f3 04       	cpc	r15, r3
    1632:	04 05       	cpc	r16, r4
    1634:	15 05       	cpc	r17, r5
    1636:	48 f0       	brcs	.+18     	; 0x164a <__umoddi3+0x680>
    1638:	e2 16       	cp	r14, r18
    163a:	f3 06       	cpc	r15, r19
    163c:	04 07       	cpc	r16, r20
    163e:	15 07       	cpc	r17, r21
    1640:	20 f4       	brcc	.+8      	; 0x164a <__umoddi3+0x680>
    1642:	e2 0c       	add	r14, r2
    1644:	f3 1c       	adc	r15, r3
    1646:	04 1d       	adc	r16, r4
    1648:	15 1d       	adc	r17, r5
    164a:	e2 1a       	sub	r14, r18
    164c:	f3 0a       	sbc	r15, r19
    164e:	04 0b       	sbc	r16, r20
    1650:	15 0b       	sbc	r17, r21
    1652:	d8 01       	movw	r26, r16
    1654:	c7 01       	movw	r24, r14
    1656:	09 ac       	ldd	r0, Y+57	; 0x39
    1658:	04 c0       	rjmp	.+8      	; 0x1662 <__umoddi3+0x698>
    165a:	b6 95       	lsr	r27
    165c:	a7 95       	ror	r26
    165e:	97 95       	ror	r25
    1660:	87 95       	ror	r24
    1662:	0a 94       	dec	r0
    1664:	d2 f7       	brpl	.-12     	; 0x165a <__umoddi3+0x690>
    1666:	89 8b       	std	Y+17, r24	; 0x11
    1668:	9a 8b       	std	Y+18, r25	; 0x12
    166a:	ab 8b       	std	Y+19, r26	; 0x13
    166c:	bc 8b       	std	Y+20, r27	; 0x14
    166e:	1d 8a       	std	Y+21, r1	; 0x15
    1670:	1e 8a       	std	Y+22, r1	; 0x16
    1672:	1f 8a       	std	Y+23, r1	; 0x17
    1674:	18 8e       	std	Y+24, r1	; 0x18
    1676:	28 2f       	mov	r18, r24
    1678:	3a 89       	ldd	r19, Y+18	; 0x12
    167a:	4b 89       	ldd	r20, Y+19	; 0x13
    167c:	5c 89       	ldd	r21, Y+20	; 0x14
    167e:	6d 89       	ldd	r22, Y+21	; 0x15
    1680:	0c c3       	rjmp	.+1560   	; 0x1c9a <__umoddi3+0xcd0>
    1682:	6a 14       	cp	r6, r10
    1684:	7b 04       	cpc	r7, r11
    1686:	8c 04       	cpc	r8, r12
    1688:	9d 04       	cpc	r9, r13
    168a:	08 f4       	brcc	.+2      	; 0x168e <__umoddi3+0x6c4>
    168c:	09 c3       	rjmp	.+1554   	; 0x1ca0 <__umoddi3+0xcd6>
    168e:	00 e0       	ldi	r16, 0x00	; 0
    1690:	a0 16       	cp	r10, r16
    1692:	00 e0       	ldi	r16, 0x00	; 0
    1694:	b0 06       	cpc	r11, r16
    1696:	01 e0       	ldi	r16, 0x01	; 1
    1698:	c0 06       	cpc	r12, r16
    169a:	00 e0       	ldi	r16, 0x00	; 0
    169c:	d0 06       	cpc	r13, r16
    169e:	88 f4       	brcc	.+34     	; 0x16c2 <__umoddi3+0x6f8>
    16a0:	1f ef       	ldi	r17, 0xFF	; 255
    16a2:	a1 16       	cp	r10, r17
    16a4:	b1 04       	cpc	r11, r1
    16a6:	c1 04       	cpc	r12, r1
    16a8:	d1 04       	cpc	r13, r1
    16aa:	39 f0       	breq	.+14     	; 0x16ba <__umoddi3+0x6f0>
    16ac:	30 f0       	brcs	.+12     	; 0x16ba <__umoddi3+0x6f0>
    16ae:	28 e0       	ldi	r18, 0x08	; 8
    16b0:	e2 2e       	mov	r14, r18
    16b2:	f1 2c       	mov	r15, r1
    16b4:	01 2d       	mov	r16, r1
    16b6:	11 2d       	mov	r17, r1
    16b8:	18 c0       	rjmp	.+48     	; 0x16ea <__umoddi3+0x720>
    16ba:	ee 24       	eor	r14, r14
    16bc:	ff 24       	eor	r15, r15
    16be:	87 01       	movw	r16, r14
    16c0:	14 c0       	rjmp	.+40     	; 0x16ea <__umoddi3+0x720>
    16c2:	40 e0       	ldi	r20, 0x00	; 0
    16c4:	a4 16       	cp	r10, r20
    16c6:	40 e0       	ldi	r20, 0x00	; 0
    16c8:	b4 06       	cpc	r11, r20
    16ca:	40 e0       	ldi	r20, 0x00	; 0
    16cc:	c4 06       	cpc	r12, r20
    16ce:	41 e0       	ldi	r20, 0x01	; 1
    16d0:	d4 06       	cpc	r13, r20
    16d2:	30 f0       	brcs	.+12     	; 0x16e0 <__umoddi3+0x716>
    16d4:	98 e1       	ldi	r25, 0x18	; 24
    16d6:	e9 2e       	mov	r14, r25
    16d8:	f1 2c       	mov	r15, r1
    16da:	01 2d       	mov	r16, r1
    16dc:	11 2d       	mov	r17, r1
    16de:	05 c0       	rjmp	.+10     	; 0x16ea <__umoddi3+0x720>
    16e0:	80 e1       	ldi	r24, 0x10	; 16
    16e2:	e8 2e       	mov	r14, r24
    16e4:	f1 2c       	mov	r15, r1
    16e6:	01 2d       	mov	r16, r1
    16e8:	11 2d       	mov	r17, r1
    16ea:	d6 01       	movw	r26, r12
    16ec:	c5 01       	movw	r24, r10
    16ee:	0e 2c       	mov	r0, r14
    16f0:	04 c0       	rjmp	.+8      	; 0x16fa <__umoddi3+0x730>
    16f2:	b6 95       	lsr	r27
    16f4:	a7 95       	ror	r26
    16f6:	97 95       	ror	r25
    16f8:	87 95       	ror	r24
    16fa:	0a 94       	dec	r0
    16fc:	d2 f7       	brpl	.-12     	; 0x16f2 <__umoddi3+0x728>
    16fe:	8d 56       	subi	r24, 0x6D	; 109
    1700:	9f 4f       	sbci	r25, 0xFF	; 255
    1702:	dc 01       	movw	r26, r24
    1704:	2c 91       	ld	r18, X
    1706:	80 e2       	ldi	r24, 0x20	; 32
    1708:	90 e0       	ldi	r25, 0x00	; 0
    170a:	a0 e0       	ldi	r26, 0x00	; 0
    170c:	b0 e0       	ldi	r27, 0x00	; 0
    170e:	8e 19       	sub	r24, r14
    1710:	9f 09       	sbc	r25, r15
    1712:	a0 0b       	sbc	r26, r16
    1714:	b1 0b       	sbc	r27, r17
    1716:	82 1b       	sub	r24, r18
    1718:	91 09       	sbc	r25, r1
    171a:	a1 09       	sbc	r26, r1
    171c:	b1 09       	sbc	r27, r1
    171e:	00 97       	sbiw	r24, 0x00	; 0
    1720:	a1 05       	cpc	r26, r1
    1722:	b1 05       	cpc	r27, r1
    1724:	09 f0       	breq	.+2      	; 0x1728 <__umoddi3+0x75e>
    1726:	4f c0       	rjmp	.+158    	; 0x17c6 <__umoddi3+0x7fc>
    1728:	a6 14       	cp	r10, r6
    172a:	b7 04       	cpc	r11, r7
    172c:	c8 04       	cpc	r12, r8
    172e:	d9 04       	cpc	r13, r9
    1730:	58 f0       	brcs	.+22     	; 0x1748 <__umoddi3+0x77e>
    1732:	6c 96       	adiw	r28, 0x1c	; 28
    1734:	ec ac       	ldd	r14, Y+60	; 0x3c
    1736:	fd ac       	ldd	r15, Y+61	; 0x3d
    1738:	0e ad       	ldd	r16, Y+62	; 0x3e
    173a:	1f ad       	ldd	r17, Y+63	; 0x3f
    173c:	6c 97       	sbiw	r28, 0x1c	; 28
    173e:	e2 14       	cp	r14, r2
    1740:	f3 04       	cpc	r15, r3
    1742:	04 05       	cpc	r16, r4
    1744:	15 05       	cpc	r17, r5
    1746:	68 f1       	brcs	.+90     	; 0x17a2 <__umoddi3+0x7d8>
    1748:	6c 96       	adiw	r28, 0x1c	; 28
    174a:	ec ac       	ldd	r14, Y+60	; 0x3c
    174c:	fd ac       	ldd	r15, Y+61	; 0x3d
    174e:	0e ad       	ldd	r16, Y+62	; 0x3e
    1750:	1f ad       	ldd	r17, Y+63	; 0x3f
    1752:	6c 97       	sbiw	r28, 0x1c	; 28
    1754:	e2 18       	sub	r14, r2
    1756:	f3 08       	sbc	r15, r3
    1758:	04 09       	sbc	r16, r4
    175a:	15 09       	sbc	r17, r5
    175c:	a4 01       	movw	r20, r8
    175e:	93 01       	movw	r18, r6
    1760:	2a 19       	sub	r18, r10
    1762:	3b 09       	sbc	r19, r11
    1764:	4c 09       	sbc	r20, r12
    1766:	5d 09       	sbc	r21, r13
    1768:	aa 24       	eor	r10, r10
    176a:	bb 24       	eor	r11, r11
    176c:	65 01       	movw	r12, r10
    176e:	6c 96       	adiw	r28, 0x1c	; 28
    1770:	6c ad       	ldd	r22, Y+60	; 0x3c
    1772:	7d ad       	ldd	r23, Y+61	; 0x3d
    1774:	8e ad       	ldd	r24, Y+62	; 0x3e
    1776:	9f ad       	ldd	r25, Y+63	; 0x3f
    1778:	6c 97       	sbiw	r28, 0x1c	; 28
    177a:	6e 15       	cp	r22, r14
    177c:	7f 05       	cpc	r23, r15
    177e:	80 07       	cpc	r24, r16
    1780:	91 07       	cpc	r25, r17
    1782:	28 f4       	brcc	.+10     	; 0x178e <__umoddi3+0x7c4>
    1784:	b1 e0       	ldi	r27, 0x01	; 1
    1786:	ab 2e       	mov	r10, r27
    1788:	b1 2c       	mov	r11, r1
    178a:	c1 2c       	mov	r12, r1
    178c:	d1 2c       	mov	r13, r1
    178e:	da 01       	movw	r26, r20
    1790:	c9 01       	movw	r24, r18
    1792:	8a 19       	sub	r24, r10
    1794:	9b 09       	sbc	r25, r11
    1796:	ac 09       	sbc	r26, r12
    1798:	bd 09       	sbc	r27, r13
    179a:	8d ab       	std	Y+53, r24	; 0x35
    179c:	9e ab       	std	Y+54, r25	; 0x36
    179e:	af ab       	std	Y+55, r26	; 0x37
    17a0:	b8 af       	std	Y+56, r27	; 0x38
    17a2:	e9 8a       	std	Y+17, r14	; 0x11
    17a4:	fa 8a       	std	Y+18, r15	; 0x12
    17a6:	0b 8b       	std	Y+19, r16	; 0x13
    17a8:	1c 8b       	std	Y+20, r17	; 0x14
    17aa:	6d a8       	ldd	r6, Y+53	; 0x35
    17ac:	7e a8       	ldd	r7, Y+54	; 0x36
    17ae:	8f a8       	ldd	r8, Y+55	; 0x37
    17b0:	98 ac       	ldd	r9, Y+56	; 0x38
    17b2:	6d 8a       	std	Y+21, r6	; 0x15
    17b4:	7e 8a       	std	Y+22, r7	; 0x16
    17b6:	8f 8a       	std	Y+23, r8	; 0x17
    17b8:	98 8e       	std	Y+24, r9	; 0x18
    17ba:	2e 2d       	mov	r18, r14
    17bc:	3a 89       	ldd	r19, Y+18	; 0x12
    17be:	4b 89       	ldd	r20, Y+19	; 0x13
    17c0:	5c 89       	ldd	r21, Y+20	; 0x14
    17c2:	6d a9       	ldd	r22, Y+53	; 0x35
    17c4:	6a c2       	rjmp	.+1236   	; 0x1c9a <__umoddi3+0xcd0>
    17c6:	67 96       	adiw	r28, 0x17	; 23
    17c8:	8f af       	std	Y+63, r24	; 0x3f
    17ca:	67 97       	sbiw	r28, 0x17	; 23
    17cc:	a6 01       	movw	r20, r12
    17ce:	95 01       	movw	r18, r10
    17d0:	08 2e       	mov	r0, r24
    17d2:	04 c0       	rjmp	.+8      	; 0x17dc <__umoddi3+0x812>
    17d4:	22 0f       	add	r18, r18
    17d6:	33 1f       	adc	r19, r19
    17d8:	44 1f       	adc	r20, r20
    17da:	55 1f       	adc	r21, r21
    17dc:	0a 94       	dec	r0
    17de:	d2 f7       	brpl	.-12     	; 0x17d4 <__umoddi3+0x80a>
    17e0:	a0 e2       	ldi	r26, 0x20	; 32
    17e2:	aa 2e       	mov	r10, r26
    17e4:	a8 1a       	sub	r10, r24
    17e6:	66 96       	adiw	r28, 0x16	; 22
    17e8:	af ae       	std	Y+63, r10	; 0x3f
    17ea:	66 97       	sbiw	r28, 0x16	; 22
    17ec:	d2 01       	movw	r26, r4
    17ee:	c1 01       	movw	r24, r2
    17f0:	04 c0       	rjmp	.+8      	; 0x17fa <__umoddi3+0x830>
    17f2:	b6 95       	lsr	r27
    17f4:	a7 95       	ror	r26
    17f6:	97 95       	ror	r25
    17f8:	87 95       	ror	r24
    17fa:	aa 94       	dec	r10
    17fc:	d2 f7       	brpl	.-12     	; 0x17f2 <__umoddi3+0x828>
    17fe:	6c 01       	movw	r12, r24
    1800:	7d 01       	movw	r14, r26
    1802:	c2 2a       	or	r12, r18
    1804:	d3 2a       	or	r13, r19
    1806:	e4 2a       	or	r14, r20
    1808:	f5 2a       	or	r15, r21
    180a:	c9 a6       	std	Y+41, r12	; 0x29
    180c:	da a6       	std	Y+42, r13	; 0x2a
    180e:	eb a6       	std	Y+43, r14	; 0x2b
    1810:	fc a6       	std	Y+44, r15	; 0x2c
    1812:	82 01       	movw	r16, r4
    1814:	71 01       	movw	r14, r2
    1816:	67 96       	adiw	r28, 0x17	; 23
    1818:	0f ac       	ldd	r0, Y+63	; 0x3f
    181a:	67 97       	sbiw	r28, 0x17	; 23
    181c:	04 c0       	rjmp	.+8      	; 0x1826 <__umoddi3+0x85c>
    181e:	ee 0c       	add	r14, r14
    1820:	ff 1c       	adc	r15, r15
    1822:	00 1f       	adc	r16, r16
    1824:	11 1f       	adc	r17, r17
    1826:	0a 94       	dec	r0
    1828:	d2 f7       	brpl	.-12     	; 0x181e <__umoddi3+0x854>
    182a:	ed a2       	std	Y+37, r14	; 0x25
    182c:	fe a2       	std	Y+38, r15	; 0x26
    182e:	0f a3       	std	Y+39, r16	; 0x27
    1830:	18 a7       	std	Y+40, r17	; 0x28
    1832:	64 01       	movw	r12, r8
    1834:	53 01       	movw	r10, r6
    1836:	66 96       	adiw	r28, 0x16	; 22
    1838:	0f ac       	ldd	r0, Y+63	; 0x3f
    183a:	66 97       	sbiw	r28, 0x16	; 22
    183c:	04 c0       	rjmp	.+8      	; 0x1846 <__umoddi3+0x87c>
    183e:	d6 94       	lsr	r13
    1840:	c7 94       	ror	r12
    1842:	b7 94       	ror	r11
    1844:	a7 94       	ror	r10
    1846:	0a 94       	dec	r0
    1848:	d2 f7       	brpl	.-12     	; 0x183e <__umoddi3+0x874>
    184a:	a4 01       	movw	r20, r8
    184c:	93 01       	movw	r18, r6
    184e:	67 96       	adiw	r28, 0x17	; 23
    1850:	0f ac       	ldd	r0, Y+63	; 0x3f
    1852:	67 97       	sbiw	r28, 0x17	; 23
    1854:	04 c0       	rjmp	.+8      	; 0x185e <__umoddi3+0x894>
    1856:	22 0f       	add	r18, r18
    1858:	33 1f       	adc	r19, r19
    185a:	44 1f       	adc	r20, r20
    185c:	55 1f       	adc	r21, r21
    185e:	0a 94       	dec	r0
    1860:	d2 f7       	brpl	.-12     	; 0x1856 <__umoddi3+0x88c>
    1862:	6c 96       	adiw	r28, 0x1c	; 28
    1864:	8c ad       	ldd	r24, Y+60	; 0x3c
    1866:	9d ad       	ldd	r25, Y+61	; 0x3d
    1868:	ae ad       	ldd	r26, Y+62	; 0x3e
    186a:	bf ad       	ldd	r27, Y+63	; 0x3f
    186c:	6c 97       	sbiw	r28, 0x1c	; 28
    186e:	66 96       	adiw	r28, 0x16	; 22
    1870:	0f ac       	ldd	r0, Y+63	; 0x3f
    1872:	66 97       	sbiw	r28, 0x16	; 22
    1874:	04 c0       	rjmp	.+8      	; 0x187e <__umoddi3+0x8b4>
    1876:	b6 95       	lsr	r27
    1878:	a7 95       	ror	r26
    187a:	97 95       	ror	r25
    187c:	87 95       	ror	r24
    187e:	0a 94       	dec	r0
    1880:	d2 f7       	brpl	.-12     	; 0x1876 <__umoddi3+0x8ac>
    1882:	3c 01       	movw	r6, r24
    1884:	4d 01       	movw	r8, r26
    1886:	62 2a       	or	r6, r18
    1888:	73 2a       	or	r7, r19
    188a:	84 2a       	or	r8, r20
    188c:	95 2a       	or	r9, r21
    188e:	69 a2       	std	Y+33, r6	; 0x21
    1890:	7a a2       	std	Y+34, r7	; 0x22
    1892:	8b a2       	std	Y+35, r8	; 0x23
    1894:	9c a2       	std	Y+36, r9	; 0x24
    1896:	6c 96       	adiw	r28, 0x1c	; 28
    1898:	ec ac       	ldd	r14, Y+60	; 0x3c
    189a:	fd ac       	ldd	r15, Y+61	; 0x3d
    189c:	0e ad       	ldd	r16, Y+62	; 0x3e
    189e:	1f ad       	ldd	r17, Y+63	; 0x3f
    18a0:	6c 97       	sbiw	r28, 0x1c	; 28
    18a2:	67 96       	adiw	r28, 0x17	; 23
    18a4:	0f ac       	ldd	r0, Y+63	; 0x3f
    18a6:	67 97       	sbiw	r28, 0x17	; 23
    18a8:	04 c0       	rjmp	.+8      	; 0x18b2 <__umoddi3+0x8e8>
    18aa:	ee 0c       	add	r14, r14
    18ac:	ff 1c       	adc	r15, r15
    18ae:	00 1f       	adc	r16, r16
    18b0:	11 1f       	adc	r17, r17
    18b2:	0a 94       	dec	r0
    18b4:	d2 f7       	brpl	.-12     	; 0x18aa <__umoddi3+0x8e0>
    18b6:	ed 8e       	std	Y+29, r14	; 0x1d
    18b8:	fe 8e       	std	Y+30, r15	; 0x1e
    18ba:	0f 8f       	std	Y+31, r16	; 0x1f
    18bc:	18 a3       	std	Y+32, r17	; 0x20
    18be:	49 a5       	ldd	r20, Y+41	; 0x29
    18c0:	5a a5       	ldd	r21, Y+42	; 0x2a
    18c2:	6b a5       	ldd	r22, Y+43	; 0x2b
    18c4:	7c a5       	ldd	r23, Y+44	; 0x2c
    18c6:	3b 01       	movw	r6, r22
    18c8:	88 24       	eor	r8, r8
    18ca:	99 24       	eor	r9, r9
    18cc:	60 70       	andi	r22, 0x00	; 0
    18ce:	70 70       	andi	r23, 0x00	; 0
    18d0:	2d 96       	adiw	r28, 0x0d	; 13
    18d2:	4c af       	std	Y+60, r20	; 0x3c
    18d4:	5d af       	std	Y+61, r21	; 0x3d
    18d6:	6e af       	std	Y+62, r22	; 0x3e
    18d8:	7f af       	std	Y+63, r23	; 0x3f
    18da:	2d 97       	sbiw	r28, 0x0d	; 13
    18dc:	c6 01       	movw	r24, r12
    18de:	b5 01       	movw	r22, r10
    18e0:	a4 01       	movw	r20, r8
    18e2:	93 01       	movw	r18, r6
    18e4:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    18e8:	7b 01       	movw	r14, r22
    18ea:	8c 01       	movw	r16, r24
    18ec:	c6 01       	movw	r24, r12
    18ee:	b5 01       	movw	r22, r10
    18f0:	a4 01       	movw	r20, r8
    18f2:	93 01       	movw	r18, r6
    18f4:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    18f8:	c9 01       	movw	r24, r18
    18fa:	da 01       	movw	r26, r20
    18fc:	1c 01       	movw	r2, r24
    18fe:	2d 01       	movw	r4, r26
    1900:	c2 01       	movw	r24, r4
    1902:	b1 01       	movw	r22, r2
    1904:	2d 96       	adiw	r28, 0x0d	; 13
    1906:	2c ad       	ldd	r18, Y+60	; 0x3c
    1908:	3d ad       	ldd	r19, Y+61	; 0x3d
    190a:	4e ad       	ldd	r20, Y+62	; 0x3e
    190c:	5f ad       	ldd	r21, Y+63	; 0x3f
    190e:	2d 97       	sbiw	r28, 0x0d	; 13
    1910:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    1914:	9b 01       	movw	r18, r22
    1916:	ac 01       	movw	r20, r24
    1918:	87 01       	movw	r16, r14
    191a:	ff 24       	eor	r15, r15
    191c:	ee 24       	eor	r14, r14
    191e:	a9 a0       	ldd	r10, Y+33	; 0x21
    1920:	ba a0       	ldd	r11, Y+34	; 0x22
    1922:	cb a0       	ldd	r12, Y+35	; 0x23
    1924:	dc a0       	ldd	r13, Y+36	; 0x24
    1926:	c6 01       	movw	r24, r12
    1928:	aa 27       	eor	r26, r26
    192a:	bb 27       	eor	r27, r27
    192c:	57 01       	movw	r10, r14
    192e:	68 01       	movw	r12, r16
    1930:	a8 2a       	or	r10, r24
    1932:	b9 2a       	or	r11, r25
    1934:	ca 2a       	or	r12, r26
    1936:	db 2a       	or	r13, r27
    1938:	a2 16       	cp	r10, r18
    193a:	b3 06       	cpc	r11, r19
    193c:	c4 06       	cpc	r12, r20
    193e:	d5 06       	cpc	r13, r21
    1940:	00 f5       	brcc	.+64     	; 0x1982 <__umoddi3+0x9b8>
    1942:	08 94       	sec
    1944:	21 08       	sbc	r2, r1
    1946:	31 08       	sbc	r3, r1
    1948:	41 08       	sbc	r4, r1
    194a:	51 08       	sbc	r5, r1
    194c:	e9 a4       	ldd	r14, Y+41	; 0x29
    194e:	fa a4       	ldd	r15, Y+42	; 0x2a
    1950:	0b a5       	ldd	r16, Y+43	; 0x2b
    1952:	1c a5       	ldd	r17, Y+44	; 0x2c
    1954:	ae 0c       	add	r10, r14
    1956:	bf 1c       	adc	r11, r15
    1958:	c0 1e       	adc	r12, r16
    195a:	d1 1e       	adc	r13, r17
    195c:	ae 14       	cp	r10, r14
    195e:	bf 04       	cpc	r11, r15
    1960:	c0 06       	cpc	r12, r16
    1962:	d1 06       	cpc	r13, r17
    1964:	70 f0       	brcs	.+28     	; 0x1982 <__umoddi3+0x9b8>
    1966:	a2 16       	cp	r10, r18
    1968:	b3 06       	cpc	r11, r19
    196a:	c4 06       	cpc	r12, r20
    196c:	d5 06       	cpc	r13, r21
    196e:	48 f4       	brcc	.+18     	; 0x1982 <__umoddi3+0x9b8>
    1970:	08 94       	sec
    1972:	21 08       	sbc	r2, r1
    1974:	31 08       	sbc	r3, r1
    1976:	41 08       	sbc	r4, r1
    1978:	51 08       	sbc	r5, r1
    197a:	ae 0c       	add	r10, r14
    197c:	bf 1c       	adc	r11, r15
    197e:	c0 1e       	adc	r12, r16
    1980:	d1 1e       	adc	r13, r17
    1982:	a2 1a       	sub	r10, r18
    1984:	b3 0a       	sbc	r11, r19
    1986:	c4 0a       	sbc	r12, r20
    1988:	d5 0a       	sbc	r13, r21
    198a:	c6 01       	movw	r24, r12
    198c:	b5 01       	movw	r22, r10
    198e:	a4 01       	movw	r20, r8
    1990:	93 01       	movw	r18, r6
    1992:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    1996:	7b 01       	movw	r14, r22
    1998:	8c 01       	movw	r16, r24
    199a:	c6 01       	movw	r24, r12
    199c:	b5 01       	movw	r22, r10
    199e:	a4 01       	movw	r20, r8
    19a0:	93 01       	movw	r18, r6
    19a2:	0e 94 2b 26 	call	0x4c56	; 0x4c56 <__udivmodsi4>
    19a6:	c9 01       	movw	r24, r18
    19a8:	da 01       	movw	r26, r20
    19aa:	3c 01       	movw	r6, r24
    19ac:	4d 01       	movw	r8, r26
    19ae:	c4 01       	movw	r24, r8
    19b0:	b3 01       	movw	r22, r6
    19b2:	2d 96       	adiw	r28, 0x0d	; 13
    19b4:	2c ad       	ldd	r18, Y+60	; 0x3c
    19b6:	3d ad       	ldd	r19, Y+61	; 0x3d
    19b8:	4e ad       	ldd	r20, Y+62	; 0x3e
    19ba:	5f ad       	ldd	r21, Y+63	; 0x3f
    19bc:	2d 97       	sbiw	r28, 0x0d	; 13
    19be:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    19c2:	9b 01       	movw	r18, r22
    19c4:	ac 01       	movw	r20, r24
    19c6:	87 01       	movw	r16, r14
    19c8:	ff 24       	eor	r15, r15
    19ca:	ee 24       	eor	r14, r14
    19cc:	89 a1       	ldd	r24, Y+33	; 0x21
    19ce:	9a a1       	ldd	r25, Y+34	; 0x22
    19d0:	ab a1       	ldd	r26, Y+35	; 0x23
    19d2:	bc a1       	ldd	r27, Y+36	; 0x24
    19d4:	a0 70       	andi	r26, 0x00	; 0
    19d6:	b0 70       	andi	r27, 0x00	; 0
    19d8:	57 01       	movw	r10, r14
    19da:	68 01       	movw	r12, r16
    19dc:	a8 2a       	or	r10, r24
    19de:	b9 2a       	or	r11, r25
    19e0:	ca 2a       	or	r12, r26
    19e2:	db 2a       	or	r13, r27
    19e4:	a2 16       	cp	r10, r18
    19e6:	b3 06       	cpc	r11, r19
    19e8:	c4 06       	cpc	r12, r20
    19ea:	d5 06       	cpc	r13, r21
    19ec:	00 f5       	brcc	.+64     	; 0x1a2e <__umoddi3+0xa64>
    19ee:	08 94       	sec
    19f0:	61 08       	sbc	r6, r1
    19f2:	71 08       	sbc	r7, r1
    19f4:	81 08       	sbc	r8, r1
    19f6:	91 08       	sbc	r9, r1
    19f8:	69 a5       	ldd	r22, Y+41	; 0x29
    19fa:	7a a5       	ldd	r23, Y+42	; 0x2a
    19fc:	8b a5       	ldd	r24, Y+43	; 0x2b
    19fe:	9c a5       	ldd	r25, Y+44	; 0x2c
    1a00:	a6 0e       	add	r10, r22
    1a02:	b7 1e       	adc	r11, r23
    1a04:	c8 1e       	adc	r12, r24
    1a06:	d9 1e       	adc	r13, r25
    1a08:	a6 16       	cp	r10, r22
    1a0a:	b7 06       	cpc	r11, r23
    1a0c:	c8 06       	cpc	r12, r24
    1a0e:	d9 06       	cpc	r13, r25
    1a10:	70 f0       	brcs	.+28     	; 0x1a2e <__umoddi3+0xa64>
    1a12:	a2 16       	cp	r10, r18
    1a14:	b3 06       	cpc	r11, r19
    1a16:	c4 06       	cpc	r12, r20
    1a18:	d5 06       	cpc	r13, r21
    1a1a:	48 f4       	brcc	.+18     	; 0x1a2e <__umoddi3+0xa64>
    1a1c:	08 94       	sec
    1a1e:	61 08       	sbc	r6, r1
    1a20:	71 08       	sbc	r7, r1
    1a22:	81 08       	sbc	r8, r1
    1a24:	91 08       	sbc	r9, r1
    1a26:	a6 0e       	add	r10, r22
    1a28:	b7 1e       	adc	r11, r23
    1a2a:	c8 1e       	adc	r12, r24
    1a2c:	d9 1e       	adc	r13, r25
    1a2e:	d6 01       	movw	r26, r12
    1a30:	c5 01       	movw	r24, r10
    1a32:	82 1b       	sub	r24, r18
    1a34:	93 0b       	sbc	r25, r19
    1a36:	a4 0b       	sbc	r26, r20
    1a38:	b5 0b       	sbc	r27, r21
    1a3a:	89 8f       	std	Y+25, r24	; 0x19
    1a3c:	9a 8f       	std	Y+26, r25	; 0x1a
    1a3e:	ab 8f       	std	Y+27, r26	; 0x1b
    1a40:	bc 8f       	std	Y+28, r27	; 0x1c
    1a42:	d1 01       	movw	r26, r2
    1a44:	99 27       	eor	r25, r25
    1a46:	88 27       	eor	r24, r24
    1a48:	84 01       	movw	r16, r8
    1a4a:	73 01       	movw	r14, r6
    1a4c:	e8 2a       	or	r14, r24
    1a4e:	f9 2a       	or	r15, r25
    1a50:	0a 2b       	or	r16, r26
    1a52:	1b 2b       	or	r17, r27
    1a54:	4f ef       	ldi	r20, 0xFF	; 255
    1a56:	a4 2e       	mov	r10, r20
    1a58:	4f ef       	ldi	r20, 0xFF	; 255
    1a5a:	b4 2e       	mov	r11, r20
    1a5c:	c1 2c       	mov	r12, r1
    1a5e:	d1 2c       	mov	r13, r1
    1a60:	ae 20       	and	r10, r14
    1a62:	bf 20       	and	r11, r15
    1a64:	c0 22       	and	r12, r16
    1a66:	d1 22       	and	r13, r17
    1a68:	78 01       	movw	r14, r16
    1a6a:	00 27       	eor	r16, r16
    1a6c:	11 27       	eor	r17, r17
    1a6e:	6d a0       	ldd	r6, Y+37	; 0x25
    1a70:	7e a0       	ldd	r7, Y+38	; 0x26
    1a72:	8f a0       	ldd	r8, Y+39	; 0x27
    1a74:	98 a4       	ldd	r9, Y+40	; 0x28
    1a76:	4f ef       	ldi	r20, 0xFF	; 255
    1a78:	5f ef       	ldi	r21, 0xFF	; 255
    1a7a:	60 e0       	ldi	r22, 0x00	; 0
    1a7c:	70 e0       	ldi	r23, 0x00	; 0
    1a7e:	64 22       	and	r6, r20
    1a80:	75 22       	and	r7, r21
    1a82:	86 22       	and	r8, r22
    1a84:	97 22       	and	r9, r23
    1a86:	8d a1       	ldd	r24, Y+37	; 0x25
    1a88:	9e a1       	ldd	r25, Y+38	; 0x26
    1a8a:	af a1       	ldd	r26, Y+39	; 0x27
    1a8c:	b8 a5       	ldd	r27, Y+40	; 0x28
    1a8e:	bd 01       	movw	r22, r26
    1a90:	88 27       	eor	r24, r24
    1a92:	99 27       	eor	r25, r25
    1a94:	65 96       	adiw	r28, 0x15	; 21
    1a96:	6c af       	std	Y+60, r22	; 0x3c
    1a98:	7d af       	std	Y+61, r23	; 0x3d
    1a9a:	8e af       	std	Y+62, r24	; 0x3e
    1a9c:	9f af       	std	Y+63, r25	; 0x3f
    1a9e:	65 97       	sbiw	r28, 0x15	; 21
    1aa0:	c6 01       	movw	r24, r12
    1aa2:	b5 01       	movw	r22, r10
    1aa4:	a4 01       	movw	r20, r8
    1aa6:	93 01       	movw	r18, r6
    1aa8:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    1aac:	61 96       	adiw	r28, 0x11	; 17
    1aae:	6c af       	std	Y+60, r22	; 0x3c
    1ab0:	7d af       	std	Y+61, r23	; 0x3d
    1ab2:	8e af       	std	Y+62, r24	; 0x3e
    1ab4:	9f af       	std	Y+63, r25	; 0x3f
    1ab6:	61 97       	sbiw	r28, 0x11	; 17
    1ab8:	c6 01       	movw	r24, r12
    1aba:	b5 01       	movw	r22, r10
    1abc:	65 96       	adiw	r28, 0x15	; 21
    1abe:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ac0:	3d ad       	ldd	r19, Y+61	; 0x3d
    1ac2:	4e ad       	ldd	r20, Y+62	; 0x3e
    1ac4:	5f ad       	ldd	r21, Y+63	; 0x3f
    1ac6:	65 97       	sbiw	r28, 0x15	; 21
    1ac8:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    1acc:	1b 01       	movw	r2, r22
    1ace:	2c 01       	movw	r4, r24
    1ad0:	c8 01       	movw	r24, r16
    1ad2:	b7 01       	movw	r22, r14
    1ad4:	a4 01       	movw	r20, r8
    1ad6:	93 01       	movw	r18, r6
    1ad8:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    1adc:	5b 01       	movw	r10, r22
    1ade:	6c 01       	movw	r12, r24
    1ae0:	c8 01       	movw	r24, r16
    1ae2:	b7 01       	movw	r22, r14
    1ae4:	65 96       	adiw	r28, 0x15	; 21
    1ae6:	2c ad       	ldd	r18, Y+60	; 0x3c
    1ae8:	3d ad       	ldd	r19, Y+61	; 0x3d
    1aea:	4e ad       	ldd	r20, Y+62	; 0x3e
    1aec:	5f ad       	ldd	r21, Y+63	; 0x3f
    1aee:	65 97       	sbiw	r28, 0x15	; 21
    1af0:	0e 94 0c 26 	call	0x4c18	; 0x4c18 <__mulsi3>
    1af4:	7b 01       	movw	r14, r22
    1af6:	8c 01       	movw	r16, r24
    1af8:	a6 01       	movw	r20, r12
    1afa:	95 01       	movw	r18, r10
    1afc:	22 0d       	add	r18, r2
    1afe:	33 1d       	adc	r19, r3
    1b00:	44 1d       	adc	r20, r4
    1b02:	55 1d       	adc	r21, r5
    1b04:	61 96       	adiw	r28, 0x11	; 17
    1b06:	6c ac       	ldd	r6, Y+60	; 0x3c
    1b08:	7d ac       	ldd	r7, Y+61	; 0x3d
    1b0a:	8e ac       	ldd	r8, Y+62	; 0x3e
    1b0c:	9f ac       	ldd	r9, Y+63	; 0x3f
    1b0e:	61 97       	sbiw	r28, 0x11	; 17
    1b10:	c4 01       	movw	r24, r8
    1b12:	aa 27       	eor	r26, r26
    1b14:	bb 27       	eor	r27, r27
    1b16:	28 0f       	add	r18, r24
    1b18:	39 1f       	adc	r19, r25
    1b1a:	4a 1f       	adc	r20, r26
    1b1c:	5b 1f       	adc	r21, r27
    1b1e:	2a 15       	cp	r18, r10
    1b20:	3b 05       	cpc	r19, r11
    1b22:	4c 05       	cpc	r20, r12
    1b24:	5d 05       	cpc	r21, r13
    1b26:	48 f4       	brcc	.+18     	; 0x1b3a <__umoddi3+0xb70>
    1b28:	81 2c       	mov	r8, r1
    1b2a:	91 2c       	mov	r9, r1
    1b2c:	e1 e0       	ldi	r30, 0x01	; 1
    1b2e:	ae 2e       	mov	r10, r30
    1b30:	b1 2c       	mov	r11, r1
    1b32:	e8 0c       	add	r14, r8
    1b34:	f9 1c       	adc	r15, r9
    1b36:	0a 1d       	adc	r16, r10
    1b38:	1b 1d       	adc	r17, r11
    1b3a:	ca 01       	movw	r24, r20
    1b3c:	aa 27       	eor	r26, r26
    1b3e:	bb 27       	eor	r27, r27
    1b40:	57 01       	movw	r10, r14
    1b42:	68 01       	movw	r12, r16
    1b44:	a8 0e       	add	r10, r24
    1b46:	b9 1e       	adc	r11, r25
    1b48:	ca 1e       	adc	r12, r26
    1b4a:	db 1e       	adc	r13, r27
    1b4c:	a9 01       	movw	r20, r18
    1b4e:	33 27       	eor	r19, r19
    1b50:	22 27       	eor	r18, r18
    1b52:	61 96       	adiw	r28, 0x11	; 17
    1b54:	8c ad       	ldd	r24, Y+60	; 0x3c
    1b56:	9d ad       	ldd	r25, Y+61	; 0x3d
    1b58:	ae ad       	ldd	r26, Y+62	; 0x3e
    1b5a:	bf ad       	ldd	r27, Y+63	; 0x3f
    1b5c:	61 97       	sbiw	r28, 0x11	; 17
    1b5e:	a0 70       	andi	r26, 0x00	; 0
    1b60:	b0 70       	andi	r27, 0x00	; 0
    1b62:	28 0f       	add	r18, r24
    1b64:	39 1f       	adc	r19, r25
    1b66:	4a 1f       	adc	r20, r26
    1b68:	5b 1f       	adc	r21, r27
    1b6a:	e9 8c       	ldd	r14, Y+25	; 0x19
    1b6c:	fa 8c       	ldd	r15, Y+26	; 0x1a
    1b6e:	0b 8d       	ldd	r16, Y+27	; 0x1b
    1b70:	1c 8d       	ldd	r17, Y+28	; 0x1c
    1b72:	ea 14       	cp	r14, r10
    1b74:	fb 04       	cpc	r15, r11
    1b76:	0c 05       	cpc	r16, r12
    1b78:	1d 05       	cpc	r17, r13
    1b7a:	70 f0       	brcs	.+28     	; 0x1b98 <__umoddi3+0xbce>
    1b7c:	ae 14       	cp	r10, r14
    1b7e:	bf 04       	cpc	r11, r15
    1b80:	c0 06       	cpc	r12, r16
    1b82:	d1 06       	cpc	r13, r17
    1b84:	69 f5       	brne	.+90     	; 0x1be0 <__umoddi3+0xc16>
    1b86:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1b88:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1b8a:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1b8c:	98 a1       	ldd	r25, Y+32	; 0x20
    1b8e:	62 17       	cp	r22, r18
    1b90:	73 07       	cpc	r23, r19
    1b92:	84 07       	cpc	r24, r20
    1b94:	95 07       	cpc	r25, r21
    1b96:	20 f5       	brcc	.+72     	; 0x1be0 <__umoddi3+0xc16>
    1b98:	da 01       	movw	r26, r20
    1b9a:	c9 01       	movw	r24, r18
    1b9c:	6d a0       	ldd	r6, Y+37	; 0x25
    1b9e:	7e a0       	ldd	r7, Y+38	; 0x26
    1ba0:	8f a0       	ldd	r8, Y+39	; 0x27
    1ba2:	98 a4       	ldd	r9, Y+40	; 0x28
    1ba4:	86 19       	sub	r24, r6
    1ba6:	97 09       	sbc	r25, r7
    1ba8:	a8 09       	sbc	r26, r8
    1baa:	b9 09       	sbc	r27, r9
    1bac:	e9 a4       	ldd	r14, Y+41	; 0x29
    1bae:	fa a4       	ldd	r15, Y+42	; 0x2a
    1bb0:	0b a5       	ldd	r16, Y+43	; 0x2b
    1bb2:	1c a5       	ldd	r17, Y+44	; 0x2c
    1bb4:	ae 18       	sub	r10, r14
    1bb6:	bf 08       	sbc	r11, r15
    1bb8:	c0 0a       	sbc	r12, r16
    1bba:	d1 0a       	sbc	r13, r17
    1bbc:	ee 24       	eor	r14, r14
    1bbe:	ff 24       	eor	r15, r15
    1bc0:	87 01       	movw	r16, r14
    1bc2:	28 17       	cp	r18, r24
    1bc4:	39 07       	cpc	r19, r25
    1bc6:	4a 07       	cpc	r20, r26
    1bc8:	5b 07       	cpc	r21, r27
    1bca:	28 f4       	brcc	.+10     	; 0x1bd6 <__umoddi3+0xc0c>
    1bcc:	21 e0       	ldi	r18, 0x01	; 1
    1bce:	e2 2e       	mov	r14, r18
    1bd0:	f1 2c       	mov	r15, r1
    1bd2:	01 2d       	mov	r16, r1
    1bd4:	11 2d       	mov	r17, r1
    1bd6:	ae 18       	sub	r10, r14
    1bd8:	bf 08       	sbc	r11, r15
    1bda:	c0 0a       	sbc	r12, r16
    1bdc:	d1 0a       	sbc	r13, r17
    1bde:	02 c0       	rjmp	.+4      	; 0x1be4 <__umoddi3+0xc1a>
    1be0:	da 01       	movw	r26, r20
    1be2:	c9 01       	movw	r24, r18
    1be4:	6d 8c       	ldd	r6, Y+29	; 0x1d
    1be6:	7e 8c       	ldd	r7, Y+30	; 0x1e
    1be8:	8f 8c       	ldd	r8, Y+31	; 0x1f
    1bea:	98 a0       	ldd	r9, Y+32	; 0x20
    1bec:	68 1a       	sub	r6, r24
    1bee:	79 0a       	sbc	r7, r25
    1bf0:	8a 0a       	sbc	r8, r26
    1bf2:	9b 0a       	sbc	r9, r27
    1bf4:	49 8d       	ldd	r20, Y+25	; 0x19
    1bf6:	5a 8d       	ldd	r21, Y+26	; 0x1a
    1bf8:	6b 8d       	ldd	r22, Y+27	; 0x1b
    1bfa:	7c 8d       	ldd	r23, Y+28	; 0x1c
    1bfc:	4a 19       	sub	r20, r10
    1bfe:	5b 09       	sbc	r21, r11
    1c00:	6c 09       	sbc	r22, r12
    1c02:	7d 09       	sbc	r23, r13
    1c04:	5a 01       	movw	r10, r20
    1c06:	6b 01       	movw	r12, r22
    1c08:	22 24       	eor	r2, r2
    1c0a:	33 24       	eor	r3, r3
    1c0c:	21 01       	movw	r4, r2
    1c0e:	6d 8d       	ldd	r22, Y+29	; 0x1d
    1c10:	7e 8d       	ldd	r23, Y+30	; 0x1e
    1c12:	8f 8d       	ldd	r24, Y+31	; 0x1f
    1c14:	98 a1       	ldd	r25, Y+32	; 0x20
    1c16:	66 15       	cp	r22, r6
    1c18:	77 05       	cpc	r23, r7
    1c1a:	88 05       	cpc	r24, r8
    1c1c:	99 05       	cpc	r25, r9
    1c1e:	28 f4       	brcc	.+10     	; 0x1c2a <__umoddi3+0xc60>
    1c20:	81 e0       	ldi	r24, 0x01	; 1
    1c22:	28 2e       	mov	r2, r24
    1c24:	31 2c       	mov	r3, r1
    1c26:	41 2c       	mov	r4, r1
    1c28:	51 2c       	mov	r5, r1
    1c2a:	86 01       	movw	r16, r12
    1c2c:	75 01       	movw	r14, r10
    1c2e:	e2 18       	sub	r14, r2
    1c30:	f3 08       	sbc	r15, r3
    1c32:	04 09       	sbc	r16, r4
    1c34:	15 09       	sbc	r17, r5
    1c36:	a8 01       	movw	r20, r16
    1c38:	97 01       	movw	r18, r14
    1c3a:	66 96       	adiw	r28, 0x16	; 22
    1c3c:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c3e:	66 97       	sbiw	r28, 0x16	; 22
    1c40:	04 c0       	rjmp	.+8      	; 0x1c4a <__umoddi3+0xc80>
    1c42:	22 0f       	add	r18, r18
    1c44:	33 1f       	adc	r19, r19
    1c46:	44 1f       	adc	r20, r20
    1c48:	55 1f       	adc	r21, r21
    1c4a:	0a 94       	dec	r0
    1c4c:	d2 f7       	brpl	.-12     	; 0x1c42 <__umoddi3+0xc78>
    1c4e:	d4 01       	movw	r26, r8
    1c50:	c3 01       	movw	r24, r6
    1c52:	67 96       	adiw	r28, 0x17	; 23
    1c54:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c56:	67 97       	sbiw	r28, 0x17	; 23
    1c58:	04 c0       	rjmp	.+8      	; 0x1c62 <__umoddi3+0xc98>
    1c5a:	b6 95       	lsr	r27
    1c5c:	a7 95       	ror	r26
    1c5e:	97 95       	ror	r25
    1c60:	87 95       	ror	r24
    1c62:	0a 94       	dec	r0
    1c64:	d2 f7       	brpl	.-12     	; 0x1c5a <__umoddi3+0xc90>
    1c66:	28 2b       	or	r18, r24
    1c68:	39 2b       	or	r19, r25
    1c6a:	4a 2b       	or	r20, r26
    1c6c:	5b 2b       	or	r21, r27
    1c6e:	29 8b       	std	Y+17, r18	; 0x11
    1c70:	3a 8b       	std	Y+18, r19	; 0x12
    1c72:	4b 8b       	std	Y+19, r20	; 0x13
    1c74:	5c 8b       	std	Y+20, r21	; 0x14
    1c76:	67 96       	adiw	r28, 0x17	; 23
    1c78:	0f ac       	ldd	r0, Y+63	; 0x3f
    1c7a:	67 97       	sbiw	r28, 0x17	; 23
    1c7c:	04 c0       	rjmp	.+8      	; 0x1c86 <__umoddi3+0xcbc>
    1c7e:	16 95       	lsr	r17
    1c80:	07 95       	ror	r16
    1c82:	f7 94       	ror	r15
    1c84:	e7 94       	ror	r14
    1c86:	0a 94       	dec	r0
    1c88:	d2 f7       	brpl	.-12     	; 0x1c7e <__umoddi3+0xcb4>
    1c8a:	ed 8a       	std	Y+21, r14	; 0x15
    1c8c:	fe 8a       	std	Y+22, r15	; 0x16
    1c8e:	0f 8b       	std	Y+23, r16	; 0x17
    1c90:	18 8f       	std	Y+24, r17	; 0x18
    1c92:	3a 89       	ldd	r19, Y+18	; 0x12
    1c94:	4b 89       	ldd	r20, Y+19	; 0x13
    1c96:	5c 89       	ldd	r21, Y+20	; 0x14
    1c98:	6e 2d       	mov	r22, r14
    1c9a:	7e 89       	ldd	r23, Y+22	; 0x16
    1c9c:	8f 89       	ldd	r24, Y+23	; 0x17
    1c9e:	98 8d       	ldd	r25, Y+24	; 0x18
    1ca0:	c5 5a       	subi	r28, 0xA5	; 165
    1ca2:	df 4f       	sbci	r29, 0xFF	; 255
    1ca4:	e2 e1       	ldi	r30, 0x12	; 18
    1ca6:	0c 94 69 26 	jmp	0x4cd2	; 0x4cd2 <__epilogue_restores__>

00001caa <_fpadd_parts>:
    1caa:	a0 e0       	ldi	r26, 0x00	; 0
    1cac:	b0 e0       	ldi	r27, 0x00	; 0
    1cae:	eb e5       	ldi	r30, 0x5B	; 91
    1cb0:	fe e0       	ldi	r31, 0x0E	; 14
    1cb2:	0c 94 4d 26 	jmp	0x4c9a	; 0x4c9a <__prologue_saves__>
    1cb6:	dc 01       	movw	r26, r24
    1cb8:	2b 01       	movw	r4, r22
    1cba:	fa 01       	movw	r30, r20
    1cbc:	9c 91       	ld	r25, X
    1cbe:	92 30       	cpi	r25, 0x02	; 2
    1cc0:	08 f4       	brcc	.+2      	; 0x1cc4 <_fpadd_parts+0x1a>
    1cc2:	39 c1       	rjmp	.+626    	; 0x1f36 <_fpadd_parts+0x28c>
    1cc4:	eb 01       	movw	r28, r22
    1cc6:	88 81       	ld	r24, Y
    1cc8:	82 30       	cpi	r24, 0x02	; 2
    1cca:	08 f4       	brcc	.+2      	; 0x1cce <_fpadd_parts+0x24>
    1ccc:	33 c1       	rjmp	.+614    	; 0x1f34 <_fpadd_parts+0x28a>
    1cce:	94 30       	cpi	r25, 0x04	; 4
    1cd0:	69 f4       	brne	.+26     	; 0x1cec <_fpadd_parts+0x42>
    1cd2:	84 30       	cpi	r24, 0x04	; 4
    1cd4:	09 f0       	breq	.+2      	; 0x1cd8 <_fpadd_parts+0x2e>
    1cd6:	2f c1       	rjmp	.+606    	; 0x1f36 <_fpadd_parts+0x28c>
    1cd8:	11 96       	adiw	r26, 0x01	; 1
    1cda:	9c 91       	ld	r25, X
    1cdc:	11 97       	sbiw	r26, 0x01	; 1
    1cde:	89 81       	ldd	r24, Y+1	; 0x01
    1ce0:	98 17       	cp	r25, r24
    1ce2:	09 f4       	brne	.+2      	; 0x1ce6 <_fpadd_parts+0x3c>
    1ce4:	28 c1       	rjmp	.+592    	; 0x1f36 <_fpadd_parts+0x28c>
    1ce6:	ab e8       	ldi	r26, 0x8B	; 139
    1ce8:	b0 e0       	ldi	r27, 0x00	; 0
    1cea:	25 c1       	rjmp	.+586    	; 0x1f36 <_fpadd_parts+0x28c>
    1cec:	84 30       	cpi	r24, 0x04	; 4
    1cee:	09 f4       	brne	.+2      	; 0x1cf2 <_fpadd_parts+0x48>
    1cf0:	21 c1       	rjmp	.+578    	; 0x1f34 <_fpadd_parts+0x28a>
    1cf2:	82 30       	cpi	r24, 0x02	; 2
    1cf4:	a9 f4       	brne	.+42     	; 0x1d20 <_fpadd_parts+0x76>
    1cf6:	92 30       	cpi	r25, 0x02	; 2
    1cf8:	09 f0       	breq	.+2      	; 0x1cfc <_fpadd_parts+0x52>
    1cfa:	1d c1       	rjmp	.+570    	; 0x1f36 <_fpadd_parts+0x28c>
    1cfc:	9a 01       	movw	r18, r20
    1cfe:	ad 01       	movw	r20, r26
    1d00:	88 e0       	ldi	r24, 0x08	; 8
    1d02:	ea 01       	movw	r28, r20
    1d04:	09 90       	ld	r0, Y+
    1d06:	ae 01       	movw	r20, r28
    1d08:	e9 01       	movw	r28, r18
    1d0a:	09 92       	st	Y+, r0
    1d0c:	9e 01       	movw	r18, r28
    1d0e:	81 50       	subi	r24, 0x01	; 1
    1d10:	c1 f7       	brne	.-16     	; 0x1d02 <_fpadd_parts+0x58>
    1d12:	e2 01       	movw	r28, r4
    1d14:	89 81       	ldd	r24, Y+1	; 0x01
    1d16:	11 96       	adiw	r26, 0x01	; 1
    1d18:	9c 91       	ld	r25, X
    1d1a:	89 23       	and	r24, r25
    1d1c:	81 83       	std	Z+1, r24	; 0x01
    1d1e:	08 c1       	rjmp	.+528    	; 0x1f30 <_fpadd_parts+0x286>
    1d20:	92 30       	cpi	r25, 0x02	; 2
    1d22:	09 f4       	brne	.+2      	; 0x1d26 <_fpadd_parts+0x7c>
    1d24:	07 c1       	rjmp	.+526    	; 0x1f34 <_fpadd_parts+0x28a>
    1d26:	12 96       	adiw	r26, 0x02	; 2
    1d28:	2d 90       	ld	r2, X+
    1d2a:	3c 90       	ld	r3, X
    1d2c:	13 97       	sbiw	r26, 0x03	; 3
    1d2e:	eb 01       	movw	r28, r22
    1d30:	8a 81       	ldd	r24, Y+2	; 0x02
    1d32:	9b 81       	ldd	r25, Y+3	; 0x03
    1d34:	14 96       	adiw	r26, 0x04	; 4
    1d36:	ad 90       	ld	r10, X+
    1d38:	bd 90       	ld	r11, X+
    1d3a:	cd 90       	ld	r12, X+
    1d3c:	dc 90       	ld	r13, X
    1d3e:	17 97       	sbiw	r26, 0x07	; 7
    1d40:	ec 80       	ldd	r14, Y+4	; 0x04
    1d42:	fd 80       	ldd	r15, Y+5	; 0x05
    1d44:	0e 81       	ldd	r16, Y+6	; 0x06
    1d46:	1f 81       	ldd	r17, Y+7	; 0x07
    1d48:	91 01       	movw	r18, r2
    1d4a:	28 1b       	sub	r18, r24
    1d4c:	39 0b       	sbc	r19, r25
    1d4e:	b9 01       	movw	r22, r18
    1d50:	37 ff       	sbrs	r19, 7
    1d52:	04 c0       	rjmp	.+8      	; 0x1d5c <_fpadd_parts+0xb2>
    1d54:	66 27       	eor	r22, r22
    1d56:	77 27       	eor	r23, r23
    1d58:	62 1b       	sub	r22, r18
    1d5a:	73 0b       	sbc	r23, r19
    1d5c:	60 32       	cpi	r22, 0x20	; 32
    1d5e:	71 05       	cpc	r23, r1
    1d60:	0c f0       	brlt	.+2      	; 0x1d64 <_fpadd_parts+0xba>
    1d62:	61 c0       	rjmp	.+194    	; 0x1e26 <_fpadd_parts+0x17c>
    1d64:	12 16       	cp	r1, r18
    1d66:	13 06       	cpc	r1, r19
    1d68:	6c f5       	brge	.+90     	; 0x1dc4 <_fpadd_parts+0x11a>
    1d6a:	37 01       	movw	r6, r14
    1d6c:	48 01       	movw	r8, r16
    1d6e:	06 2e       	mov	r0, r22
    1d70:	04 c0       	rjmp	.+8      	; 0x1d7a <_fpadd_parts+0xd0>
    1d72:	96 94       	lsr	r9
    1d74:	87 94       	ror	r8
    1d76:	77 94       	ror	r7
    1d78:	67 94       	ror	r6
    1d7a:	0a 94       	dec	r0
    1d7c:	d2 f7       	brpl	.-12     	; 0x1d72 <_fpadd_parts+0xc8>
    1d7e:	21 e0       	ldi	r18, 0x01	; 1
    1d80:	30 e0       	ldi	r19, 0x00	; 0
    1d82:	40 e0       	ldi	r20, 0x00	; 0
    1d84:	50 e0       	ldi	r21, 0x00	; 0
    1d86:	04 c0       	rjmp	.+8      	; 0x1d90 <_fpadd_parts+0xe6>
    1d88:	22 0f       	add	r18, r18
    1d8a:	33 1f       	adc	r19, r19
    1d8c:	44 1f       	adc	r20, r20
    1d8e:	55 1f       	adc	r21, r21
    1d90:	6a 95       	dec	r22
    1d92:	d2 f7       	brpl	.-12     	; 0x1d88 <_fpadd_parts+0xde>
    1d94:	21 50       	subi	r18, 0x01	; 1
    1d96:	30 40       	sbci	r19, 0x00	; 0
    1d98:	40 40       	sbci	r20, 0x00	; 0
    1d9a:	50 40       	sbci	r21, 0x00	; 0
    1d9c:	2e 21       	and	r18, r14
    1d9e:	3f 21       	and	r19, r15
    1da0:	40 23       	and	r20, r16
    1da2:	51 23       	and	r21, r17
    1da4:	21 15       	cp	r18, r1
    1da6:	31 05       	cpc	r19, r1
    1da8:	41 05       	cpc	r20, r1
    1daa:	51 05       	cpc	r21, r1
    1dac:	21 f0       	breq	.+8      	; 0x1db6 <_fpadd_parts+0x10c>
    1dae:	21 e0       	ldi	r18, 0x01	; 1
    1db0:	30 e0       	ldi	r19, 0x00	; 0
    1db2:	40 e0       	ldi	r20, 0x00	; 0
    1db4:	50 e0       	ldi	r21, 0x00	; 0
    1db6:	79 01       	movw	r14, r18
    1db8:	8a 01       	movw	r16, r20
    1dba:	e6 28       	or	r14, r6
    1dbc:	f7 28       	or	r15, r7
    1dbe:	08 29       	or	r16, r8
    1dc0:	19 29       	or	r17, r9
    1dc2:	3c c0       	rjmp	.+120    	; 0x1e3c <_fpadd_parts+0x192>
    1dc4:	23 2b       	or	r18, r19
    1dc6:	d1 f1       	breq	.+116    	; 0x1e3c <_fpadd_parts+0x192>
    1dc8:	26 0e       	add	r2, r22
    1dca:	37 1e       	adc	r3, r23
    1dcc:	35 01       	movw	r6, r10
    1dce:	46 01       	movw	r8, r12
    1dd0:	06 2e       	mov	r0, r22
    1dd2:	04 c0       	rjmp	.+8      	; 0x1ddc <_fpadd_parts+0x132>
    1dd4:	96 94       	lsr	r9
    1dd6:	87 94       	ror	r8
    1dd8:	77 94       	ror	r7
    1dda:	67 94       	ror	r6
    1ddc:	0a 94       	dec	r0
    1dde:	d2 f7       	brpl	.-12     	; 0x1dd4 <_fpadd_parts+0x12a>
    1de0:	21 e0       	ldi	r18, 0x01	; 1
    1de2:	30 e0       	ldi	r19, 0x00	; 0
    1de4:	40 e0       	ldi	r20, 0x00	; 0
    1de6:	50 e0       	ldi	r21, 0x00	; 0
    1de8:	04 c0       	rjmp	.+8      	; 0x1df2 <_fpadd_parts+0x148>
    1dea:	22 0f       	add	r18, r18
    1dec:	33 1f       	adc	r19, r19
    1dee:	44 1f       	adc	r20, r20
    1df0:	55 1f       	adc	r21, r21
    1df2:	6a 95       	dec	r22
    1df4:	d2 f7       	brpl	.-12     	; 0x1dea <_fpadd_parts+0x140>
    1df6:	21 50       	subi	r18, 0x01	; 1
    1df8:	30 40       	sbci	r19, 0x00	; 0
    1dfa:	40 40       	sbci	r20, 0x00	; 0
    1dfc:	50 40       	sbci	r21, 0x00	; 0
    1dfe:	2a 21       	and	r18, r10
    1e00:	3b 21       	and	r19, r11
    1e02:	4c 21       	and	r20, r12
    1e04:	5d 21       	and	r21, r13
    1e06:	21 15       	cp	r18, r1
    1e08:	31 05       	cpc	r19, r1
    1e0a:	41 05       	cpc	r20, r1
    1e0c:	51 05       	cpc	r21, r1
    1e0e:	21 f0       	breq	.+8      	; 0x1e18 <_fpadd_parts+0x16e>
    1e10:	21 e0       	ldi	r18, 0x01	; 1
    1e12:	30 e0       	ldi	r19, 0x00	; 0
    1e14:	40 e0       	ldi	r20, 0x00	; 0
    1e16:	50 e0       	ldi	r21, 0x00	; 0
    1e18:	59 01       	movw	r10, r18
    1e1a:	6a 01       	movw	r12, r20
    1e1c:	a6 28       	or	r10, r6
    1e1e:	b7 28       	or	r11, r7
    1e20:	c8 28       	or	r12, r8
    1e22:	d9 28       	or	r13, r9
    1e24:	0b c0       	rjmp	.+22     	; 0x1e3c <_fpadd_parts+0x192>
    1e26:	82 15       	cp	r24, r2
    1e28:	93 05       	cpc	r25, r3
    1e2a:	2c f0       	brlt	.+10     	; 0x1e36 <_fpadd_parts+0x18c>
    1e2c:	1c 01       	movw	r2, r24
    1e2e:	aa 24       	eor	r10, r10
    1e30:	bb 24       	eor	r11, r11
    1e32:	65 01       	movw	r12, r10
    1e34:	03 c0       	rjmp	.+6      	; 0x1e3c <_fpadd_parts+0x192>
    1e36:	ee 24       	eor	r14, r14
    1e38:	ff 24       	eor	r15, r15
    1e3a:	87 01       	movw	r16, r14
    1e3c:	11 96       	adiw	r26, 0x01	; 1
    1e3e:	9c 91       	ld	r25, X
    1e40:	d2 01       	movw	r26, r4
    1e42:	11 96       	adiw	r26, 0x01	; 1
    1e44:	8c 91       	ld	r24, X
    1e46:	98 17       	cp	r25, r24
    1e48:	09 f4       	brne	.+2      	; 0x1e4c <_fpadd_parts+0x1a2>
    1e4a:	45 c0       	rjmp	.+138    	; 0x1ed6 <_fpadd_parts+0x22c>
    1e4c:	99 23       	and	r25, r25
    1e4e:	39 f0       	breq	.+14     	; 0x1e5e <_fpadd_parts+0x1b4>
    1e50:	a8 01       	movw	r20, r16
    1e52:	97 01       	movw	r18, r14
    1e54:	2a 19       	sub	r18, r10
    1e56:	3b 09       	sbc	r19, r11
    1e58:	4c 09       	sbc	r20, r12
    1e5a:	5d 09       	sbc	r21, r13
    1e5c:	06 c0       	rjmp	.+12     	; 0x1e6a <_fpadd_parts+0x1c0>
    1e5e:	a6 01       	movw	r20, r12
    1e60:	95 01       	movw	r18, r10
    1e62:	2e 19       	sub	r18, r14
    1e64:	3f 09       	sbc	r19, r15
    1e66:	40 0b       	sbc	r20, r16
    1e68:	51 0b       	sbc	r21, r17
    1e6a:	57 fd       	sbrc	r21, 7
    1e6c:	08 c0       	rjmp	.+16     	; 0x1e7e <_fpadd_parts+0x1d4>
    1e6e:	11 82       	std	Z+1, r1	; 0x01
    1e70:	33 82       	std	Z+3, r3	; 0x03
    1e72:	22 82       	std	Z+2, r2	; 0x02
    1e74:	24 83       	std	Z+4, r18	; 0x04
    1e76:	35 83       	std	Z+5, r19	; 0x05
    1e78:	46 83       	std	Z+6, r20	; 0x06
    1e7a:	57 83       	std	Z+7, r21	; 0x07
    1e7c:	1d c0       	rjmp	.+58     	; 0x1eb8 <_fpadd_parts+0x20e>
    1e7e:	81 e0       	ldi	r24, 0x01	; 1
    1e80:	81 83       	std	Z+1, r24	; 0x01
    1e82:	33 82       	std	Z+3, r3	; 0x03
    1e84:	22 82       	std	Z+2, r2	; 0x02
    1e86:	88 27       	eor	r24, r24
    1e88:	99 27       	eor	r25, r25
    1e8a:	dc 01       	movw	r26, r24
    1e8c:	82 1b       	sub	r24, r18
    1e8e:	93 0b       	sbc	r25, r19
    1e90:	a4 0b       	sbc	r26, r20
    1e92:	b5 0b       	sbc	r27, r21
    1e94:	84 83       	std	Z+4, r24	; 0x04
    1e96:	95 83       	std	Z+5, r25	; 0x05
    1e98:	a6 83       	std	Z+6, r26	; 0x06
    1e9a:	b7 83       	std	Z+7, r27	; 0x07
    1e9c:	0d c0       	rjmp	.+26     	; 0x1eb8 <_fpadd_parts+0x20e>
    1e9e:	22 0f       	add	r18, r18
    1ea0:	33 1f       	adc	r19, r19
    1ea2:	44 1f       	adc	r20, r20
    1ea4:	55 1f       	adc	r21, r21
    1ea6:	24 83       	std	Z+4, r18	; 0x04
    1ea8:	35 83       	std	Z+5, r19	; 0x05
    1eaa:	46 83       	std	Z+6, r20	; 0x06
    1eac:	57 83       	std	Z+7, r21	; 0x07
    1eae:	82 81       	ldd	r24, Z+2	; 0x02
    1eb0:	93 81       	ldd	r25, Z+3	; 0x03
    1eb2:	01 97       	sbiw	r24, 0x01	; 1
    1eb4:	93 83       	std	Z+3, r25	; 0x03
    1eb6:	82 83       	std	Z+2, r24	; 0x02
    1eb8:	24 81       	ldd	r18, Z+4	; 0x04
    1eba:	35 81       	ldd	r19, Z+5	; 0x05
    1ebc:	46 81       	ldd	r20, Z+6	; 0x06
    1ebe:	57 81       	ldd	r21, Z+7	; 0x07
    1ec0:	da 01       	movw	r26, r20
    1ec2:	c9 01       	movw	r24, r18
    1ec4:	01 97       	sbiw	r24, 0x01	; 1
    1ec6:	a1 09       	sbc	r26, r1
    1ec8:	b1 09       	sbc	r27, r1
    1eca:	8f 5f       	subi	r24, 0xFF	; 255
    1ecc:	9f 4f       	sbci	r25, 0xFF	; 255
    1ece:	af 4f       	sbci	r26, 0xFF	; 255
    1ed0:	bf 43       	sbci	r27, 0x3F	; 63
    1ed2:	28 f3       	brcs	.-54     	; 0x1e9e <_fpadd_parts+0x1f4>
    1ed4:	0b c0       	rjmp	.+22     	; 0x1eec <_fpadd_parts+0x242>
    1ed6:	91 83       	std	Z+1, r25	; 0x01
    1ed8:	33 82       	std	Z+3, r3	; 0x03
    1eda:	22 82       	std	Z+2, r2	; 0x02
    1edc:	ea 0c       	add	r14, r10
    1ede:	fb 1c       	adc	r15, r11
    1ee0:	0c 1d       	adc	r16, r12
    1ee2:	1d 1d       	adc	r17, r13
    1ee4:	e4 82       	std	Z+4, r14	; 0x04
    1ee6:	f5 82       	std	Z+5, r15	; 0x05
    1ee8:	06 83       	std	Z+6, r16	; 0x06
    1eea:	17 83       	std	Z+7, r17	; 0x07
    1eec:	83 e0       	ldi	r24, 0x03	; 3
    1eee:	80 83       	st	Z, r24
    1ef0:	24 81       	ldd	r18, Z+4	; 0x04
    1ef2:	35 81       	ldd	r19, Z+5	; 0x05
    1ef4:	46 81       	ldd	r20, Z+6	; 0x06
    1ef6:	57 81       	ldd	r21, Z+7	; 0x07
    1ef8:	57 ff       	sbrs	r21, 7
    1efa:	1a c0       	rjmp	.+52     	; 0x1f30 <_fpadd_parts+0x286>
    1efc:	c9 01       	movw	r24, r18
    1efe:	aa 27       	eor	r26, r26
    1f00:	97 fd       	sbrc	r25, 7
    1f02:	a0 95       	com	r26
    1f04:	ba 2f       	mov	r27, r26
    1f06:	81 70       	andi	r24, 0x01	; 1
    1f08:	90 70       	andi	r25, 0x00	; 0
    1f0a:	a0 70       	andi	r26, 0x00	; 0
    1f0c:	b0 70       	andi	r27, 0x00	; 0
    1f0e:	56 95       	lsr	r21
    1f10:	47 95       	ror	r20
    1f12:	37 95       	ror	r19
    1f14:	27 95       	ror	r18
    1f16:	82 2b       	or	r24, r18
    1f18:	93 2b       	or	r25, r19
    1f1a:	a4 2b       	or	r26, r20
    1f1c:	b5 2b       	or	r27, r21
    1f1e:	84 83       	std	Z+4, r24	; 0x04
    1f20:	95 83       	std	Z+5, r25	; 0x05
    1f22:	a6 83       	std	Z+6, r26	; 0x06
    1f24:	b7 83       	std	Z+7, r27	; 0x07
    1f26:	82 81       	ldd	r24, Z+2	; 0x02
    1f28:	93 81       	ldd	r25, Z+3	; 0x03
    1f2a:	01 96       	adiw	r24, 0x01	; 1
    1f2c:	93 83       	std	Z+3, r25	; 0x03
    1f2e:	82 83       	std	Z+2, r24	; 0x02
    1f30:	df 01       	movw	r26, r30
    1f32:	01 c0       	rjmp	.+2      	; 0x1f36 <_fpadd_parts+0x28c>
    1f34:	d2 01       	movw	r26, r4
    1f36:	cd 01       	movw	r24, r26
    1f38:	cd b7       	in	r28, 0x3d	; 61
    1f3a:	de b7       	in	r29, 0x3e	; 62
    1f3c:	e2 e1       	ldi	r30, 0x12	; 18
    1f3e:	0c 94 69 26 	jmp	0x4cd2	; 0x4cd2 <__epilogue_restores__>

00001f42 <__subsf3>:
    1f42:	a0 e2       	ldi	r26, 0x20	; 32
    1f44:	b0 e0       	ldi	r27, 0x00	; 0
    1f46:	e7 ea       	ldi	r30, 0xA7	; 167
    1f48:	ff e0       	ldi	r31, 0x0F	; 15
    1f4a:	0c 94 59 26 	jmp	0x4cb2	; 0x4cb2 <__prologue_saves__+0x18>
    1f4e:	69 83       	std	Y+1, r22	; 0x01
    1f50:	7a 83       	std	Y+2, r23	; 0x02
    1f52:	8b 83       	std	Y+3, r24	; 0x03
    1f54:	9c 83       	std	Y+4, r25	; 0x04
    1f56:	2d 83       	std	Y+5, r18	; 0x05
    1f58:	3e 83       	std	Y+6, r19	; 0x06
    1f5a:	4f 83       	std	Y+7, r20	; 0x07
    1f5c:	58 87       	std	Y+8, r21	; 0x08
    1f5e:	e9 e0       	ldi	r30, 0x09	; 9
    1f60:	ee 2e       	mov	r14, r30
    1f62:	f1 2c       	mov	r15, r1
    1f64:	ec 0e       	add	r14, r28
    1f66:	fd 1e       	adc	r15, r29
    1f68:	ce 01       	movw	r24, r28
    1f6a:	01 96       	adiw	r24, 0x01	; 1
    1f6c:	b7 01       	movw	r22, r14
    1f6e:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    1f72:	8e 01       	movw	r16, r28
    1f74:	0f 5e       	subi	r16, 0xEF	; 239
    1f76:	1f 4f       	sbci	r17, 0xFF	; 255
    1f78:	ce 01       	movw	r24, r28
    1f7a:	05 96       	adiw	r24, 0x05	; 5
    1f7c:	b8 01       	movw	r22, r16
    1f7e:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    1f82:	8a 89       	ldd	r24, Y+18	; 0x12
    1f84:	91 e0       	ldi	r25, 0x01	; 1
    1f86:	89 27       	eor	r24, r25
    1f88:	8a 8b       	std	Y+18, r24	; 0x12
    1f8a:	c7 01       	movw	r24, r14
    1f8c:	b8 01       	movw	r22, r16
    1f8e:	ae 01       	movw	r20, r28
    1f90:	47 5e       	subi	r20, 0xE7	; 231
    1f92:	5f 4f       	sbci	r21, 0xFF	; 255
    1f94:	0e 94 55 0e 	call	0x1caa	; 0x1caa <_fpadd_parts>
    1f98:	0e 94 89 12 	call	0x2512	; 0x2512 <__pack_f>
    1f9c:	a0 96       	adiw	r28, 0x20	; 32
    1f9e:	e6 e0       	ldi	r30, 0x06	; 6
    1fa0:	0c 94 75 26 	jmp	0x4cea	; 0x4cea <__epilogue_restores__+0x18>

00001fa4 <__addsf3>:
    1fa4:	a0 e2       	ldi	r26, 0x20	; 32
    1fa6:	b0 e0       	ldi	r27, 0x00	; 0
    1fa8:	e8 ed       	ldi	r30, 0xD8	; 216
    1faa:	ff e0       	ldi	r31, 0x0F	; 15
    1fac:	0c 94 59 26 	jmp	0x4cb2	; 0x4cb2 <__prologue_saves__+0x18>
    1fb0:	69 83       	std	Y+1, r22	; 0x01
    1fb2:	7a 83       	std	Y+2, r23	; 0x02
    1fb4:	8b 83       	std	Y+3, r24	; 0x03
    1fb6:	9c 83       	std	Y+4, r25	; 0x04
    1fb8:	2d 83       	std	Y+5, r18	; 0x05
    1fba:	3e 83       	std	Y+6, r19	; 0x06
    1fbc:	4f 83       	std	Y+7, r20	; 0x07
    1fbe:	58 87       	std	Y+8, r21	; 0x08
    1fc0:	f9 e0       	ldi	r31, 0x09	; 9
    1fc2:	ef 2e       	mov	r14, r31
    1fc4:	f1 2c       	mov	r15, r1
    1fc6:	ec 0e       	add	r14, r28
    1fc8:	fd 1e       	adc	r15, r29
    1fca:	ce 01       	movw	r24, r28
    1fcc:	01 96       	adiw	r24, 0x01	; 1
    1fce:	b7 01       	movw	r22, r14
    1fd0:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    1fd4:	8e 01       	movw	r16, r28
    1fd6:	0f 5e       	subi	r16, 0xEF	; 239
    1fd8:	1f 4f       	sbci	r17, 0xFF	; 255
    1fda:	ce 01       	movw	r24, r28
    1fdc:	05 96       	adiw	r24, 0x05	; 5
    1fde:	b8 01       	movw	r22, r16
    1fe0:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    1fe4:	c7 01       	movw	r24, r14
    1fe6:	b8 01       	movw	r22, r16
    1fe8:	ae 01       	movw	r20, r28
    1fea:	47 5e       	subi	r20, 0xE7	; 231
    1fec:	5f 4f       	sbci	r21, 0xFF	; 255
    1fee:	0e 94 55 0e 	call	0x1caa	; 0x1caa <_fpadd_parts>
    1ff2:	0e 94 89 12 	call	0x2512	; 0x2512 <__pack_f>
    1ff6:	a0 96       	adiw	r28, 0x20	; 32
    1ff8:	e6 e0       	ldi	r30, 0x06	; 6
    1ffa:	0c 94 75 26 	jmp	0x4cea	; 0x4cea <__epilogue_restores__+0x18>

00001ffe <__mulsf3>:
    1ffe:	a0 e2       	ldi	r26, 0x20	; 32
    2000:	b0 e0       	ldi	r27, 0x00	; 0
    2002:	e5 e0       	ldi	r30, 0x05	; 5
    2004:	f0 e1       	ldi	r31, 0x10	; 16
    2006:	0c 94 4d 26 	jmp	0x4c9a	; 0x4c9a <__prologue_saves__>
    200a:	69 83       	std	Y+1, r22	; 0x01
    200c:	7a 83       	std	Y+2, r23	; 0x02
    200e:	8b 83       	std	Y+3, r24	; 0x03
    2010:	9c 83       	std	Y+4, r25	; 0x04
    2012:	2d 83       	std	Y+5, r18	; 0x05
    2014:	3e 83       	std	Y+6, r19	; 0x06
    2016:	4f 83       	std	Y+7, r20	; 0x07
    2018:	58 87       	std	Y+8, r21	; 0x08
    201a:	ce 01       	movw	r24, r28
    201c:	01 96       	adiw	r24, 0x01	; 1
    201e:	be 01       	movw	r22, r28
    2020:	67 5f       	subi	r22, 0xF7	; 247
    2022:	7f 4f       	sbci	r23, 0xFF	; 255
    2024:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    2028:	ce 01       	movw	r24, r28
    202a:	05 96       	adiw	r24, 0x05	; 5
    202c:	be 01       	movw	r22, r28
    202e:	6f 5e       	subi	r22, 0xEF	; 239
    2030:	7f 4f       	sbci	r23, 0xFF	; 255
    2032:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    2036:	99 85       	ldd	r25, Y+9	; 0x09
    2038:	92 30       	cpi	r25, 0x02	; 2
    203a:	88 f0       	brcs	.+34     	; 0x205e <__mulsf3+0x60>
    203c:	89 89       	ldd	r24, Y+17	; 0x11
    203e:	82 30       	cpi	r24, 0x02	; 2
    2040:	c8 f0       	brcs	.+50     	; 0x2074 <__mulsf3+0x76>
    2042:	94 30       	cpi	r25, 0x04	; 4
    2044:	19 f4       	brne	.+6      	; 0x204c <__mulsf3+0x4e>
    2046:	82 30       	cpi	r24, 0x02	; 2
    2048:	51 f4       	brne	.+20     	; 0x205e <__mulsf3+0x60>
    204a:	04 c0       	rjmp	.+8      	; 0x2054 <__mulsf3+0x56>
    204c:	84 30       	cpi	r24, 0x04	; 4
    204e:	29 f4       	brne	.+10     	; 0x205a <__mulsf3+0x5c>
    2050:	92 30       	cpi	r25, 0x02	; 2
    2052:	81 f4       	brne	.+32     	; 0x2074 <__mulsf3+0x76>
    2054:	8b e8       	ldi	r24, 0x8B	; 139
    2056:	90 e0       	ldi	r25, 0x00	; 0
    2058:	c6 c0       	rjmp	.+396    	; 0x21e6 <__mulsf3+0x1e8>
    205a:	92 30       	cpi	r25, 0x02	; 2
    205c:	49 f4       	brne	.+18     	; 0x2070 <__mulsf3+0x72>
    205e:	20 e0       	ldi	r18, 0x00	; 0
    2060:	9a 85       	ldd	r25, Y+10	; 0x0a
    2062:	8a 89       	ldd	r24, Y+18	; 0x12
    2064:	98 13       	cpse	r25, r24
    2066:	21 e0       	ldi	r18, 0x01	; 1
    2068:	2a 87       	std	Y+10, r18	; 0x0a
    206a:	ce 01       	movw	r24, r28
    206c:	09 96       	adiw	r24, 0x09	; 9
    206e:	bb c0       	rjmp	.+374    	; 0x21e6 <__mulsf3+0x1e8>
    2070:	82 30       	cpi	r24, 0x02	; 2
    2072:	49 f4       	brne	.+18     	; 0x2086 <__mulsf3+0x88>
    2074:	20 e0       	ldi	r18, 0x00	; 0
    2076:	9a 85       	ldd	r25, Y+10	; 0x0a
    2078:	8a 89       	ldd	r24, Y+18	; 0x12
    207a:	98 13       	cpse	r25, r24
    207c:	21 e0       	ldi	r18, 0x01	; 1
    207e:	2a 8b       	std	Y+18, r18	; 0x12
    2080:	ce 01       	movw	r24, r28
    2082:	41 96       	adiw	r24, 0x11	; 17
    2084:	b0 c0       	rjmp	.+352    	; 0x21e6 <__mulsf3+0x1e8>
    2086:	2d 84       	ldd	r2, Y+13	; 0x0d
    2088:	3e 84       	ldd	r3, Y+14	; 0x0e
    208a:	4f 84       	ldd	r4, Y+15	; 0x0f
    208c:	58 88       	ldd	r5, Y+16	; 0x10
    208e:	6d 88       	ldd	r6, Y+21	; 0x15
    2090:	7e 88       	ldd	r7, Y+22	; 0x16
    2092:	8f 88       	ldd	r8, Y+23	; 0x17
    2094:	98 8c       	ldd	r9, Y+24	; 0x18
    2096:	ee 24       	eor	r14, r14
    2098:	ff 24       	eor	r15, r15
    209a:	87 01       	movw	r16, r14
    209c:	aa 24       	eor	r10, r10
    209e:	bb 24       	eor	r11, r11
    20a0:	65 01       	movw	r12, r10
    20a2:	40 e0       	ldi	r20, 0x00	; 0
    20a4:	50 e0       	ldi	r21, 0x00	; 0
    20a6:	60 e0       	ldi	r22, 0x00	; 0
    20a8:	70 e0       	ldi	r23, 0x00	; 0
    20aa:	e0 e0       	ldi	r30, 0x00	; 0
    20ac:	f0 e0       	ldi	r31, 0x00	; 0
    20ae:	c1 01       	movw	r24, r2
    20b0:	81 70       	andi	r24, 0x01	; 1
    20b2:	90 70       	andi	r25, 0x00	; 0
    20b4:	89 2b       	or	r24, r25
    20b6:	e9 f0       	breq	.+58     	; 0x20f2 <__mulsf3+0xf4>
    20b8:	e6 0c       	add	r14, r6
    20ba:	f7 1c       	adc	r15, r7
    20bc:	08 1d       	adc	r16, r8
    20be:	19 1d       	adc	r17, r9
    20c0:	9a 01       	movw	r18, r20
    20c2:	ab 01       	movw	r20, r22
    20c4:	2a 0d       	add	r18, r10
    20c6:	3b 1d       	adc	r19, r11
    20c8:	4c 1d       	adc	r20, r12
    20ca:	5d 1d       	adc	r21, r13
    20cc:	80 e0       	ldi	r24, 0x00	; 0
    20ce:	90 e0       	ldi	r25, 0x00	; 0
    20d0:	a0 e0       	ldi	r26, 0x00	; 0
    20d2:	b0 e0       	ldi	r27, 0x00	; 0
    20d4:	e6 14       	cp	r14, r6
    20d6:	f7 04       	cpc	r15, r7
    20d8:	08 05       	cpc	r16, r8
    20da:	19 05       	cpc	r17, r9
    20dc:	20 f4       	brcc	.+8      	; 0x20e6 <__mulsf3+0xe8>
    20de:	81 e0       	ldi	r24, 0x01	; 1
    20e0:	90 e0       	ldi	r25, 0x00	; 0
    20e2:	a0 e0       	ldi	r26, 0x00	; 0
    20e4:	b0 e0       	ldi	r27, 0x00	; 0
    20e6:	ba 01       	movw	r22, r20
    20e8:	a9 01       	movw	r20, r18
    20ea:	48 0f       	add	r20, r24
    20ec:	59 1f       	adc	r21, r25
    20ee:	6a 1f       	adc	r22, r26
    20f0:	7b 1f       	adc	r23, r27
    20f2:	aa 0c       	add	r10, r10
    20f4:	bb 1c       	adc	r11, r11
    20f6:	cc 1c       	adc	r12, r12
    20f8:	dd 1c       	adc	r13, r13
    20fa:	97 fe       	sbrs	r9, 7
    20fc:	08 c0       	rjmp	.+16     	; 0x210e <__mulsf3+0x110>
    20fe:	81 e0       	ldi	r24, 0x01	; 1
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	a0 e0       	ldi	r26, 0x00	; 0
    2104:	b0 e0       	ldi	r27, 0x00	; 0
    2106:	a8 2a       	or	r10, r24
    2108:	b9 2a       	or	r11, r25
    210a:	ca 2a       	or	r12, r26
    210c:	db 2a       	or	r13, r27
    210e:	31 96       	adiw	r30, 0x01	; 1
    2110:	e0 32       	cpi	r30, 0x20	; 32
    2112:	f1 05       	cpc	r31, r1
    2114:	49 f0       	breq	.+18     	; 0x2128 <__mulsf3+0x12a>
    2116:	66 0c       	add	r6, r6
    2118:	77 1c       	adc	r7, r7
    211a:	88 1c       	adc	r8, r8
    211c:	99 1c       	adc	r9, r9
    211e:	56 94       	lsr	r5
    2120:	47 94       	ror	r4
    2122:	37 94       	ror	r3
    2124:	27 94       	ror	r2
    2126:	c3 cf       	rjmp	.-122    	; 0x20ae <__mulsf3+0xb0>
    2128:	fa 85       	ldd	r31, Y+10	; 0x0a
    212a:	ea 89       	ldd	r30, Y+18	; 0x12
    212c:	2b 89       	ldd	r18, Y+19	; 0x13
    212e:	3c 89       	ldd	r19, Y+20	; 0x14
    2130:	8b 85       	ldd	r24, Y+11	; 0x0b
    2132:	9c 85       	ldd	r25, Y+12	; 0x0c
    2134:	28 0f       	add	r18, r24
    2136:	39 1f       	adc	r19, r25
    2138:	2e 5f       	subi	r18, 0xFE	; 254
    213a:	3f 4f       	sbci	r19, 0xFF	; 255
    213c:	17 c0       	rjmp	.+46     	; 0x216c <__mulsf3+0x16e>
    213e:	ca 01       	movw	r24, r20
    2140:	81 70       	andi	r24, 0x01	; 1
    2142:	90 70       	andi	r25, 0x00	; 0
    2144:	89 2b       	or	r24, r25
    2146:	61 f0       	breq	.+24     	; 0x2160 <__mulsf3+0x162>
    2148:	16 95       	lsr	r17
    214a:	07 95       	ror	r16
    214c:	f7 94       	ror	r15
    214e:	e7 94       	ror	r14
    2150:	80 e0       	ldi	r24, 0x00	; 0
    2152:	90 e0       	ldi	r25, 0x00	; 0
    2154:	a0 e0       	ldi	r26, 0x00	; 0
    2156:	b0 e8       	ldi	r27, 0x80	; 128
    2158:	e8 2a       	or	r14, r24
    215a:	f9 2a       	or	r15, r25
    215c:	0a 2b       	or	r16, r26
    215e:	1b 2b       	or	r17, r27
    2160:	76 95       	lsr	r23
    2162:	67 95       	ror	r22
    2164:	57 95       	ror	r21
    2166:	47 95       	ror	r20
    2168:	2f 5f       	subi	r18, 0xFF	; 255
    216a:	3f 4f       	sbci	r19, 0xFF	; 255
    216c:	77 fd       	sbrc	r23, 7
    216e:	e7 cf       	rjmp	.-50     	; 0x213e <__mulsf3+0x140>
    2170:	0c c0       	rjmp	.+24     	; 0x218a <__mulsf3+0x18c>
    2172:	44 0f       	add	r20, r20
    2174:	55 1f       	adc	r21, r21
    2176:	66 1f       	adc	r22, r22
    2178:	77 1f       	adc	r23, r23
    217a:	17 fd       	sbrc	r17, 7
    217c:	41 60       	ori	r20, 0x01	; 1
    217e:	ee 0c       	add	r14, r14
    2180:	ff 1c       	adc	r15, r15
    2182:	00 1f       	adc	r16, r16
    2184:	11 1f       	adc	r17, r17
    2186:	21 50       	subi	r18, 0x01	; 1
    2188:	30 40       	sbci	r19, 0x00	; 0
    218a:	40 30       	cpi	r20, 0x00	; 0
    218c:	90 e0       	ldi	r25, 0x00	; 0
    218e:	59 07       	cpc	r21, r25
    2190:	90 e0       	ldi	r25, 0x00	; 0
    2192:	69 07       	cpc	r22, r25
    2194:	90 e4       	ldi	r25, 0x40	; 64
    2196:	79 07       	cpc	r23, r25
    2198:	60 f3       	brcs	.-40     	; 0x2172 <__mulsf3+0x174>
    219a:	2b 8f       	std	Y+27, r18	; 0x1b
    219c:	3c 8f       	std	Y+28, r19	; 0x1c
    219e:	db 01       	movw	r26, r22
    21a0:	ca 01       	movw	r24, r20
    21a2:	8f 77       	andi	r24, 0x7F	; 127
    21a4:	90 70       	andi	r25, 0x00	; 0
    21a6:	a0 70       	andi	r26, 0x00	; 0
    21a8:	b0 70       	andi	r27, 0x00	; 0
    21aa:	80 34       	cpi	r24, 0x40	; 64
    21ac:	91 05       	cpc	r25, r1
    21ae:	a1 05       	cpc	r26, r1
    21b0:	b1 05       	cpc	r27, r1
    21b2:	61 f4       	brne	.+24     	; 0x21cc <__mulsf3+0x1ce>
    21b4:	47 fd       	sbrc	r20, 7
    21b6:	0a c0       	rjmp	.+20     	; 0x21cc <__mulsf3+0x1ce>
    21b8:	e1 14       	cp	r14, r1
    21ba:	f1 04       	cpc	r15, r1
    21bc:	01 05       	cpc	r16, r1
    21be:	11 05       	cpc	r17, r1
    21c0:	29 f0       	breq	.+10     	; 0x21cc <__mulsf3+0x1ce>
    21c2:	40 5c       	subi	r20, 0xC0	; 192
    21c4:	5f 4f       	sbci	r21, 0xFF	; 255
    21c6:	6f 4f       	sbci	r22, 0xFF	; 255
    21c8:	7f 4f       	sbci	r23, 0xFF	; 255
    21ca:	40 78       	andi	r20, 0x80	; 128
    21cc:	1a 8e       	std	Y+26, r1	; 0x1a
    21ce:	fe 17       	cp	r31, r30
    21d0:	11 f0       	breq	.+4      	; 0x21d6 <__mulsf3+0x1d8>
    21d2:	81 e0       	ldi	r24, 0x01	; 1
    21d4:	8a 8f       	std	Y+26, r24	; 0x1a
    21d6:	4d 8f       	std	Y+29, r20	; 0x1d
    21d8:	5e 8f       	std	Y+30, r21	; 0x1e
    21da:	6f 8f       	std	Y+31, r22	; 0x1f
    21dc:	78 a3       	std	Y+32, r23	; 0x20
    21de:	83 e0       	ldi	r24, 0x03	; 3
    21e0:	89 8f       	std	Y+25, r24	; 0x19
    21e2:	ce 01       	movw	r24, r28
    21e4:	49 96       	adiw	r24, 0x19	; 25
    21e6:	0e 94 89 12 	call	0x2512	; 0x2512 <__pack_f>
    21ea:	a0 96       	adiw	r28, 0x20	; 32
    21ec:	e2 e1       	ldi	r30, 0x12	; 18
    21ee:	0c 94 69 26 	jmp	0x4cd2	; 0x4cd2 <__epilogue_restores__>

000021f2 <__divsf3>:
    21f2:	a8 e1       	ldi	r26, 0x18	; 24
    21f4:	b0 e0       	ldi	r27, 0x00	; 0
    21f6:	ef ef       	ldi	r30, 0xFF	; 255
    21f8:	f0 e1       	ldi	r31, 0x10	; 16
    21fa:	0c 94 55 26 	jmp	0x4caa	; 0x4caa <__prologue_saves__+0x10>
    21fe:	69 83       	std	Y+1, r22	; 0x01
    2200:	7a 83       	std	Y+2, r23	; 0x02
    2202:	8b 83       	std	Y+3, r24	; 0x03
    2204:	9c 83       	std	Y+4, r25	; 0x04
    2206:	2d 83       	std	Y+5, r18	; 0x05
    2208:	3e 83       	std	Y+6, r19	; 0x06
    220a:	4f 83       	std	Y+7, r20	; 0x07
    220c:	58 87       	std	Y+8, r21	; 0x08
    220e:	b9 e0       	ldi	r27, 0x09	; 9
    2210:	eb 2e       	mov	r14, r27
    2212:	f1 2c       	mov	r15, r1
    2214:	ec 0e       	add	r14, r28
    2216:	fd 1e       	adc	r15, r29
    2218:	ce 01       	movw	r24, r28
    221a:	01 96       	adiw	r24, 0x01	; 1
    221c:	b7 01       	movw	r22, r14
    221e:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    2222:	8e 01       	movw	r16, r28
    2224:	0f 5e       	subi	r16, 0xEF	; 239
    2226:	1f 4f       	sbci	r17, 0xFF	; 255
    2228:	ce 01       	movw	r24, r28
    222a:	05 96       	adiw	r24, 0x05	; 5
    222c:	b8 01       	movw	r22, r16
    222e:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    2232:	29 85       	ldd	r18, Y+9	; 0x09
    2234:	22 30       	cpi	r18, 0x02	; 2
    2236:	08 f4       	brcc	.+2      	; 0x223a <__divsf3+0x48>
    2238:	7e c0       	rjmp	.+252    	; 0x2336 <__divsf3+0x144>
    223a:	39 89       	ldd	r19, Y+17	; 0x11
    223c:	32 30       	cpi	r19, 0x02	; 2
    223e:	10 f4       	brcc	.+4      	; 0x2244 <__divsf3+0x52>
    2240:	b8 01       	movw	r22, r16
    2242:	7c c0       	rjmp	.+248    	; 0x233c <__divsf3+0x14a>
    2244:	8a 85       	ldd	r24, Y+10	; 0x0a
    2246:	9a 89       	ldd	r25, Y+18	; 0x12
    2248:	89 27       	eor	r24, r25
    224a:	8a 87       	std	Y+10, r24	; 0x0a
    224c:	24 30       	cpi	r18, 0x04	; 4
    224e:	11 f0       	breq	.+4      	; 0x2254 <__divsf3+0x62>
    2250:	22 30       	cpi	r18, 0x02	; 2
    2252:	31 f4       	brne	.+12     	; 0x2260 <__divsf3+0x6e>
    2254:	23 17       	cp	r18, r19
    2256:	09 f0       	breq	.+2      	; 0x225a <__divsf3+0x68>
    2258:	6e c0       	rjmp	.+220    	; 0x2336 <__divsf3+0x144>
    225a:	6b e8       	ldi	r22, 0x8B	; 139
    225c:	70 e0       	ldi	r23, 0x00	; 0
    225e:	6e c0       	rjmp	.+220    	; 0x233c <__divsf3+0x14a>
    2260:	34 30       	cpi	r19, 0x04	; 4
    2262:	39 f4       	brne	.+14     	; 0x2272 <__divsf3+0x80>
    2264:	1d 86       	std	Y+13, r1	; 0x0d
    2266:	1e 86       	std	Y+14, r1	; 0x0e
    2268:	1f 86       	std	Y+15, r1	; 0x0f
    226a:	18 8a       	std	Y+16, r1	; 0x10
    226c:	1c 86       	std	Y+12, r1	; 0x0c
    226e:	1b 86       	std	Y+11, r1	; 0x0b
    2270:	04 c0       	rjmp	.+8      	; 0x227a <__divsf3+0x88>
    2272:	32 30       	cpi	r19, 0x02	; 2
    2274:	21 f4       	brne	.+8      	; 0x227e <__divsf3+0x8c>
    2276:	84 e0       	ldi	r24, 0x04	; 4
    2278:	89 87       	std	Y+9, r24	; 0x09
    227a:	b7 01       	movw	r22, r14
    227c:	5f c0       	rjmp	.+190    	; 0x233c <__divsf3+0x14a>
    227e:	2b 85       	ldd	r18, Y+11	; 0x0b
    2280:	3c 85       	ldd	r19, Y+12	; 0x0c
    2282:	8b 89       	ldd	r24, Y+19	; 0x13
    2284:	9c 89       	ldd	r25, Y+20	; 0x14
    2286:	28 1b       	sub	r18, r24
    2288:	39 0b       	sbc	r19, r25
    228a:	3c 87       	std	Y+12, r19	; 0x0c
    228c:	2b 87       	std	Y+11, r18	; 0x0b
    228e:	ed 84       	ldd	r14, Y+13	; 0x0d
    2290:	fe 84       	ldd	r15, Y+14	; 0x0e
    2292:	0f 85       	ldd	r16, Y+15	; 0x0f
    2294:	18 89       	ldd	r17, Y+16	; 0x10
    2296:	ad 88       	ldd	r10, Y+21	; 0x15
    2298:	be 88       	ldd	r11, Y+22	; 0x16
    229a:	cf 88       	ldd	r12, Y+23	; 0x17
    229c:	d8 8c       	ldd	r13, Y+24	; 0x18
    229e:	ea 14       	cp	r14, r10
    22a0:	fb 04       	cpc	r15, r11
    22a2:	0c 05       	cpc	r16, r12
    22a4:	1d 05       	cpc	r17, r13
    22a6:	40 f4       	brcc	.+16     	; 0x22b8 <__divsf3+0xc6>
    22a8:	ee 0c       	add	r14, r14
    22aa:	ff 1c       	adc	r15, r15
    22ac:	00 1f       	adc	r16, r16
    22ae:	11 1f       	adc	r17, r17
    22b0:	21 50       	subi	r18, 0x01	; 1
    22b2:	30 40       	sbci	r19, 0x00	; 0
    22b4:	3c 87       	std	Y+12, r19	; 0x0c
    22b6:	2b 87       	std	Y+11, r18	; 0x0b
    22b8:	20 e0       	ldi	r18, 0x00	; 0
    22ba:	30 e0       	ldi	r19, 0x00	; 0
    22bc:	40 e0       	ldi	r20, 0x00	; 0
    22be:	50 e0       	ldi	r21, 0x00	; 0
    22c0:	80 e0       	ldi	r24, 0x00	; 0
    22c2:	90 e0       	ldi	r25, 0x00	; 0
    22c4:	a0 e0       	ldi	r26, 0x00	; 0
    22c6:	b0 e4       	ldi	r27, 0x40	; 64
    22c8:	60 e0       	ldi	r22, 0x00	; 0
    22ca:	70 e0       	ldi	r23, 0x00	; 0
    22cc:	ea 14       	cp	r14, r10
    22ce:	fb 04       	cpc	r15, r11
    22d0:	0c 05       	cpc	r16, r12
    22d2:	1d 05       	cpc	r17, r13
    22d4:	40 f0       	brcs	.+16     	; 0x22e6 <__divsf3+0xf4>
    22d6:	28 2b       	or	r18, r24
    22d8:	39 2b       	or	r19, r25
    22da:	4a 2b       	or	r20, r26
    22dc:	5b 2b       	or	r21, r27
    22de:	ea 18       	sub	r14, r10
    22e0:	fb 08       	sbc	r15, r11
    22e2:	0c 09       	sbc	r16, r12
    22e4:	1d 09       	sbc	r17, r13
    22e6:	b6 95       	lsr	r27
    22e8:	a7 95       	ror	r26
    22ea:	97 95       	ror	r25
    22ec:	87 95       	ror	r24
    22ee:	ee 0c       	add	r14, r14
    22f0:	ff 1c       	adc	r15, r15
    22f2:	00 1f       	adc	r16, r16
    22f4:	11 1f       	adc	r17, r17
    22f6:	6f 5f       	subi	r22, 0xFF	; 255
    22f8:	7f 4f       	sbci	r23, 0xFF	; 255
    22fa:	6f 31       	cpi	r22, 0x1F	; 31
    22fc:	71 05       	cpc	r23, r1
    22fe:	31 f7       	brne	.-52     	; 0x22cc <__divsf3+0xda>
    2300:	da 01       	movw	r26, r20
    2302:	c9 01       	movw	r24, r18
    2304:	8f 77       	andi	r24, 0x7F	; 127
    2306:	90 70       	andi	r25, 0x00	; 0
    2308:	a0 70       	andi	r26, 0x00	; 0
    230a:	b0 70       	andi	r27, 0x00	; 0
    230c:	80 34       	cpi	r24, 0x40	; 64
    230e:	91 05       	cpc	r25, r1
    2310:	a1 05       	cpc	r26, r1
    2312:	b1 05       	cpc	r27, r1
    2314:	61 f4       	brne	.+24     	; 0x232e <__divsf3+0x13c>
    2316:	27 fd       	sbrc	r18, 7
    2318:	0a c0       	rjmp	.+20     	; 0x232e <__divsf3+0x13c>
    231a:	e1 14       	cp	r14, r1
    231c:	f1 04       	cpc	r15, r1
    231e:	01 05       	cpc	r16, r1
    2320:	11 05       	cpc	r17, r1
    2322:	29 f0       	breq	.+10     	; 0x232e <__divsf3+0x13c>
    2324:	20 5c       	subi	r18, 0xC0	; 192
    2326:	3f 4f       	sbci	r19, 0xFF	; 255
    2328:	4f 4f       	sbci	r20, 0xFF	; 255
    232a:	5f 4f       	sbci	r21, 0xFF	; 255
    232c:	20 78       	andi	r18, 0x80	; 128
    232e:	2d 87       	std	Y+13, r18	; 0x0d
    2330:	3e 87       	std	Y+14, r19	; 0x0e
    2332:	4f 87       	std	Y+15, r20	; 0x0f
    2334:	58 8b       	std	Y+16, r21	; 0x10
    2336:	be 01       	movw	r22, r28
    2338:	67 5f       	subi	r22, 0xF7	; 247
    233a:	7f 4f       	sbci	r23, 0xFF	; 255
    233c:	cb 01       	movw	r24, r22
    233e:	0e 94 89 12 	call	0x2512	; 0x2512 <__pack_f>
    2342:	68 96       	adiw	r28, 0x18	; 24
    2344:	ea e0       	ldi	r30, 0x0A	; 10
    2346:	0c 94 71 26 	jmp	0x4ce2	; 0x4ce2 <__epilogue_restores__+0x10>

0000234a <__gtsf2>:
    234a:	a8 e1       	ldi	r26, 0x18	; 24
    234c:	b0 e0       	ldi	r27, 0x00	; 0
    234e:	eb ea       	ldi	r30, 0xAB	; 171
    2350:	f1 e1       	ldi	r31, 0x11	; 17
    2352:	0c 94 59 26 	jmp	0x4cb2	; 0x4cb2 <__prologue_saves__+0x18>
    2356:	69 83       	std	Y+1, r22	; 0x01
    2358:	7a 83       	std	Y+2, r23	; 0x02
    235a:	8b 83       	std	Y+3, r24	; 0x03
    235c:	9c 83       	std	Y+4, r25	; 0x04
    235e:	2d 83       	std	Y+5, r18	; 0x05
    2360:	3e 83       	std	Y+6, r19	; 0x06
    2362:	4f 83       	std	Y+7, r20	; 0x07
    2364:	58 87       	std	Y+8, r21	; 0x08
    2366:	89 e0       	ldi	r24, 0x09	; 9
    2368:	e8 2e       	mov	r14, r24
    236a:	f1 2c       	mov	r15, r1
    236c:	ec 0e       	add	r14, r28
    236e:	fd 1e       	adc	r15, r29
    2370:	ce 01       	movw	r24, r28
    2372:	01 96       	adiw	r24, 0x01	; 1
    2374:	b7 01       	movw	r22, r14
    2376:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    237a:	8e 01       	movw	r16, r28
    237c:	0f 5e       	subi	r16, 0xEF	; 239
    237e:	1f 4f       	sbci	r17, 0xFF	; 255
    2380:	ce 01       	movw	r24, r28
    2382:	05 96       	adiw	r24, 0x05	; 5
    2384:	b8 01       	movw	r22, r16
    2386:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    238a:	89 85       	ldd	r24, Y+9	; 0x09
    238c:	82 30       	cpi	r24, 0x02	; 2
    238e:	40 f0       	brcs	.+16     	; 0x23a0 <__gtsf2+0x56>
    2390:	89 89       	ldd	r24, Y+17	; 0x11
    2392:	82 30       	cpi	r24, 0x02	; 2
    2394:	28 f0       	brcs	.+10     	; 0x23a0 <__gtsf2+0x56>
    2396:	c7 01       	movw	r24, r14
    2398:	b8 01       	movw	r22, r16
    239a:	0e 94 d6 13 	call	0x27ac	; 0x27ac <__fpcmp_parts_f>
    239e:	01 c0       	rjmp	.+2      	; 0x23a2 <__gtsf2+0x58>
    23a0:	8f ef       	ldi	r24, 0xFF	; 255
    23a2:	68 96       	adiw	r28, 0x18	; 24
    23a4:	e6 e0       	ldi	r30, 0x06	; 6
    23a6:	0c 94 75 26 	jmp	0x4cea	; 0x4cea <__epilogue_restores__+0x18>

000023aa <__gesf2>:
    23aa:	a8 e1       	ldi	r26, 0x18	; 24
    23ac:	b0 e0       	ldi	r27, 0x00	; 0
    23ae:	eb ed       	ldi	r30, 0xDB	; 219
    23b0:	f1 e1       	ldi	r31, 0x11	; 17
    23b2:	0c 94 59 26 	jmp	0x4cb2	; 0x4cb2 <__prologue_saves__+0x18>
    23b6:	69 83       	std	Y+1, r22	; 0x01
    23b8:	7a 83       	std	Y+2, r23	; 0x02
    23ba:	8b 83       	std	Y+3, r24	; 0x03
    23bc:	9c 83       	std	Y+4, r25	; 0x04
    23be:	2d 83       	std	Y+5, r18	; 0x05
    23c0:	3e 83       	std	Y+6, r19	; 0x06
    23c2:	4f 83       	std	Y+7, r20	; 0x07
    23c4:	58 87       	std	Y+8, r21	; 0x08
    23c6:	89 e0       	ldi	r24, 0x09	; 9
    23c8:	e8 2e       	mov	r14, r24
    23ca:	f1 2c       	mov	r15, r1
    23cc:	ec 0e       	add	r14, r28
    23ce:	fd 1e       	adc	r15, r29
    23d0:	ce 01       	movw	r24, r28
    23d2:	01 96       	adiw	r24, 0x01	; 1
    23d4:	b7 01       	movw	r22, r14
    23d6:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    23da:	8e 01       	movw	r16, r28
    23dc:	0f 5e       	subi	r16, 0xEF	; 239
    23de:	1f 4f       	sbci	r17, 0xFF	; 255
    23e0:	ce 01       	movw	r24, r28
    23e2:	05 96       	adiw	r24, 0x05	; 5
    23e4:	b8 01       	movw	r22, r16
    23e6:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    23ea:	89 85       	ldd	r24, Y+9	; 0x09
    23ec:	82 30       	cpi	r24, 0x02	; 2
    23ee:	40 f0       	brcs	.+16     	; 0x2400 <__gesf2+0x56>
    23f0:	89 89       	ldd	r24, Y+17	; 0x11
    23f2:	82 30       	cpi	r24, 0x02	; 2
    23f4:	28 f0       	brcs	.+10     	; 0x2400 <__gesf2+0x56>
    23f6:	c7 01       	movw	r24, r14
    23f8:	b8 01       	movw	r22, r16
    23fa:	0e 94 d6 13 	call	0x27ac	; 0x27ac <__fpcmp_parts_f>
    23fe:	01 c0       	rjmp	.+2      	; 0x2402 <__gesf2+0x58>
    2400:	8f ef       	ldi	r24, 0xFF	; 255
    2402:	68 96       	adiw	r28, 0x18	; 24
    2404:	e6 e0       	ldi	r30, 0x06	; 6
    2406:	0c 94 75 26 	jmp	0x4cea	; 0x4cea <__epilogue_restores__+0x18>

0000240a <__ltsf2>:
    240a:	a8 e1       	ldi	r26, 0x18	; 24
    240c:	b0 e0       	ldi	r27, 0x00	; 0
    240e:	eb e0       	ldi	r30, 0x0B	; 11
    2410:	f2 e1       	ldi	r31, 0x12	; 18
    2412:	0c 94 59 26 	jmp	0x4cb2	; 0x4cb2 <__prologue_saves__+0x18>
    2416:	69 83       	std	Y+1, r22	; 0x01
    2418:	7a 83       	std	Y+2, r23	; 0x02
    241a:	8b 83       	std	Y+3, r24	; 0x03
    241c:	9c 83       	std	Y+4, r25	; 0x04
    241e:	2d 83       	std	Y+5, r18	; 0x05
    2420:	3e 83       	std	Y+6, r19	; 0x06
    2422:	4f 83       	std	Y+7, r20	; 0x07
    2424:	58 87       	std	Y+8, r21	; 0x08
    2426:	89 e0       	ldi	r24, 0x09	; 9
    2428:	e8 2e       	mov	r14, r24
    242a:	f1 2c       	mov	r15, r1
    242c:	ec 0e       	add	r14, r28
    242e:	fd 1e       	adc	r15, r29
    2430:	ce 01       	movw	r24, r28
    2432:	01 96       	adiw	r24, 0x01	; 1
    2434:	b7 01       	movw	r22, r14
    2436:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    243a:	8e 01       	movw	r16, r28
    243c:	0f 5e       	subi	r16, 0xEF	; 239
    243e:	1f 4f       	sbci	r17, 0xFF	; 255
    2440:	ce 01       	movw	r24, r28
    2442:	05 96       	adiw	r24, 0x05	; 5
    2444:	b8 01       	movw	r22, r16
    2446:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    244a:	89 85       	ldd	r24, Y+9	; 0x09
    244c:	82 30       	cpi	r24, 0x02	; 2
    244e:	40 f0       	brcs	.+16     	; 0x2460 <__ltsf2+0x56>
    2450:	89 89       	ldd	r24, Y+17	; 0x11
    2452:	82 30       	cpi	r24, 0x02	; 2
    2454:	28 f0       	brcs	.+10     	; 0x2460 <__ltsf2+0x56>
    2456:	c7 01       	movw	r24, r14
    2458:	b8 01       	movw	r22, r16
    245a:	0e 94 d6 13 	call	0x27ac	; 0x27ac <__fpcmp_parts_f>
    245e:	01 c0       	rjmp	.+2      	; 0x2462 <__ltsf2+0x58>
    2460:	81 e0       	ldi	r24, 0x01	; 1
    2462:	68 96       	adiw	r28, 0x18	; 24
    2464:	e6 e0       	ldi	r30, 0x06	; 6
    2466:	0c 94 75 26 	jmp	0x4cea	; 0x4cea <__epilogue_restores__+0x18>

0000246a <__fixsfsi>:
    246a:	ac e0       	ldi	r26, 0x0C	; 12
    246c:	b0 e0       	ldi	r27, 0x00	; 0
    246e:	eb e3       	ldi	r30, 0x3B	; 59
    2470:	f2 e1       	ldi	r31, 0x12	; 18
    2472:	0c 94 5d 26 	jmp	0x4cba	; 0x4cba <__prologue_saves__+0x20>
    2476:	69 83       	std	Y+1, r22	; 0x01
    2478:	7a 83       	std	Y+2, r23	; 0x02
    247a:	8b 83       	std	Y+3, r24	; 0x03
    247c:	9c 83       	std	Y+4, r25	; 0x04
    247e:	ce 01       	movw	r24, r28
    2480:	01 96       	adiw	r24, 0x01	; 1
    2482:	be 01       	movw	r22, r28
    2484:	6b 5f       	subi	r22, 0xFB	; 251
    2486:	7f 4f       	sbci	r23, 0xFF	; 255
    2488:	0e 94 5e 13 	call	0x26bc	; 0x26bc <__unpack_f>
    248c:	8d 81       	ldd	r24, Y+5	; 0x05
    248e:	82 30       	cpi	r24, 0x02	; 2
    2490:	61 f1       	breq	.+88     	; 0x24ea <__fixsfsi+0x80>
    2492:	82 30       	cpi	r24, 0x02	; 2
    2494:	50 f1       	brcs	.+84     	; 0x24ea <__fixsfsi+0x80>
    2496:	84 30       	cpi	r24, 0x04	; 4
    2498:	21 f4       	brne	.+8      	; 0x24a2 <__fixsfsi+0x38>
    249a:	8e 81       	ldd	r24, Y+6	; 0x06
    249c:	88 23       	and	r24, r24
    249e:	51 f1       	breq	.+84     	; 0x24f4 <__fixsfsi+0x8a>
    24a0:	2e c0       	rjmp	.+92     	; 0x24fe <__fixsfsi+0x94>
    24a2:	2f 81       	ldd	r18, Y+7	; 0x07
    24a4:	38 85       	ldd	r19, Y+8	; 0x08
    24a6:	37 fd       	sbrc	r19, 7
    24a8:	20 c0       	rjmp	.+64     	; 0x24ea <__fixsfsi+0x80>
    24aa:	6e 81       	ldd	r22, Y+6	; 0x06
    24ac:	2f 31       	cpi	r18, 0x1F	; 31
    24ae:	31 05       	cpc	r19, r1
    24b0:	1c f0       	brlt	.+6      	; 0x24b8 <__fixsfsi+0x4e>
    24b2:	66 23       	and	r22, r22
    24b4:	f9 f0       	breq	.+62     	; 0x24f4 <__fixsfsi+0x8a>
    24b6:	23 c0       	rjmp	.+70     	; 0x24fe <__fixsfsi+0x94>
    24b8:	8e e1       	ldi	r24, 0x1E	; 30
    24ba:	90 e0       	ldi	r25, 0x00	; 0
    24bc:	82 1b       	sub	r24, r18
    24be:	93 0b       	sbc	r25, r19
    24c0:	29 85       	ldd	r18, Y+9	; 0x09
    24c2:	3a 85       	ldd	r19, Y+10	; 0x0a
    24c4:	4b 85       	ldd	r20, Y+11	; 0x0b
    24c6:	5c 85       	ldd	r21, Y+12	; 0x0c
    24c8:	04 c0       	rjmp	.+8      	; 0x24d2 <__fixsfsi+0x68>
    24ca:	56 95       	lsr	r21
    24cc:	47 95       	ror	r20
    24ce:	37 95       	ror	r19
    24d0:	27 95       	ror	r18
    24d2:	8a 95       	dec	r24
    24d4:	d2 f7       	brpl	.-12     	; 0x24ca <__fixsfsi+0x60>
    24d6:	66 23       	and	r22, r22
    24d8:	b1 f0       	breq	.+44     	; 0x2506 <__fixsfsi+0x9c>
    24da:	50 95       	com	r21
    24dc:	40 95       	com	r20
    24de:	30 95       	com	r19
    24e0:	21 95       	neg	r18
    24e2:	3f 4f       	sbci	r19, 0xFF	; 255
    24e4:	4f 4f       	sbci	r20, 0xFF	; 255
    24e6:	5f 4f       	sbci	r21, 0xFF	; 255
    24e8:	0e c0       	rjmp	.+28     	; 0x2506 <__fixsfsi+0x9c>
    24ea:	20 e0       	ldi	r18, 0x00	; 0
    24ec:	30 e0       	ldi	r19, 0x00	; 0
    24ee:	40 e0       	ldi	r20, 0x00	; 0
    24f0:	50 e0       	ldi	r21, 0x00	; 0
    24f2:	09 c0       	rjmp	.+18     	; 0x2506 <__fixsfsi+0x9c>
    24f4:	2f ef       	ldi	r18, 0xFF	; 255
    24f6:	3f ef       	ldi	r19, 0xFF	; 255
    24f8:	4f ef       	ldi	r20, 0xFF	; 255
    24fa:	5f e7       	ldi	r21, 0x7F	; 127
    24fc:	04 c0       	rjmp	.+8      	; 0x2506 <__fixsfsi+0x9c>
    24fe:	20 e0       	ldi	r18, 0x00	; 0
    2500:	30 e0       	ldi	r19, 0x00	; 0
    2502:	40 e0       	ldi	r20, 0x00	; 0
    2504:	50 e8       	ldi	r21, 0x80	; 128
    2506:	b9 01       	movw	r22, r18
    2508:	ca 01       	movw	r24, r20
    250a:	2c 96       	adiw	r28, 0x0c	; 12
    250c:	e2 e0       	ldi	r30, 0x02	; 2
    250e:	0c 94 79 26 	jmp	0x4cf2	; 0x4cf2 <__epilogue_restores__+0x20>

00002512 <__pack_f>:
    2512:	df 92       	push	r13
    2514:	ef 92       	push	r14
    2516:	ff 92       	push	r15
    2518:	0f 93       	push	r16
    251a:	1f 93       	push	r17
    251c:	fc 01       	movw	r30, r24
    251e:	e4 80       	ldd	r14, Z+4	; 0x04
    2520:	f5 80       	ldd	r15, Z+5	; 0x05
    2522:	06 81       	ldd	r16, Z+6	; 0x06
    2524:	17 81       	ldd	r17, Z+7	; 0x07
    2526:	d1 80       	ldd	r13, Z+1	; 0x01
    2528:	80 81       	ld	r24, Z
    252a:	82 30       	cpi	r24, 0x02	; 2
    252c:	48 f4       	brcc	.+18     	; 0x2540 <__pack_f+0x2e>
    252e:	80 e0       	ldi	r24, 0x00	; 0
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	a0 e1       	ldi	r26, 0x10	; 16
    2534:	b0 e0       	ldi	r27, 0x00	; 0
    2536:	e8 2a       	or	r14, r24
    2538:	f9 2a       	or	r15, r25
    253a:	0a 2b       	or	r16, r26
    253c:	1b 2b       	or	r17, r27
    253e:	a5 c0       	rjmp	.+330    	; 0x268a <__pack_f+0x178>
    2540:	84 30       	cpi	r24, 0x04	; 4
    2542:	09 f4       	brne	.+2      	; 0x2546 <__pack_f+0x34>
    2544:	9f c0       	rjmp	.+318    	; 0x2684 <__pack_f+0x172>
    2546:	82 30       	cpi	r24, 0x02	; 2
    2548:	21 f4       	brne	.+8      	; 0x2552 <__pack_f+0x40>
    254a:	ee 24       	eor	r14, r14
    254c:	ff 24       	eor	r15, r15
    254e:	87 01       	movw	r16, r14
    2550:	05 c0       	rjmp	.+10     	; 0x255c <__pack_f+0x4a>
    2552:	e1 14       	cp	r14, r1
    2554:	f1 04       	cpc	r15, r1
    2556:	01 05       	cpc	r16, r1
    2558:	11 05       	cpc	r17, r1
    255a:	19 f4       	brne	.+6      	; 0x2562 <__pack_f+0x50>
    255c:	e0 e0       	ldi	r30, 0x00	; 0
    255e:	f0 e0       	ldi	r31, 0x00	; 0
    2560:	96 c0       	rjmp	.+300    	; 0x268e <__pack_f+0x17c>
    2562:	62 81       	ldd	r22, Z+2	; 0x02
    2564:	73 81       	ldd	r23, Z+3	; 0x03
    2566:	9f ef       	ldi	r25, 0xFF	; 255
    2568:	62 38       	cpi	r22, 0x82	; 130
    256a:	79 07       	cpc	r23, r25
    256c:	0c f0       	brlt	.+2      	; 0x2570 <__pack_f+0x5e>
    256e:	5b c0       	rjmp	.+182    	; 0x2626 <__pack_f+0x114>
    2570:	22 e8       	ldi	r18, 0x82	; 130
    2572:	3f ef       	ldi	r19, 0xFF	; 255
    2574:	26 1b       	sub	r18, r22
    2576:	37 0b       	sbc	r19, r23
    2578:	2a 31       	cpi	r18, 0x1A	; 26
    257a:	31 05       	cpc	r19, r1
    257c:	2c f0       	brlt	.+10     	; 0x2588 <__pack_f+0x76>
    257e:	20 e0       	ldi	r18, 0x00	; 0
    2580:	30 e0       	ldi	r19, 0x00	; 0
    2582:	40 e0       	ldi	r20, 0x00	; 0
    2584:	50 e0       	ldi	r21, 0x00	; 0
    2586:	2a c0       	rjmp	.+84     	; 0x25dc <__pack_f+0xca>
    2588:	b8 01       	movw	r22, r16
    258a:	a7 01       	movw	r20, r14
    258c:	02 2e       	mov	r0, r18
    258e:	04 c0       	rjmp	.+8      	; 0x2598 <__pack_f+0x86>
    2590:	76 95       	lsr	r23
    2592:	67 95       	ror	r22
    2594:	57 95       	ror	r21
    2596:	47 95       	ror	r20
    2598:	0a 94       	dec	r0
    259a:	d2 f7       	brpl	.-12     	; 0x2590 <__pack_f+0x7e>
    259c:	81 e0       	ldi	r24, 0x01	; 1
    259e:	90 e0       	ldi	r25, 0x00	; 0
    25a0:	a0 e0       	ldi	r26, 0x00	; 0
    25a2:	b0 e0       	ldi	r27, 0x00	; 0
    25a4:	04 c0       	rjmp	.+8      	; 0x25ae <__pack_f+0x9c>
    25a6:	88 0f       	add	r24, r24
    25a8:	99 1f       	adc	r25, r25
    25aa:	aa 1f       	adc	r26, r26
    25ac:	bb 1f       	adc	r27, r27
    25ae:	2a 95       	dec	r18
    25b0:	d2 f7       	brpl	.-12     	; 0x25a6 <__pack_f+0x94>
    25b2:	01 97       	sbiw	r24, 0x01	; 1
    25b4:	a1 09       	sbc	r26, r1
    25b6:	b1 09       	sbc	r27, r1
    25b8:	8e 21       	and	r24, r14
    25ba:	9f 21       	and	r25, r15
    25bc:	a0 23       	and	r26, r16
    25be:	b1 23       	and	r27, r17
    25c0:	00 97       	sbiw	r24, 0x00	; 0
    25c2:	a1 05       	cpc	r26, r1
    25c4:	b1 05       	cpc	r27, r1
    25c6:	21 f0       	breq	.+8      	; 0x25d0 <__pack_f+0xbe>
    25c8:	81 e0       	ldi	r24, 0x01	; 1
    25ca:	90 e0       	ldi	r25, 0x00	; 0
    25cc:	a0 e0       	ldi	r26, 0x00	; 0
    25ce:	b0 e0       	ldi	r27, 0x00	; 0
    25d0:	9a 01       	movw	r18, r20
    25d2:	ab 01       	movw	r20, r22
    25d4:	28 2b       	or	r18, r24
    25d6:	39 2b       	or	r19, r25
    25d8:	4a 2b       	or	r20, r26
    25da:	5b 2b       	or	r21, r27
    25dc:	da 01       	movw	r26, r20
    25de:	c9 01       	movw	r24, r18
    25e0:	8f 77       	andi	r24, 0x7F	; 127
    25e2:	90 70       	andi	r25, 0x00	; 0
    25e4:	a0 70       	andi	r26, 0x00	; 0
    25e6:	b0 70       	andi	r27, 0x00	; 0
    25e8:	80 34       	cpi	r24, 0x40	; 64
    25ea:	91 05       	cpc	r25, r1
    25ec:	a1 05       	cpc	r26, r1
    25ee:	b1 05       	cpc	r27, r1
    25f0:	39 f4       	brne	.+14     	; 0x2600 <__pack_f+0xee>
    25f2:	27 ff       	sbrs	r18, 7
    25f4:	09 c0       	rjmp	.+18     	; 0x2608 <__pack_f+0xf6>
    25f6:	20 5c       	subi	r18, 0xC0	; 192
    25f8:	3f 4f       	sbci	r19, 0xFF	; 255
    25fa:	4f 4f       	sbci	r20, 0xFF	; 255
    25fc:	5f 4f       	sbci	r21, 0xFF	; 255
    25fe:	04 c0       	rjmp	.+8      	; 0x2608 <__pack_f+0xf6>
    2600:	21 5c       	subi	r18, 0xC1	; 193
    2602:	3f 4f       	sbci	r19, 0xFF	; 255
    2604:	4f 4f       	sbci	r20, 0xFF	; 255
    2606:	5f 4f       	sbci	r21, 0xFF	; 255
    2608:	e0 e0       	ldi	r30, 0x00	; 0
    260a:	f0 e0       	ldi	r31, 0x00	; 0
    260c:	20 30       	cpi	r18, 0x00	; 0
    260e:	a0 e0       	ldi	r26, 0x00	; 0
    2610:	3a 07       	cpc	r19, r26
    2612:	a0 e0       	ldi	r26, 0x00	; 0
    2614:	4a 07       	cpc	r20, r26
    2616:	a0 e4       	ldi	r26, 0x40	; 64
    2618:	5a 07       	cpc	r21, r26
    261a:	10 f0       	brcs	.+4      	; 0x2620 <__pack_f+0x10e>
    261c:	e1 e0       	ldi	r30, 0x01	; 1
    261e:	f0 e0       	ldi	r31, 0x00	; 0
    2620:	79 01       	movw	r14, r18
    2622:	8a 01       	movw	r16, r20
    2624:	27 c0       	rjmp	.+78     	; 0x2674 <__pack_f+0x162>
    2626:	60 38       	cpi	r22, 0x80	; 128
    2628:	71 05       	cpc	r23, r1
    262a:	64 f5       	brge	.+88     	; 0x2684 <__pack_f+0x172>
    262c:	fb 01       	movw	r30, r22
    262e:	e1 58       	subi	r30, 0x81	; 129
    2630:	ff 4f       	sbci	r31, 0xFF	; 255
    2632:	d8 01       	movw	r26, r16
    2634:	c7 01       	movw	r24, r14
    2636:	8f 77       	andi	r24, 0x7F	; 127
    2638:	90 70       	andi	r25, 0x00	; 0
    263a:	a0 70       	andi	r26, 0x00	; 0
    263c:	b0 70       	andi	r27, 0x00	; 0
    263e:	80 34       	cpi	r24, 0x40	; 64
    2640:	91 05       	cpc	r25, r1
    2642:	a1 05       	cpc	r26, r1
    2644:	b1 05       	cpc	r27, r1
    2646:	39 f4       	brne	.+14     	; 0x2656 <__pack_f+0x144>
    2648:	e7 fe       	sbrs	r14, 7
    264a:	0d c0       	rjmp	.+26     	; 0x2666 <__pack_f+0x154>
    264c:	80 e4       	ldi	r24, 0x40	; 64
    264e:	90 e0       	ldi	r25, 0x00	; 0
    2650:	a0 e0       	ldi	r26, 0x00	; 0
    2652:	b0 e0       	ldi	r27, 0x00	; 0
    2654:	04 c0       	rjmp	.+8      	; 0x265e <__pack_f+0x14c>
    2656:	8f e3       	ldi	r24, 0x3F	; 63
    2658:	90 e0       	ldi	r25, 0x00	; 0
    265a:	a0 e0       	ldi	r26, 0x00	; 0
    265c:	b0 e0       	ldi	r27, 0x00	; 0
    265e:	e8 0e       	add	r14, r24
    2660:	f9 1e       	adc	r15, r25
    2662:	0a 1f       	adc	r16, r26
    2664:	1b 1f       	adc	r17, r27
    2666:	17 ff       	sbrs	r17, 7
    2668:	05 c0       	rjmp	.+10     	; 0x2674 <__pack_f+0x162>
    266a:	16 95       	lsr	r17
    266c:	07 95       	ror	r16
    266e:	f7 94       	ror	r15
    2670:	e7 94       	ror	r14
    2672:	31 96       	adiw	r30, 0x01	; 1
    2674:	87 e0       	ldi	r24, 0x07	; 7
    2676:	16 95       	lsr	r17
    2678:	07 95       	ror	r16
    267a:	f7 94       	ror	r15
    267c:	e7 94       	ror	r14
    267e:	8a 95       	dec	r24
    2680:	d1 f7       	brne	.-12     	; 0x2676 <__pack_f+0x164>
    2682:	05 c0       	rjmp	.+10     	; 0x268e <__pack_f+0x17c>
    2684:	ee 24       	eor	r14, r14
    2686:	ff 24       	eor	r15, r15
    2688:	87 01       	movw	r16, r14
    268a:	ef ef       	ldi	r30, 0xFF	; 255
    268c:	f0 e0       	ldi	r31, 0x00	; 0
    268e:	6e 2f       	mov	r22, r30
    2690:	67 95       	ror	r22
    2692:	66 27       	eor	r22, r22
    2694:	67 95       	ror	r22
    2696:	90 2f       	mov	r25, r16
    2698:	9f 77       	andi	r25, 0x7F	; 127
    269a:	d7 94       	ror	r13
    269c:	dd 24       	eor	r13, r13
    269e:	d7 94       	ror	r13
    26a0:	8e 2f       	mov	r24, r30
    26a2:	86 95       	lsr	r24
    26a4:	49 2f       	mov	r20, r25
    26a6:	46 2b       	or	r20, r22
    26a8:	58 2f       	mov	r21, r24
    26aa:	5d 29       	or	r21, r13
    26ac:	b7 01       	movw	r22, r14
    26ae:	ca 01       	movw	r24, r20
    26b0:	1f 91       	pop	r17
    26b2:	0f 91       	pop	r16
    26b4:	ff 90       	pop	r15
    26b6:	ef 90       	pop	r14
    26b8:	df 90       	pop	r13
    26ba:	08 95       	ret

000026bc <__unpack_f>:
    26bc:	fc 01       	movw	r30, r24
    26be:	db 01       	movw	r26, r22
    26c0:	40 81       	ld	r20, Z
    26c2:	51 81       	ldd	r21, Z+1	; 0x01
    26c4:	22 81       	ldd	r18, Z+2	; 0x02
    26c6:	62 2f       	mov	r22, r18
    26c8:	6f 77       	andi	r22, 0x7F	; 127
    26ca:	70 e0       	ldi	r23, 0x00	; 0
    26cc:	22 1f       	adc	r18, r18
    26ce:	22 27       	eor	r18, r18
    26d0:	22 1f       	adc	r18, r18
    26d2:	93 81       	ldd	r25, Z+3	; 0x03
    26d4:	89 2f       	mov	r24, r25
    26d6:	88 0f       	add	r24, r24
    26d8:	82 2b       	or	r24, r18
    26da:	28 2f       	mov	r18, r24
    26dc:	30 e0       	ldi	r19, 0x00	; 0
    26de:	99 1f       	adc	r25, r25
    26e0:	99 27       	eor	r25, r25
    26e2:	99 1f       	adc	r25, r25
    26e4:	11 96       	adiw	r26, 0x01	; 1
    26e6:	9c 93       	st	X, r25
    26e8:	11 97       	sbiw	r26, 0x01	; 1
    26ea:	21 15       	cp	r18, r1
    26ec:	31 05       	cpc	r19, r1
    26ee:	a9 f5       	brne	.+106    	; 0x275a <__unpack_f+0x9e>
    26f0:	41 15       	cp	r20, r1
    26f2:	51 05       	cpc	r21, r1
    26f4:	61 05       	cpc	r22, r1
    26f6:	71 05       	cpc	r23, r1
    26f8:	11 f4       	brne	.+4      	; 0x26fe <__unpack_f+0x42>
    26fa:	82 e0       	ldi	r24, 0x02	; 2
    26fc:	37 c0       	rjmp	.+110    	; 0x276c <__unpack_f+0xb0>
    26fe:	82 e8       	ldi	r24, 0x82	; 130
    2700:	9f ef       	ldi	r25, 0xFF	; 255
    2702:	13 96       	adiw	r26, 0x03	; 3
    2704:	9c 93       	st	X, r25
    2706:	8e 93       	st	-X, r24
    2708:	12 97       	sbiw	r26, 0x02	; 2
    270a:	9a 01       	movw	r18, r20
    270c:	ab 01       	movw	r20, r22
    270e:	67 e0       	ldi	r22, 0x07	; 7
    2710:	22 0f       	add	r18, r18
    2712:	33 1f       	adc	r19, r19
    2714:	44 1f       	adc	r20, r20
    2716:	55 1f       	adc	r21, r21
    2718:	6a 95       	dec	r22
    271a:	d1 f7       	brne	.-12     	; 0x2710 <__unpack_f+0x54>
    271c:	83 e0       	ldi	r24, 0x03	; 3
    271e:	8c 93       	st	X, r24
    2720:	0d c0       	rjmp	.+26     	; 0x273c <__unpack_f+0x80>
    2722:	22 0f       	add	r18, r18
    2724:	33 1f       	adc	r19, r19
    2726:	44 1f       	adc	r20, r20
    2728:	55 1f       	adc	r21, r21
    272a:	12 96       	adiw	r26, 0x02	; 2
    272c:	8d 91       	ld	r24, X+
    272e:	9c 91       	ld	r25, X
    2730:	13 97       	sbiw	r26, 0x03	; 3
    2732:	01 97       	sbiw	r24, 0x01	; 1
    2734:	13 96       	adiw	r26, 0x03	; 3
    2736:	9c 93       	st	X, r25
    2738:	8e 93       	st	-X, r24
    273a:	12 97       	sbiw	r26, 0x02	; 2
    273c:	20 30       	cpi	r18, 0x00	; 0
    273e:	80 e0       	ldi	r24, 0x00	; 0
    2740:	38 07       	cpc	r19, r24
    2742:	80 e0       	ldi	r24, 0x00	; 0
    2744:	48 07       	cpc	r20, r24
    2746:	80 e4       	ldi	r24, 0x40	; 64
    2748:	58 07       	cpc	r21, r24
    274a:	58 f3       	brcs	.-42     	; 0x2722 <__unpack_f+0x66>
    274c:	14 96       	adiw	r26, 0x04	; 4
    274e:	2d 93       	st	X+, r18
    2750:	3d 93       	st	X+, r19
    2752:	4d 93       	st	X+, r20
    2754:	5c 93       	st	X, r21
    2756:	17 97       	sbiw	r26, 0x07	; 7
    2758:	08 95       	ret
    275a:	2f 3f       	cpi	r18, 0xFF	; 255
    275c:	31 05       	cpc	r19, r1
    275e:	79 f4       	brne	.+30     	; 0x277e <__unpack_f+0xc2>
    2760:	41 15       	cp	r20, r1
    2762:	51 05       	cpc	r21, r1
    2764:	61 05       	cpc	r22, r1
    2766:	71 05       	cpc	r23, r1
    2768:	19 f4       	brne	.+6      	; 0x2770 <__unpack_f+0xb4>
    276a:	84 e0       	ldi	r24, 0x04	; 4
    276c:	8c 93       	st	X, r24
    276e:	08 95       	ret
    2770:	64 ff       	sbrs	r22, 4
    2772:	03 c0       	rjmp	.+6      	; 0x277a <__unpack_f+0xbe>
    2774:	81 e0       	ldi	r24, 0x01	; 1
    2776:	8c 93       	st	X, r24
    2778:	12 c0       	rjmp	.+36     	; 0x279e <__unpack_f+0xe2>
    277a:	1c 92       	st	X, r1
    277c:	10 c0       	rjmp	.+32     	; 0x279e <__unpack_f+0xe2>
    277e:	2f 57       	subi	r18, 0x7F	; 127
    2780:	30 40       	sbci	r19, 0x00	; 0
    2782:	13 96       	adiw	r26, 0x03	; 3
    2784:	3c 93       	st	X, r19
    2786:	2e 93       	st	-X, r18
    2788:	12 97       	sbiw	r26, 0x02	; 2
    278a:	83 e0       	ldi	r24, 0x03	; 3
    278c:	8c 93       	st	X, r24
    278e:	87 e0       	ldi	r24, 0x07	; 7
    2790:	44 0f       	add	r20, r20
    2792:	55 1f       	adc	r21, r21
    2794:	66 1f       	adc	r22, r22
    2796:	77 1f       	adc	r23, r23
    2798:	8a 95       	dec	r24
    279a:	d1 f7       	brne	.-12     	; 0x2790 <__unpack_f+0xd4>
    279c:	70 64       	ori	r23, 0x40	; 64
    279e:	14 96       	adiw	r26, 0x04	; 4
    27a0:	4d 93       	st	X+, r20
    27a2:	5d 93       	st	X+, r21
    27a4:	6d 93       	st	X+, r22
    27a6:	7c 93       	st	X, r23
    27a8:	17 97       	sbiw	r26, 0x07	; 7
    27aa:	08 95       	ret

000027ac <__fpcmp_parts_f>:
    27ac:	1f 93       	push	r17
    27ae:	dc 01       	movw	r26, r24
    27b0:	fb 01       	movw	r30, r22
    27b2:	9c 91       	ld	r25, X
    27b4:	92 30       	cpi	r25, 0x02	; 2
    27b6:	08 f4       	brcc	.+2      	; 0x27ba <__fpcmp_parts_f+0xe>
    27b8:	47 c0       	rjmp	.+142    	; 0x2848 <__fpcmp_parts_f+0x9c>
    27ba:	80 81       	ld	r24, Z
    27bc:	82 30       	cpi	r24, 0x02	; 2
    27be:	08 f4       	brcc	.+2      	; 0x27c2 <__fpcmp_parts_f+0x16>
    27c0:	43 c0       	rjmp	.+134    	; 0x2848 <__fpcmp_parts_f+0x9c>
    27c2:	94 30       	cpi	r25, 0x04	; 4
    27c4:	51 f4       	brne	.+20     	; 0x27da <__fpcmp_parts_f+0x2e>
    27c6:	11 96       	adiw	r26, 0x01	; 1
    27c8:	1c 91       	ld	r17, X
    27ca:	84 30       	cpi	r24, 0x04	; 4
    27cc:	99 f5       	brne	.+102    	; 0x2834 <__fpcmp_parts_f+0x88>
    27ce:	81 81       	ldd	r24, Z+1	; 0x01
    27d0:	68 2f       	mov	r22, r24
    27d2:	70 e0       	ldi	r23, 0x00	; 0
    27d4:	61 1b       	sub	r22, r17
    27d6:	71 09       	sbc	r23, r1
    27d8:	3f c0       	rjmp	.+126    	; 0x2858 <__fpcmp_parts_f+0xac>
    27da:	84 30       	cpi	r24, 0x04	; 4
    27dc:	21 f0       	breq	.+8      	; 0x27e6 <__fpcmp_parts_f+0x3a>
    27de:	92 30       	cpi	r25, 0x02	; 2
    27e0:	31 f4       	brne	.+12     	; 0x27ee <__fpcmp_parts_f+0x42>
    27e2:	82 30       	cpi	r24, 0x02	; 2
    27e4:	b9 f1       	breq	.+110    	; 0x2854 <__fpcmp_parts_f+0xa8>
    27e6:	81 81       	ldd	r24, Z+1	; 0x01
    27e8:	88 23       	and	r24, r24
    27ea:	89 f1       	breq	.+98     	; 0x284e <__fpcmp_parts_f+0xa2>
    27ec:	2d c0       	rjmp	.+90     	; 0x2848 <__fpcmp_parts_f+0x9c>
    27ee:	11 96       	adiw	r26, 0x01	; 1
    27f0:	1c 91       	ld	r17, X
    27f2:	11 97       	sbiw	r26, 0x01	; 1
    27f4:	82 30       	cpi	r24, 0x02	; 2
    27f6:	f1 f0       	breq	.+60     	; 0x2834 <__fpcmp_parts_f+0x88>
    27f8:	81 81       	ldd	r24, Z+1	; 0x01
    27fa:	18 17       	cp	r17, r24
    27fc:	d9 f4       	brne	.+54     	; 0x2834 <__fpcmp_parts_f+0x88>
    27fe:	12 96       	adiw	r26, 0x02	; 2
    2800:	2d 91       	ld	r18, X+
    2802:	3c 91       	ld	r19, X
    2804:	13 97       	sbiw	r26, 0x03	; 3
    2806:	82 81       	ldd	r24, Z+2	; 0x02
    2808:	93 81       	ldd	r25, Z+3	; 0x03
    280a:	82 17       	cp	r24, r18
    280c:	93 07       	cpc	r25, r19
    280e:	94 f0       	brlt	.+36     	; 0x2834 <__fpcmp_parts_f+0x88>
    2810:	28 17       	cp	r18, r24
    2812:	39 07       	cpc	r19, r25
    2814:	bc f0       	brlt	.+46     	; 0x2844 <__fpcmp_parts_f+0x98>
    2816:	14 96       	adiw	r26, 0x04	; 4
    2818:	8d 91       	ld	r24, X+
    281a:	9d 91       	ld	r25, X+
    281c:	0d 90       	ld	r0, X+
    281e:	bc 91       	ld	r27, X
    2820:	a0 2d       	mov	r26, r0
    2822:	24 81       	ldd	r18, Z+4	; 0x04
    2824:	35 81       	ldd	r19, Z+5	; 0x05
    2826:	46 81       	ldd	r20, Z+6	; 0x06
    2828:	57 81       	ldd	r21, Z+7	; 0x07
    282a:	28 17       	cp	r18, r24
    282c:	39 07       	cpc	r19, r25
    282e:	4a 07       	cpc	r20, r26
    2830:	5b 07       	cpc	r21, r27
    2832:	18 f4       	brcc	.+6      	; 0x283a <__fpcmp_parts_f+0x8e>
    2834:	11 23       	and	r17, r17
    2836:	41 f0       	breq	.+16     	; 0x2848 <__fpcmp_parts_f+0x9c>
    2838:	0a c0       	rjmp	.+20     	; 0x284e <__fpcmp_parts_f+0xa2>
    283a:	82 17       	cp	r24, r18
    283c:	93 07       	cpc	r25, r19
    283e:	a4 07       	cpc	r26, r20
    2840:	b5 07       	cpc	r27, r21
    2842:	40 f4       	brcc	.+16     	; 0x2854 <__fpcmp_parts_f+0xa8>
    2844:	11 23       	and	r17, r17
    2846:	19 f0       	breq	.+6      	; 0x284e <__fpcmp_parts_f+0xa2>
    2848:	61 e0       	ldi	r22, 0x01	; 1
    284a:	70 e0       	ldi	r23, 0x00	; 0
    284c:	05 c0       	rjmp	.+10     	; 0x2858 <__fpcmp_parts_f+0xac>
    284e:	6f ef       	ldi	r22, 0xFF	; 255
    2850:	7f ef       	ldi	r23, 0xFF	; 255
    2852:	02 c0       	rjmp	.+4      	; 0x2858 <__fpcmp_parts_f+0xac>
    2854:	60 e0       	ldi	r22, 0x00	; 0
    2856:	70 e0       	ldi	r23, 0x00	; 0
    2858:	cb 01       	movw	r24, r22
    285a:	1f 91       	pop	r17
    285c:	08 95       	ret

0000285e <ADC_VidInit>:
#include "INTERRUPT_Interface.h"
#include "ADC_interface.h"
#include "ADC_private.h"
#include "ADC_cfg.h"

void ADC_VidInit (void){
    285e:	df 93       	push	r29
    2860:	cf 93       	push	r28
    2862:	cd b7       	in	r28, 0x3d	; 61
    2864:	de b7       	in	r29, 0x3e	; 62
/* to choose which Voltage reference we need */
#if VREF_USED == AVCC_5V
	ADMUX = 0x40 ;
    2866:	e7 e2       	ldi	r30, 0x27	; 39
    2868:	f0 e0       	ldi	r31, 0x00	; 0
    286a:	80 e4       	ldi	r24, 0x40	; 64
    286c:	80 83       	st	Z, r24
#elif PRE_SCALAR ==   PRE_SCALAR_32
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS0) ;
#elif PRE_SCALAR ==  PRE_SCALAR_64
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) ;
#elif PRE_SCALAR == PRE_SCALAR_128
	ADCSRA = (1<<ADEN) | (1<<ADPS2) | (1<<ADPS1) | (1<<ADPS0) ;
    286e:	e6 e2       	ldi	r30, 0x26	; 38
    2870:	f0 e0       	ldi	r31, 0x00	; 0
    2872:	87 e8       	ldi	r24, 0x87	; 135
    2874:	80 83       	st	Z, r24
#endif

/*  to choose which adjusted we need to read from ADC DATA REGISTER   */
#if ADJUSTED_USED == RIGHT_ADJEUSTED
	CLR_BIT(ADMUX,ADLAR);                             //CLEAR ADLAR , RIGHT_ADJEUSTED
    2876:	a7 e2       	ldi	r26, 0x27	; 39
    2878:	b0 e0       	ldi	r27, 0x00	; 0
    287a:	e7 e2       	ldi	r30, 0x27	; 39
    287c:	f0 e0       	ldi	r31, 0x00	; 0
    287e:	80 81       	ld	r24, Z
    2880:	8f 7d       	andi	r24, 0xDF	; 223
    2882:	8c 93       	st	X, r24
#elif ADJUSTED_USED == LEFT_ADJUSTED
	SET_BIT(ADMUX,ADLAR);                             //SET ADLAR , LEFT_ADJUSTED
#endif

}
    2884:	cf 91       	pop	r28
    2886:	df 91       	pop	r29
    2888:	08 95       	ret

0000288a <ADC_VidReadChannel>:

u16 ADC_VidReadChannel (u8 Copy_U8Channel){
    288a:	2f 92       	push	r2
    288c:	3f 92       	push	r3
    288e:	4f 92       	push	r4
    2890:	5f 92       	push	r5
    2892:	6f 92       	push	r6
    2894:	7f 92       	push	r7
    2896:	8f 92       	push	r8
    2898:	9f 92       	push	r9
    289a:	af 92       	push	r10
    289c:	bf 92       	push	r11
    289e:	cf 92       	push	r12
    28a0:	df 92       	push	r13
    28a2:	ef 92       	push	r14
    28a4:	ff 92       	push	r15
    28a6:	0f 93       	push	r16
    28a8:	1f 93       	push	r17
    28aa:	df 93       	push	r29
    28ac:	cf 93       	push	r28
    28ae:	0f 92       	push	r0
    28b0:	cd b7       	in	r28, 0x3d	; 61
    28b2:	de b7       	in	r29, 0x3e	; 62
    28b4:	89 83       	std	Y+1, r24	; 0x01
	ADMUX &= 0xE0 ;                                   //to clear ADMUX
    28b6:	a7 e2       	ldi	r26, 0x27	; 39
    28b8:	b0 e0       	ldi	r27, 0x00	; 0
    28ba:	e7 e2       	ldi	r30, 0x27	; 39
    28bc:	f0 e0       	ldi	r31, 0x00	; 0
    28be:	80 81       	ld	r24, Z
    28c0:	80 7e       	andi	r24, 0xE0	; 224
    28c2:	8c 93       	st	X, r24
	ADMUX |= ( 0x1F & Copy_U8Channel ) ;              //to check that the channel out of 8 pins
    28c4:	a7 e2       	ldi	r26, 0x27	; 39
    28c6:	b0 e0       	ldi	r27, 0x00	; 0
    28c8:	e7 e2       	ldi	r30, 0x27	; 39
    28ca:	f0 e0       	ldi	r31, 0x00	; 0
    28cc:	80 81       	ld	r24, Z
    28ce:	98 2f       	mov	r25, r24
    28d0:	89 81       	ldd	r24, Y+1	; 0x01
    28d2:	8f 71       	andi	r24, 0x1F	; 31
    28d4:	89 2b       	or	r24, r25
    28d6:	8c 93       	st	X, r24
	SET_BIT(ADCSRA,ADSC) ;                            //to start conversion
    28d8:	a6 e2       	ldi	r26, 0x26	; 38
    28da:	b0 e0       	ldi	r27, 0x00	; 0
    28dc:	e6 e2       	ldi	r30, 0x26	; 38
    28de:	f0 e0       	ldi	r31, 0x00	; 0
    28e0:	80 81       	ld	r24, Z
    28e2:	80 64       	ori	r24, 0x40	; 64
    28e4:	8c 93       	st	X, r24
	CLR_BIT(ADCSRA,ADATE) ;                           //to disable  Auto Trigger
    28e6:	a6 e2       	ldi	r26, 0x26	; 38
    28e8:	b0 e0       	ldi	r27, 0x00	; 0
    28ea:	e6 e2       	ldi	r30, 0x26	; 38
    28ec:	f0 e0       	ldi	r31, 0x00	; 0
    28ee:	80 81       	ld	r24, Z
    28f0:	8f 7d       	andi	r24, 0xDF	; 223
    28f2:	8c 93       	st	X, r24
	while ( GET_BIT(ADCSRA,ADIF) == 0 ) ;             //to stac while conversion
    28f4:	e6 e2       	ldi	r30, 0x26	; 38
    28f6:	f0 e0       	ldi	r31, 0x00	; 0
    28f8:	80 81       	ld	r24, Z
    28fa:	82 95       	swap	r24
    28fc:	8f 70       	andi	r24, 0x0F	; 15
    28fe:	88 2f       	mov	r24, r24
    2900:	90 e0       	ldi	r25, 0x00	; 0
    2902:	81 70       	andi	r24, 0x01	; 1
    2904:	90 70       	andi	r25, 0x00	; 0
    2906:	00 97       	sbiw	r24, 0x00	; 0
    2908:	a9 f3       	breq	.-22     	; 0x28f4 <ADC_VidReadChannel+0x6a>
    SET_BIT(ADCSRA,ADIF);                             //to clear flag
    290a:	a6 e2       	ldi	r26, 0x26	; 38
    290c:	b0 e0       	ldi	r27, 0x00	; 0
    290e:	e6 e2       	ldi	r30, 0x26	; 38
    2910:	f0 e0       	ldi	r31, 0x00	; 0
    2912:	80 81       	ld	r24, Z
    2914:	80 61       	ori	r24, 0x10	; 16
    2916:	8c 93       	st	X, r24

#if ADJUSTED_USED == RIGHT_ADJEUSTED
    return ( (u64)ADC_REG*VREF*1000)/MAX_DIGITAL ;        //to return Analog value in mv value
    2918:	e4 e2       	ldi	r30, 0x24	; 36
    291a:	f0 e0       	ldi	r31, 0x00	; 0
    291c:	80 81       	ld	r24, Z
    291e:	91 81       	ldd	r25, Z+1	; 0x01
    2920:	5c 01       	movw	r10, r24
    2922:	cc 24       	eor	r12, r12
    2924:	dd 24       	eor	r13, r13
    2926:	ee 24       	eor	r14, r14
    2928:	ff 24       	eor	r15, r15
    292a:	87 01       	movw	r16, r14
    292c:	2a 2d       	mov	r18, r10
    292e:	3b 2d       	mov	r19, r11
    2930:	4c 2d       	mov	r20, r12
    2932:	5d 2d       	mov	r21, r13
    2934:	6e 2d       	mov	r22, r14
    2936:	7f 2d       	mov	r23, r15
    2938:	80 2f       	mov	r24, r16
    293a:	91 2f       	mov	r25, r17
    293c:	0f 2e       	mov	r0, r31
    293e:	f8 e8       	ldi	r31, 0x88	; 136
    2940:	af 2e       	mov	r10, r31
    2942:	f0 2d       	mov	r31, r0
    2944:	0f 2e       	mov	r0, r31
    2946:	f3 e1       	ldi	r31, 0x13	; 19
    2948:	bf 2e       	mov	r11, r31
    294a:	f0 2d       	mov	r31, r0
    294c:	cc 24       	eor	r12, r12
    294e:	dd 24       	eor	r13, r13
    2950:	ee 24       	eor	r14, r14
    2952:	ff 24       	eor	r15, r15
    2954:	00 e0       	ldi	r16, 0x00	; 0
    2956:	10 e0       	ldi	r17, 0x00	; 0
    2958:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    295c:	22 2e       	mov	r2, r18
    295e:	33 2e       	mov	r3, r19
    2960:	44 2e       	mov	r4, r20
    2962:	55 2e       	mov	r5, r21
    2964:	66 2e       	mov	r6, r22
    2966:	77 2e       	mov	r7, r23
    2968:	88 2e       	mov	r8, r24
    296a:	99 2e       	mov	r9, r25
    296c:	a2 2c       	mov	r10, r2
    296e:	b3 2c       	mov	r11, r3
    2970:	c4 2c       	mov	r12, r4
    2972:	d5 2c       	mov	r13, r5
    2974:	e6 2c       	mov	r14, r6
    2976:	f7 2c       	mov	r15, r7
    2978:	08 2d       	mov	r16, r8
    297a:	19 2d       	mov	r17, r9
    297c:	2a 2d       	mov	r18, r10
    297e:	3b 2d       	mov	r19, r11
    2980:	4c 2d       	mov	r20, r12
    2982:	5d 2d       	mov	r21, r13
    2984:	6e 2d       	mov	r22, r14
    2986:	7f 2d       	mov	r23, r15
    2988:	80 2f       	mov	r24, r16
    298a:	91 2f       	mov	r25, r17
    298c:	aa 24       	eor	r10, r10
    298e:	aa 94       	dec	r10
    2990:	0f 2e       	mov	r0, r31
    2992:	f3 e0       	ldi	r31, 0x03	; 3
    2994:	bf 2e       	mov	r11, r31
    2996:	f0 2d       	mov	r31, r0
    2998:	cc 24       	eor	r12, r12
    299a:	dd 24       	eor	r13, r13
    299c:	ee 24       	eor	r14, r14
    299e:	ff 24       	eor	r15, r15
    29a0:	00 e0       	ldi	r16, 0x00	; 0
    29a2:	10 e0       	ldi	r17, 0x00	; 0
    29a4:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__udivdi3>
    29a8:	a2 2e       	mov	r10, r18
    29aa:	b3 2e       	mov	r11, r19
    29ac:	c4 2e       	mov	r12, r20
    29ae:	d5 2e       	mov	r13, r21
    29b0:	e6 2e       	mov	r14, r22
    29b2:	f7 2e       	mov	r15, r23
    29b4:	08 2f       	mov	r16, r24
    29b6:	19 2f       	mov	r17, r25
    29b8:	2a 2d       	mov	r18, r10
    29ba:	3b 2d       	mov	r19, r11
    29bc:	4c 2d       	mov	r20, r12
    29be:	5d 2d       	mov	r21, r13
    29c0:	6e 2d       	mov	r22, r14
    29c2:	7f 2d       	mov	r23, r15
    29c4:	80 2f       	mov	r24, r16
    29c6:	91 2f       	mov	r25, r17
    29c8:	c9 01       	movw	r24, r18
#elif ADJUSTED_USED == LEFT_ADJUSTED
    ADCH = (ADCH<<2) ;
    return ( (u64)ADCH*VREF*1000)/MAX_DIGITAL ;        //to return Analog value in mv value
#endif
}
    29ca:	0f 90       	pop	r0
    29cc:	cf 91       	pop	r28
    29ce:	df 91       	pop	r29
    29d0:	1f 91       	pop	r17
    29d2:	0f 91       	pop	r16
    29d4:	ff 90       	pop	r15
    29d6:	ef 90       	pop	r14
    29d8:	df 90       	pop	r13
    29da:	cf 90       	pop	r12
    29dc:	bf 90       	pop	r11
    29de:	af 90       	pop	r10
    29e0:	9f 90       	pop	r9
    29e2:	8f 90       	pop	r8
    29e4:	7f 90       	pop	r7
    29e6:	6f 90       	pop	r6
    29e8:	5f 90       	pop	r5
    29ea:	4f 90       	pop	r4
    29ec:	3f 90       	pop	r3
    29ee:	2f 90       	pop	r2
    29f0:	08 95       	ret

000029f2 <ADC_VidDeinit>:

void ADC_VidDeinit (void){
    29f2:	df 93       	push	r29
    29f4:	cf 93       	push	r28
    29f6:	cd b7       	in	r28, 0x3d	; 61
    29f8:	de b7       	in	r29, 0x3e	; 62
	CLR_BIT(ADCSRA,ADEN);                             //to disable ADC perpherial
    29fa:	a6 e2       	ldi	r26, 0x26	; 38
    29fc:	b0 e0       	ldi	r27, 0x00	; 0
    29fe:	e6 e2       	ldi	r30, 0x26	; 38
    2a00:	f0 e0       	ldi	r31, 0x00	; 0
    2a02:	80 81       	ld	r24, Z
    2a04:	8f 77       	andi	r24, 0x7F	; 127
    2a06:	8c 93       	st	X, r24
    ADMUX = 0x00 ;                                    //to clear ADMUX
    2a08:	e7 e2       	ldi	r30, 0x27	; 39
    2a0a:	f0 e0       	ldi	r31, 0x00	; 0
    2a0c:	10 82       	st	Z, r1
}
    2a0e:	cf 91       	pop	r28
    2a10:	df 91       	pop	r29
    2a12:	08 95       	ret

00002a14 <PWM_VidInit>:
#include "DC_MOTOR_private.h"



void PWM_VidInit()
{
    2a14:	df 93       	push	r29
    2a16:	cf 93       	push	r28
    2a18:	cd b7       	in	r28, 0x3d	; 61
    2a1a:	de b7       	in	r29, 0x3e	; 62
	/*set fast PWM mode with non-inverted output*/
	TCCR0 = (1<<WGM00) | (1<<WGM01) | (1<<COM01) | (1<<CS00);
    2a1c:	e3 e5       	ldi	r30, 0x53	; 83
    2a1e:	f0 e0       	ldi	r31, 0x00	; 0
    2a20:	89 e6       	ldi	r24, 0x69	; 105
    2a22:	80 83       	st	Z, r24
    DIO_VidSetPinDirection(PWM_PORT,PWM_PIN,HIGH);
    2a24:	81 e0       	ldi	r24, 0x01	; 1
    2a26:	63 e0       	ldi	r22, 0x03	; 3
    2a28:	41 e0       	ldi	r20, 0x01	; 1
    2a2a:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
}
    2a2e:	cf 91       	pop	r28
    2a30:	df 91       	pop	r29
    2a32:	08 95       	ret

00002a34 <PWM_VidSetDuty>:

void PWM_VidSetDuty (u8 Copy_U8Duty){
    2a34:	df 93       	push	r29
    2a36:	cf 93       	push	r28
    2a38:	0f 92       	push	r0
    2a3a:	cd b7       	in	r28, 0x3d	; 61
    2a3c:	de b7       	in	r29, 0x3e	; 62
    2a3e:	89 83       	std	Y+1, r24	; 0x01
	OCR0 = Copy_U8Duty ;
    2a40:	ec e5       	ldi	r30, 0x5C	; 92
    2a42:	f0 e0       	ldi	r31, 0x00	; 0
    2a44:	89 81       	ldd	r24, Y+1	; 0x01
    2a46:	80 83       	st	Z, r24
	if (Copy_U8Duty == 0)
    2a48:	89 81       	ldd	r24, Y+1	; 0x01
    2a4a:	88 23       	and	r24, r24
    2a4c:	21 f4       	brne	.+8      	; 0x2a56 <PWM_VidSetDuty+0x22>
		 DcMotor_VidRotate(STOP);
    2a4e:	80 e0       	ldi	r24, 0x00	; 0
    2a50:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <DcMotor_VidRotate>
    2a54:	03 c0       	rjmp	.+6      	; 0x2a5c <PWM_VidSetDuty+0x28>
	else
		DcMotor_VidRotate(CLK_WISE);
    2a56:	81 e0       	ldi	r24, 0x01	; 1
    2a58:	0e 94 4d 15 	call	0x2a9a	; 0x2a9a <DcMotor_VidRotate>
}
    2a5c:	0f 90       	pop	r0
    2a5e:	cf 91       	pop	r28
    2a60:	df 91       	pop	r29
    2a62:	08 95       	ret

00002a64 <DcMotor_VidInit>:

void DcMotor_VidInit(void){
    2a64:	df 93       	push	r29
    2a66:	cf 93       	push	r28
    2a68:	cd b7       	in	r28, 0x3d	; 61
    2a6a:	de b7       	in	r29, 0x3e	; 62
	/*set the direction of the two input pins of the dc motor to be output pins */
	DIO_VidSetPinDirection(DC_MOTOR_PORT , DC_MOTOR_PIN1 , HIGH);
    2a6c:	81 e0       	ldi	r24, 0x01	; 1
    2a6e:	60 e0       	ldi	r22, 0x00	; 0
    2a70:	41 e0       	ldi	r20, 0x01	; 1
    2a72:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(DC_MOTOR_PORT , DC_MOTOR_PIN2 , HIGH);
    2a76:	81 e0       	ldi	r24, 0x01	; 1
    2a78:	61 e0       	ldi	r22, 0x01	; 1
    2a7a:	41 e0       	ldi	r20, 0x01	; 1
    2a7c:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>

	/*initialize the dc motor to be stop at the beginning*/
	DIO_VidSetPinValue(DC_MOTOR_PORT , DC_MOTOR_PIN1 , LOW);
    2a80:	81 e0       	ldi	r24, 0x01	; 1
    2a82:	60 e0       	ldi	r22, 0x00	; 0
    2a84:	40 e0       	ldi	r20, 0x00	; 0
    2a86:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
	DIO_VidSetPinValue(DC_MOTOR_PORT , DC_MOTOR_PIN2 , LOW);
    2a8a:	81 e0       	ldi	r24, 0x01	; 1
    2a8c:	61 e0       	ldi	r22, 0x01	; 1
    2a8e:	40 e0       	ldi	r20, 0x00	; 0
    2a90:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
}
    2a94:	cf 91       	pop	r28
    2a96:	df 91       	pop	r29
    2a98:	08 95       	ret

00002a9a <DcMotor_VidRotate>:

void DcMotor_VidRotate(u8 Copy_U8state){
    2a9a:	df 93       	push	r29
    2a9c:	cf 93       	push	r28
    2a9e:	00 d0       	rcall	.+0      	; 0x2aa0 <DcMotor_VidRotate+0x6>
    2aa0:	0f 92       	push	r0
    2aa2:	cd b7       	in	r28, 0x3d	; 61
    2aa4:	de b7       	in	r29, 0x3e	; 62
    2aa6:	89 83       	std	Y+1, r24	; 0x01
	switch(Copy_U8state){
    2aa8:	89 81       	ldd	r24, Y+1	; 0x01
    2aaa:	28 2f       	mov	r18, r24
    2aac:	30 e0       	ldi	r19, 0x00	; 0
    2aae:	3b 83       	std	Y+3, r19	; 0x03
    2ab0:	2a 83       	std	Y+2, r18	; 0x02
    2ab2:	8a 81       	ldd	r24, Y+2	; 0x02
    2ab4:	9b 81       	ldd	r25, Y+3	; 0x03
    2ab6:	81 30       	cpi	r24, 0x01	; 1
    2ab8:	91 05       	cpc	r25, r1
    2aba:	a1 f0       	breq	.+40     	; 0x2ae4 <DcMotor_VidRotate+0x4a>
    2abc:	2a 81       	ldd	r18, Y+2	; 0x02
    2abe:	3b 81       	ldd	r19, Y+3	; 0x03
    2ac0:	22 30       	cpi	r18, 0x02	; 2
    2ac2:	31 05       	cpc	r19, r1
    2ac4:	d1 f0       	breq	.+52     	; 0x2afa <DcMotor_VidRotate+0x60>
    2ac6:	8a 81       	ldd	r24, Y+2	; 0x02
    2ac8:	9b 81       	ldd	r25, Y+3	; 0x03
    2aca:	00 97       	sbiw	r24, 0x00	; 0
    2acc:	01 f5       	brne	.+64     	; 0x2b0e <DcMotor_VidRotate+0x74>
	case STOP:
		/*make the dc motor stop*/
		DIO_VidSetPinValue(DC_MOTOR_PORT , DC_MOTOR_PIN1 , LOW);
    2ace:	81 e0       	ldi	r24, 0x01	; 1
    2ad0:	60 e0       	ldi	r22, 0x00	; 0
    2ad2:	40 e0       	ldi	r20, 0x00	; 0
    2ad4:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
		DIO_VidSetPinValue(DC_MOTOR_PORT , DC_MOTOR_PIN2 , LOW);
    2ad8:	81 e0       	ldi	r24, 0x01	; 1
    2ada:	61 e0       	ldi	r22, 0x01	; 1
    2adc:	40 e0       	ldi	r20, 0x00	; 0
    2ade:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    2ae2:	15 c0       	rjmp	.+42     	; 0x2b0e <DcMotor_VidRotate+0x74>
		break;
	case CLK_WISE:
		/*make the dc motor start in CLOCK_WISE direction*/
		DIO_VidSetPinValue(DC_MOTOR_PORT , DC_MOTOR_PIN1 , LOW);
    2ae4:	81 e0       	ldi	r24, 0x01	; 1
    2ae6:	60 e0       	ldi	r22, 0x00	; 0
    2ae8:	40 e0       	ldi	r20, 0x00	; 0
    2aea:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
		DIO_VidSetPinValue(DC_MOTOR_PORT , DC_MOTOR_PIN2 , HIGH);
    2aee:	81 e0       	ldi	r24, 0x01	; 1
    2af0:	61 e0       	ldi	r22, 0x01	; 1
    2af2:	41 e0       	ldi	r20, 0x01	; 1
    2af4:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    2af8:	0a c0       	rjmp	.+20     	; 0x2b0e <DcMotor_VidRotate+0x74>
		break;
	case ANTI_CLK_WISE:
		/*make the dc motor start in ANTI_CLOCK_WISE  direction*/
		DIO_VidSetPinValue(DC_MOTOR_PORT , DC_MOTOR_PIN1 , HIGH);
    2afa:	81 e0       	ldi	r24, 0x01	; 1
    2afc:	60 e0       	ldi	r22, 0x00	; 0
    2afe:	41 e0       	ldi	r20, 0x01	; 1
    2b00:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
		DIO_VidSetPinValue(DC_MOTOR_PORT , DC_MOTOR_PIN2 , LOW);
    2b04:	81 e0       	ldi	r24, 0x01	; 1
    2b06:	61 e0       	ldi	r22, 0x01	; 1
    2b08:	40 e0       	ldi	r20, 0x00	; 0
    2b0a:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
		break;
	}
}
    2b0e:	0f 90       	pop	r0
    2b10:	0f 90       	pop	r0
    2b12:	0f 90       	pop	r0
    2b14:	cf 91       	pop	r28
    2b16:	df 91       	pop	r29
    2b18:	08 95       	ret

00002b1a <DIO_VidSetPinDirection>:
#include"../LIB/STD_TYPES.h"
#include"../LIB/BIT_MATH.h"
#include"DIO_private.h"
#include"DIO_interface.h"

void DIO_VidSetPinDirection (u8 Copy_U8Port , u8 Copy_U8Pin , u8 Copy_U8Dir ) {
    2b1a:	df 93       	push	r29
    2b1c:	cf 93       	push	r28
    2b1e:	cd b7       	in	r28, 0x3d	; 61
    2b20:	de b7       	in	r29, 0x3e	; 62
    2b22:	27 97       	sbiw	r28, 0x07	; 7
    2b24:	0f b6       	in	r0, 0x3f	; 63
    2b26:	f8 94       	cli
    2b28:	de bf       	out	0x3e, r29	; 62
    2b2a:	0f be       	out	0x3f, r0	; 63
    2b2c:	cd bf       	out	0x3d, r28	; 61
    2b2e:	89 83       	std	Y+1, r24	; 0x01
    2b30:	6a 83       	std	Y+2, r22	; 0x02
    2b32:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1 == Copy_U8Dir ){
    2b34:	8b 81       	ldd	r24, Y+3	; 0x03
    2b36:	81 30       	cpi	r24, 0x01	; 1
    2b38:	09 f0       	breq	.+2      	; 0x2b3c <DIO_VidSetPinDirection+0x22>
    2b3a:	6f c0       	rjmp	.+222    	; 0x2c1a <DIO_VidSetPinDirection+0x100>
		switch (Copy_U8Port){
    2b3c:	89 81       	ldd	r24, Y+1	; 0x01
    2b3e:	28 2f       	mov	r18, r24
    2b40:	30 e0       	ldi	r19, 0x00	; 0
    2b42:	3f 83       	std	Y+7, r19	; 0x07
    2b44:	2e 83       	std	Y+6, r18	; 0x06
    2b46:	8e 81       	ldd	r24, Y+6	; 0x06
    2b48:	9f 81       	ldd	r25, Y+7	; 0x07
    2b4a:	81 30       	cpi	r24, 0x01	; 1
    2b4c:	91 05       	cpc	r25, r1
    2b4e:	49 f1       	breq	.+82     	; 0x2ba2 <DIO_VidSetPinDirection+0x88>
    2b50:	2e 81       	ldd	r18, Y+6	; 0x06
    2b52:	3f 81       	ldd	r19, Y+7	; 0x07
    2b54:	22 30       	cpi	r18, 0x02	; 2
    2b56:	31 05       	cpc	r19, r1
    2b58:	2c f4       	brge	.+10     	; 0x2b64 <DIO_VidSetPinDirection+0x4a>
    2b5a:	8e 81       	ldd	r24, Y+6	; 0x06
    2b5c:	9f 81       	ldd	r25, Y+7	; 0x07
    2b5e:	00 97       	sbiw	r24, 0x00	; 0
    2b60:	61 f0       	breq	.+24     	; 0x2b7a <DIO_VidSetPinDirection+0x60>
    2b62:	d2 c0       	rjmp	.+420    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
    2b64:	2e 81       	ldd	r18, Y+6	; 0x06
    2b66:	3f 81       	ldd	r19, Y+7	; 0x07
    2b68:	22 30       	cpi	r18, 0x02	; 2
    2b6a:	31 05       	cpc	r19, r1
    2b6c:	71 f1       	breq	.+92     	; 0x2bca <DIO_VidSetPinDirection+0xb0>
    2b6e:	8e 81       	ldd	r24, Y+6	; 0x06
    2b70:	9f 81       	ldd	r25, Y+7	; 0x07
    2b72:	83 30       	cpi	r24, 0x03	; 3
    2b74:	91 05       	cpc	r25, r1
    2b76:	e9 f1       	breq	.+122    	; 0x2bf2 <DIO_VidSetPinDirection+0xd8>
    2b78:	c7 c0       	rjmp	.+398    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			case 0 : 
			    SET_BIT(DDRA,Copy_U8Pin);
    2b7a:	aa e3       	ldi	r26, 0x3A	; 58
    2b7c:	b0 e0       	ldi	r27, 0x00	; 0
    2b7e:	ea e3       	ldi	r30, 0x3A	; 58
    2b80:	f0 e0       	ldi	r31, 0x00	; 0
    2b82:	80 81       	ld	r24, Z
    2b84:	48 2f       	mov	r20, r24
    2b86:	8a 81       	ldd	r24, Y+2	; 0x02
    2b88:	28 2f       	mov	r18, r24
    2b8a:	30 e0       	ldi	r19, 0x00	; 0
    2b8c:	81 e0       	ldi	r24, 0x01	; 1
    2b8e:	90 e0       	ldi	r25, 0x00	; 0
    2b90:	02 2e       	mov	r0, r18
    2b92:	02 c0       	rjmp	.+4      	; 0x2b98 <DIO_VidSetPinDirection+0x7e>
    2b94:	88 0f       	add	r24, r24
    2b96:	99 1f       	adc	r25, r25
    2b98:	0a 94       	dec	r0
    2b9a:	e2 f7       	brpl	.-8      	; 0x2b94 <DIO_VidSetPinDirection+0x7a>
    2b9c:	84 2b       	or	r24, r20
    2b9e:	8c 93       	st	X, r24
    2ba0:	b3 c0       	rjmp	.+358    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 1 : 
			    SET_BIT(DDRB,Copy_U8Pin);
    2ba2:	a7 e3       	ldi	r26, 0x37	; 55
    2ba4:	b0 e0       	ldi	r27, 0x00	; 0
    2ba6:	e7 e3       	ldi	r30, 0x37	; 55
    2ba8:	f0 e0       	ldi	r31, 0x00	; 0
    2baa:	80 81       	ld	r24, Z
    2bac:	48 2f       	mov	r20, r24
    2bae:	8a 81       	ldd	r24, Y+2	; 0x02
    2bb0:	28 2f       	mov	r18, r24
    2bb2:	30 e0       	ldi	r19, 0x00	; 0
    2bb4:	81 e0       	ldi	r24, 0x01	; 1
    2bb6:	90 e0       	ldi	r25, 0x00	; 0
    2bb8:	02 2e       	mov	r0, r18
    2bba:	02 c0       	rjmp	.+4      	; 0x2bc0 <DIO_VidSetPinDirection+0xa6>
    2bbc:	88 0f       	add	r24, r24
    2bbe:	99 1f       	adc	r25, r25
    2bc0:	0a 94       	dec	r0
    2bc2:	e2 f7       	brpl	.-8      	; 0x2bbc <DIO_VidSetPinDirection+0xa2>
    2bc4:	84 2b       	or	r24, r20
    2bc6:	8c 93       	st	X, r24
    2bc8:	9f c0       	rjmp	.+318    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			    break ;			
			case 2 : 
			    SET_BIT(DDRC,Copy_U8Pin);
    2bca:	a4 e3       	ldi	r26, 0x34	; 52
    2bcc:	b0 e0       	ldi	r27, 0x00	; 0
    2bce:	e4 e3       	ldi	r30, 0x34	; 52
    2bd0:	f0 e0       	ldi	r31, 0x00	; 0
    2bd2:	80 81       	ld	r24, Z
    2bd4:	48 2f       	mov	r20, r24
    2bd6:	8a 81       	ldd	r24, Y+2	; 0x02
    2bd8:	28 2f       	mov	r18, r24
    2bda:	30 e0       	ldi	r19, 0x00	; 0
    2bdc:	81 e0       	ldi	r24, 0x01	; 1
    2bde:	90 e0       	ldi	r25, 0x00	; 0
    2be0:	02 2e       	mov	r0, r18
    2be2:	02 c0       	rjmp	.+4      	; 0x2be8 <DIO_VidSetPinDirection+0xce>
    2be4:	88 0f       	add	r24, r24
    2be6:	99 1f       	adc	r25, r25
    2be8:	0a 94       	dec	r0
    2bea:	e2 f7       	brpl	.-8      	; 0x2be4 <DIO_VidSetPinDirection+0xca>
    2bec:	84 2b       	or	r24, r20
    2bee:	8c 93       	st	X, r24
    2bf0:	8b c0       	rjmp	.+278    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 3 : 
			    SET_BIT(DDRD,Copy_U8Pin);
    2bf2:	a1 e3       	ldi	r26, 0x31	; 49
    2bf4:	b0 e0       	ldi	r27, 0x00	; 0
    2bf6:	e1 e3       	ldi	r30, 0x31	; 49
    2bf8:	f0 e0       	ldi	r31, 0x00	; 0
    2bfa:	80 81       	ld	r24, Z
    2bfc:	48 2f       	mov	r20, r24
    2bfe:	8a 81       	ldd	r24, Y+2	; 0x02
    2c00:	28 2f       	mov	r18, r24
    2c02:	30 e0       	ldi	r19, 0x00	; 0
    2c04:	81 e0       	ldi	r24, 0x01	; 1
    2c06:	90 e0       	ldi	r25, 0x00	; 0
    2c08:	02 2e       	mov	r0, r18
    2c0a:	02 c0       	rjmp	.+4      	; 0x2c10 <DIO_VidSetPinDirection+0xf6>
    2c0c:	88 0f       	add	r24, r24
    2c0e:	99 1f       	adc	r25, r25
    2c10:	0a 94       	dec	r0
    2c12:	e2 f7       	brpl	.-8      	; 0x2c0c <DIO_VidSetPinDirection+0xf2>
    2c14:	84 2b       	or	r24, r20
    2c16:	8c 93       	st	X, r24
    2c18:	77 c0       	rjmp	.+238    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			    break ; 
		}//end switch
	}//end if
	else if ( 0 == Copy_U8Dir ) {
    2c1a:	8b 81       	ldd	r24, Y+3	; 0x03
    2c1c:	88 23       	and	r24, r24
    2c1e:	09 f0       	breq	.+2      	; 0x2c22 <DIO_VidSetPinDirection+0x108>
    2c20:	73 c0       	rjmp	.+230    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
		switch (Copy_U8Port){
    2c22:	89 81       	ldd	r24, Y+1	; 0x01
    2c24:	28 2f       	mov	r18, r24
    2c26:	30 e0       	ldi	r19, 0x00	; 0
    2c28:	3d 83       	std	Y+5, r19	; 0x05
    2c2a:	2c 83       	std	Y+4, r18	; 0x04
    2c2c:	8c 81       	ldd	r24, Y+4	; 0x04
    2c2e:	9d 81       	ldd	r25, Y+5	; 0x05
    2c30:	81 30       	cpi	r24, 0x01	; 1
    2c32:	91 05       	cpc	r25, r1
    2c34:	59 f1       	breq	.+86     	; 0x2c8c <DIO_VidSetPinDirection+0x172>
    2c36:	2c 81       	ldd	r18, Y+4	; 0x04
    2c38:	3d 81       	ldd	r19, Y+5	; 0x05
    2c3a:	22 30       	cpi	r18, 0x02	; 2
    2c3c:	31 05       	cpc	r19, r1
    2c3e:	2c f4       	brge	.+10     	; 0x2c4a <DIO_VidSetPinDirection+0x130>
    2c40:	8c 81       	ldd	r24, Y+4	; 0x04
    2c42:	9d 81       	ldd	r25, Y+5	; 0x05
    2c44:	00 97       	sbiw	r24, 0x00	; 0
    2c46:	69 f0       	breq	.+26     	; 0x2c62 <DIO_VidSetPinDirection+0x148>
    2c48:	5f c0       	rjmp	.+190    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
    2c4a:	2c 81       	ldd	r18, Y+4	; 0x04
    2c4c:	3d 81       	ldd	r19, Y+5	; 0x05
    2c4e:	22 30       	cpi	r18, 0x02	; 2
    2c50:	31 05       	cpc	r19, r1
    2c52:	89 f1       	breq	.+98     	; 0x2cb6 <DIO_VidSetPinDirection+0x19c>
    2c54:	8c 81       	ldd	r24, Y+4	; 0x04
    2c56:	9d 81       	ldd	r25, Y+5	; 0x05
    2c58:	83 30       	cpi	r24, 0x03	; 3
    2c5a:	91 05       	cpc	r25, r1
    2c5c:	09 f4       	brne	.+2      	; 0x2c60 <DIO_VidSetPinDirection+0x146>
    2c5e:	40 c0       	rjmp	.+128    	; 0x2ce0 <DIO_VidSetPinDirection+0x1c6>
    2c60:	53 c0       	rjmp	.+166    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			case 0 : 
			    CLR_BIT(DDRA,Copy_U8Pin);
    2c62:	aa e3       	ldi	r26, 0x3A	; 58
    2c64:	b0 e0       	ldi	r27, 0x00	; 0
    2c66:	ea e3       	ldi	r30, 0x3A	; 58
    2c68:	f0 e0       	ldi	r31, 0x00	; 0
    2c6a:	80 81       	ld	r24, Z
    2c6c:	48 2f       	mov	r20, r24
    2c6e:	8a 81       	ldd	r24, Y+2	; 0x02
    2c70:	28 2f       	mov	r18, r24
    2c72:	30 e0       	ldi	r19, 0x00	; 0
    2c74:	81 e0       	ldi	r24, 0x01	; 1
    2c76:	90 e0       	ldi	r25, 0x00	; 0
    2c78:	02 2e       	mov	r0, r18
    2c7a:	02 c0       	rjmp	.+4      	; 0x2c80 <DIO_VidSetPinDirection+0x166>
    2c7c:	88 0f       	add	r24, r24
    2c7e:	99 1f       	adc	r25, r25
    2c80:	0a 94       	dec	r0
    2c82:	e2 f7       	brpl	.-8      	; 0x2c7c <DIO_VidSetPinDirection+0x162>
    2c84:	80 95       	com	r24
    2c86:	84 23       	and	r24, r20
    2c88:	8c 93       	st	X, r24
    2c8a:	3e c0       	rjmp	.+124    	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 1 : 
			    CLR_BIT(DDRB,Copy_U8Pin);
    2c8c:	a7 e3       	ldi	r26, 0x37	; 55
    2c8e:	b0 e0       	ldi	r27, 0x00	; 0
    2c90:	e7 e3       	ldi	r30, 0x37	; 55
    2c92:	f0 e0       	ldi	r31, 0x00	; 0
    2c94:	80 81       	ld	r24, Z
    2c96:	48 2f       	mov	r20, r24
    2c98:	8a 81       	ldd	r24, Y+2	; 0x02
    2c9a:	28 2f       	mov	r18, r24
    2c9c:	30 e0       	ldi	r19, 0x00	; 0
    2c9e:	81 e0       	ldi	r24, 0x01	; 1
    2ca0:	90 e0       	ldi	r25, 0x00	; 0
    2ca2:	02 2e       	mov	r0, r18
    2ca4:	02 c0       	rjmp	.+4      	; 0x2caa <DIO_VidSetPinDirection+0x190>
    2ca6:	88 0f       	add	r24, r24
    2ca8:	99 1f       	adc	r25, r25
    2caa:	0a 94       	dec	r0
    2cac:	e2 f7       	brpl	.-8      	; 0x2ca6 <DIO_VidSetPinDirection+0x18c>
    2cae:	80 95       	com	r24
    2cb0:	84 23       	and	r24, r20
    2cb2:	8c 93       	st	X, r24
    2cb4:	29 c0       	rjmp	.+82     	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			    break ;			
			case 2 : 
			    CLR_BIT(DDRC,Copy_U8Pin);
    2cb6:	a4 e3       	ldi	r26, 0x34	; 52
    2cb8:	b0 e0       	ldi	r27, 0x00	; 0
    2cba:	e4 e3       	ldi	r30, 0x34	; 52
    2cbc:	f0 e0       	ldi	r31, 0x00	; 0
    2cbe:	80 81       	ld	r24, Z
    2cc0:	48 2f       	mov	r20, r24
    2cc2:	8a 81       	ldd	r24, Y+2	; 0x02
    2cc4:	28 2f       	mov	r18, r24
    2cc6:	30 e0       	ldi	r19, 0x00	; 0
    2cc8:	81 e0       	ldi	r24, 0x01	; 1
    2cca:	90 e0       	ldi	r25, 0x00	; 0
    2ccc:	02 2e       	mov	r0, r18
    2cce:	02 c0       	rjmp	.+4      	; 0x2cd4 <DIO_VidSetPinDirection+0x1ba>
    2cd0:	88 0f       	add	r24, r24
    2cd2:	99 1f       	adc	r25, r25
    2cd4:	0a 94       	dec	r0
    2cd6:	e2 f7       	brpl	.-8      	; 0x2cd0 <DIO_VidSetPinDirection+0x1b6>
    2cd8:	80 95       	com	r24
    2cda:	84 23       	and	r24, r20
    2cdc:	8c 93       	st	X, r24
    2cde:	14 c0       	rjmp	.+40     	; 0x2d08 <DIO_VidSetPinDirection+0x1ee>
			    break ;  
			case 3 : 
			    CLR_BIT(DDRD,Copy_U8Pin);
    2ce0:	a1 e3       	ldi	r26, 0x31	; 49
    2ce2:	b0 e0       	ldi	r27, 0x00	; 0
    2ce4:	e1 e3       	ldi	r30, 0x31	; 49
    2ce6:	f0 e0       	ldi	r31, 0x00	; 0
    2ce8:	80 81       	ld	r24, Z
    2cea:	48 2f       	mov	r20, r24
    2cec:	8a 81       	ldd	r24, Y+2	; 0x02
    2cee:	28 2f       	mov	r18, r24
    2cf0:	30 e0       	ldi	r19, 0x00	; 0
    2cf2:	81 e0       	ldi	r24, 0x01	; 1
    2cf4:	90 e0       	ldi	r25, 0x00	; 0
    2cf6:	02 2e       	mov	r0, r18
    2cf8:	02 c0       	rjmp	.+4      	; 0x2cfe <DIO_VidSetPinDirection+0x1e4>
    2cfa:	88 0f       	add	r24, r24
    2cfc:	99 1f       	adc	r25, r25
    2cfe:	0a 94       	dec	r0
    2d00:	e2 f7       	brpl	.-8      	; 0x2cfa <DIO_VidSetPinDirection+0x1e0>
    2d02:	80 95       	com	r24
    2d04:	84 23       	and	r24, r20
    2d06:	8c 93       	st	X, r24
			    break ; 
		}//end switch
	}//end else if 
}//end FUNC DIO_VidSetPinDirection
    2d08:	27 96       	adiw	r28, 0x07	; 7
    2d0a:	0f b6       	in	r0, 0x3f	; 63
    2d0c:	f8 94       	cli
    2d0e:	de bf       	out	0x3e, r29	; 62
    2d10:	0f be       	out	0x3f, r0	; 63
    2d12:	cd bf       	out	0x3d, r28	; 61
    2d14:	cf 91       	pop	r28
    2d16:	df 91       	pop	r29
    2d18:	08 95       	ret

00002d1a <DIO_VidSetPortDirection>:
void DIO_VidSetPortDirection (u8 Copy_U8Port , u8 Copy_U8Dir ) {
    2d1a:	df 93       	push	r29
    2d1c:	cf 93       	push	r28
    2d1e:	00 d0       	rcall	.+0      	; 0x2d20 <DIO_VidSetPortDirection+0x6>
    2d20:	00 d0       	rcall	.+0      	; 0x2d22 <DIO_VidSetPortDirection+0x8>
    2d22:	cd b7       	in	r28, 0x3d	; 61
    2d24:	de b7       	in	r29, 0x3e	; 62
    2d26:	89 83       	std	Y+1, r24	; 0x01
    2d28:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_U8Port){
    2d2a:	89 81       	ldd	r24, Y+1	; 0x01
    2d2c:	28 2f       	mov	r18, r24
    2d2e:	30 e0       	ldi	r19, 0x00	; 0
    2d30:	3c 83       	std	Y+4, r19	; 0x04
    2d32:	2b 83       	std	Y+3, r18	; 0x03
    2d34:	8b 81       	ldd	r24, Y+3	; 0x03
    2d36:	9c 81       	ldd	r25, Y+4	; 0x04
    2d38:	81 30       	cpi	r24, 0x01	; 1
    2d3a:	91 05       	cpc	r25, r1
    2d3c:	d1 f0       	breq	.+52     	; 0x2d72 <DIO_VidSetPortDirection+0x58>
    2d3e:	2b 81       	ldd	r18, Y+3	; 0x03
    2d40:	3c 81       	ldd	r19, Y+4	; 0x04
    2d42:	22 30       	cpi	r18, 0x02	; 2
    2d44:	31 05       	cpc	r19, r1
    2d46:	2c f4       	brge	.+10     	; 0x2d52 <DIO_VidSetPortDirection+0x38>
    2d48:	8b 81       	ldd	r24, Y+3	; 0x03
    2d4a:	9c 81       	ldd	r25, Y+4	; 0x04
    2d4c:	00 97       	sbiw	r24, 0x00	; 0
    2d4e:	61 f0       	breq	.+24     	; 0x2d68 <DIO_VidSetPortDirection+0x4e>
    2d50:	1e c0       	rjmp	.+60     	; 0x2d8e <DIO_VidSetPortDirection+0x74>
    2d52:	2b 81       	ldd	r18, Y+3	; 0x03
    2d54:	3c 81       	ldd	r19, Y+4	; 0x04
    2d56:	22 30       	cpi	r18, 0x02	; 2
    2d58:	31 05       	cpc	r19, r1
    2d5a:	81 f0       	breq	.+32     	; 0x2d7c <DIO_VidSetPortDirection+0x62>
    2d5c:	8b 81       	ldd	r24, Y+3	; 0x03
    2d5e:	9c 81       	ldd	r25, Y+4	; 0x04
    2d60:	83 30       	cpi	r24, 0x03	; 3
    2d62:	91 05       	cpc	r25, r1
    2d64:	81 f0       	breq	.+32     	; 0x2d86 <DIO_VidSetPortDirection+0x6c>
    2d66:	13 c0       	rjmp	.+38     	; 0x2d8e <DIO_VidSetPortDirection+0x74>
		case 0 : 
			DDRA = Copy_U8Dir ;
    2d68:	ea e3       	ldi	r30, 0x3A	; 58
    2d6a:	f0 e0       	ldi	r31, 0x00	; 0
    2d6c:	8a 81       	ldd	r24, Y+2	; 0x02
    2d6e:	80 83       	st	Z, r24
    2d70:	0e c0       	rjmp	.+28     	; 0x2d8e <DIO_VidSetPortDirection+0x74>
			break ;  
		case 1 : 
			DDRB = Copy_U8Dir ;
    2d72:	e7 e3       	ldi	r30, 0x37	; 55
    2d74:	f0 e0       	ldi	r31, 0x00	; 0
    2d76:	8a 81       	ldd	r24, Y+2	; 0x02
    2d78:	80 83       	st	Z, r24
    2d7a:	09 c0       	rjmp	.+18     	; 0x2d8e <DIO_VidSetPortDirection+0x74>
			break ;			
		case 2 : 
			DDRC = Copy_U8Dir ;
    2d7c:	e4 e3       	ldi	r30, 0x34	; 52
    2d7e:	f0 e0       	ldi	r31, 0x00	; 0
    2d80:	8a 81       	ldd	r24, Y+2	; 0x02
    2d82:	80 83       	st	Z, r24
    2d84:	04 c0       	rjmp	.+8      	; 0x2d8e <DIO_VidSetPortDirection+0x74>
			break ;  
		case 3 : 
			DDRD = Copy_U8Dir ;
    2d86:	e1 e3       	ldi	r30, 0x31	; 49
    2d88:	f0 e0       	ldi	r31, 0x00	; 0
    2d8a:	8a 81       	ldd	r24, Y+2	; 0x02
    2d8c:	80 83       	st	Z, r24
			break ; 
		}//end switch
}// end FUNC DIO_VidSetPortDirection
    2d8e:	0f 90       	pop	r0
    2d90:	0f 90       	pop	r0
    2d92:	0f 90       	pop	r0
    2d94:	0f 90       	pop	r0
    2d96:	cf 91       	pop	r28
    2d98:	df 91       	pop	r29
    2d9a:	08 95       	ret

00002d9c <DIO_VidSetPinValue>:
void DIO_VidSetPinValue (u8 Copy_U8Port , u8 Copy_U8Pin , u8 Copy_U8Val ) {
    2d9c:	df 93       	push	r29
    2d9e:	cf 93       	push	r28
    2da0:	cd b7       	in	r28, 0x3d	; 61
    2da2:	de b7       	in	r29, 0x3e	; 62
    2da4:	27 97       	sbiw	r28, 0x07	; 7
    2da6:	0f b6       	in	r0, 0x3f	; 63
    2da8:	f8 94       	cli
    2daa:	de bf       	out	0x3e, r29	; 62
    2dac:	0f be       	out	0x3f, r0	; 63
    2dae:	cd bf       	out	0x3d, r28	; 61
    2db0:	89 83       	std	Y+1, r24	; 0x01
    2db2:	6a 83       	std	Y+2, r22	; 0x02
    2db4:	4b 83       	std	Y+3, r20	; 0x03
	if ( 1 == Copy_U8Val ){
    2db6:	8b 81       	ldd	r24, Y+3	; 0x03
    2db8:	81 30       	cpi	r24, 0x01	; 1
    2dba:	09 f0       	breq	.+2      	; 0x2dbe <DIO_VidSetPinValue+0x22>
    2dbc:	6f c0       	rjmp	.+222    	; 0x2e9c <DIO_VidSetPinValue+0x100>
		switch (Copy_U8Port){
    2dbe:	89 81       	ldd	r24, Y+1	; 0x01
    2dc0:	28 2f       	mov	r18, r24
    2dc2:	30 e0       	ldi	r19, 0x00	; 0
    2dc4:	3f 83       	std	Y+7, r19	; 0x07
    2dc6:	2e 83       	std	Y+6, r18	; 0x06
    2dc8:	8e 81       	ldd	r24, Y+6	; 0x06
    2dca:	9f 81       	ldd	r25, Y+7	; 0x07
    2dcc:	81 30       	cpi	r24, 0x01	; 1
    2dce:	91 05       	cpc	r25, r1
    2dd0:	49 f1       	breq	.+82     	; 0x2e24 <DIO_VidSetPinValue+0x88>
    2dd2:	2e 81       	ldd	r18, Y+6	; 0x06
    2dd4:	3f 81       	ldd	r19, Y+7	; 0x07
    2dd6:	22 30       	cpi	r18, 0x02	; 2
    2dd8:	31 05       	cpc	r19, r1
    2dda:	2c f4       	brge	.+10     	; 0x2de6 <DIO_VidSetPinValue+0x4a>
    2ddc:	8e 81       	ldd	r24, Y+6	; 0x06
    2dde:	9f 81       	ldd	r25, Y+7	; 0x07
    2de0:	00 97       	sbiw	r24, 0x00	; 0
    2de2:	61 f0       	breq	.+24     	; 0x2dfc <DIO_VidSetPinValue+0x60>
    2de4:	d2 c0       	rjmp	.+420    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
    2de6:	2e 81       	ldd	r18, Y+6	; 0x06
    2de8:	3f 81       	ldd	r19, Y+7	; 0x07
    2dea:	22 30       	cpi	r18, 0x02	; 2
    2dec:	31 05       	cpc	r19, r1
    2dee:	71 f1       	breq	.+92     	; 0x2e4c <DIO_VidSetPinValue+0xb0>
    2df0:	8e 81       	ldd	r24, Y+6	; 0x06
    2df2:	9f 81       	ldd	r25, Y+7	; 0x07
    2df4:	83 30       	cpi	r24, 0x03	; 3
    2df6:	91 05       	cpc	r25, r1
    2df8:	e9 f1       	breq	.+122    	; 0x2e74 <DIO_VidSetPinValue+0xd8>
    2dfa:	c7 c0       	rjmp	.+398    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			case 0 : 
			    SET_BIT(PORTA,Copy_U8Pin);
    2dfc:	ab e3       	ldi	r26, 0x3B	; 59
    2dfe:	b0 e0       	ldi	r27, 0x00	; 0
    2e00:	eb e3       	ldi	r30, 0x3B	; 59
    2e02:	f0 e0       	ldi	r31, 0x00	; 0
    2e04:	80 81       	ld	r24, Z
    2e06:	48 2f       	mov	r20, r24
    2e08:	8a 81       	ldd	r24, Y+2	; 0x02
    2e0a:	28 2f       	mov	r18, r24
    2e0c:	30 e0       	ldi	r19, 0x00	; 0
    2e0e:	81 e0       	ldi	r24, 0x01	; 1
    2e10:	90 e0       	ldi	r25, 0x00	; 0
    2e12:	02 2e       	mov	r0, r18
    2e14:	02 c0       	rjmp	.+4      	; 0x2e1a <DIO_VidSetPinValue+0x7e>
    2e16:	88 0f       	add	r24, r24
    2e18:	99 1f       	adc	r25, r25
    2e1a:	0a 94       	dec	r0
    2e1c:	e2 f7       	brpl	.-8      	; 0x2e16 <DIO_VidSetPinValue+0x7a>
    2e1e:	84 2b       	or	r24, r20
    2e20:	8c 93       	st	X, r24
    2e22:	b3 c0       	rjmp	.+358    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 1 : 
			    SET_BIT(PORTB,Copy_U8Pin);
    2e24:	a8 e3       	ldi	r26, 0x38	; 56
    2e26:	b0 e0       	ldi	r27, 0x00	; 0
    2e28:	e8 e3       	ldi	r30, 0x38	; 56
    2e2a:	f0 e0       	ldi	r31, 0x00	; 0
    2e2c:	80 81       	ld	r24, Z
    2e2e:	48 2f       	mov	r20, r24
    2e30:	8a 81       	ldd	r24, Y+2	; 0x02
    2e32:	28 2f       	mov	r18, r24
    2e34:	30 e0       	ldi	r19, 0x00	; 0
    2e36:	81 e0       	ldi	r24, 0x01	; 1
    2e38:	90 e0       	ldi	r25, 0x00	; 0
    2e3a:	02 2e       	mov	r0, r18
    2e3c:	02 c0       	rjmp	.+4      	; 0x2e42 <DIO_VidSetPinValue+0xa6>
    2e3e:	88 0f       	add	r24, r24
    2e40:	99 1f       	adc	r25, r25
    2e42:	0a 94       	dec	r0
    2e44:	e2 f7       	brpl	.-8      	; 0x2e3e <DIO_VidSetPinValue+0xa2>
    2e46:	84 2b       	or	r24, r20
    2e48:	8c 93       	st	X, r24
    2e4a:	9f c0       	rjmp	.+318    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			    break ;			
			case 2 : 
			    SET_BIT(PORTC,Copy_U8Pin);
    2e4c:	a5 e3       	ldi	r26, 0x35	; 53
    2e4e:	b0 e0       	ldi	r27, 0x00	; 0
    2e50:	e5 e3       	ldi	r30, 0x35	; 53
    2e52:	f0 e0       	ldi	r31, 0x00	; 0
    2e54:	80 81       	ld	r24, Z
    2e56:	48 2f       	mov	r20, r24
    2e58:	8a 81       	ldd	r24, Y+2	; 0x02
    2e5a:	28 2f       	mov	r18, r24
    2e5c:	30 e0       	ldi	r19, 0x00	; 0
    2e5e:	81 e0       	ldi	r24, 0x01	; 1
    2e60:	90 e0       	ldi	r25, 0x00	; 0
    2e62:	02 2e       	mov	r0, r18
    2e64:	02 c0       	rjmp	.+4      	; 0x2e6a <DIO_VidSetPinValue+0xce>
    2e66:	88 0f       	add	r24, r24
    2e68:	99 1f       	adc	r25, r25
    2e6a:	0a 94       	dec	r0
    2e6c:	e2 f7       	brpl	.-8      	; 0x2e66 <DIO_VidSetPinValue+0xca>
    2e6e:	84 2b       	or	r24, r20
    2e70:	8c 93       	st	X, r24
    2e72:	8b c0       	rjmp	.+278    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 3 : 
			    SET_BIT(PORTD,Copy_U8Pin);
    2e74:	a2 e3       	ldi	r26, 0x32	; 50
    2e76:	b0 e0       	ldi	r27, 0x00	; 0
    2e78:	e2 e3       	ldi	r30, 0x32	; 50
    2e7a:	f0 e0       	ldi	r31, 0x00	; 0
    2e7c:	80 81       	ld	r24, Z
    2e7e:	48 2f       	mov	r20, r24
    2e80:	8a 81       	ldd	r24, Y+2	; 0x02
    2e82:	28 2f       	mov	r18, r24
    2e84:	30 e0       	ldi	r19, 0x00	; 0
    2e86:	81 e0       	ldi	r24, 0x01	; 1
    2e88:	90 e0       	ldi	r25, 0x00	; 0
    2e8a:	02 2e       	mov	r0, r18
    2e8c:	02 c0       	rjmp	.+4      	; 0x2e92 <DIO_VidSetPinValue+0xf6>
    2e8e:	88 0f       	add	r24, r24
    2e90:	99 1f       	adc	r25, r25
    2e92:	0a 94       	dec	r0
    2e94:	e2 f7       	brpl	.-8      	; 0x2e8e <DIO_VidSetPinValue+0xf2>
    2e96:	84 2b       	or	r24, r20
    2e98:	8c 93       	st	X, r24
    2e9a:	77 c0       	rjmp	.+238    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			    break ; 
		}//end switch
	}//end if
	else if ( 0 == Copy_U8Val){
    2e9c:	8b 81       	ldd	r24, Y+3	; 0x03
    2e9e:	88 23       	and	r24, r24
    2ea0:	09 f0       	breq	.+2      	; 0x2ea4 <DIO_VidSetPinValue+0x108>
    2ea2:	73 c0       	rjmp	.+230    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
		switch (Copy_U8Port){
    2ea4:	89 81       	ldd	r24, Y+1	; 0x01
    2ea6:	28 2f       	mov	r18, r24
    2ea8:	30 e0       	ldi	r19, 0x00	; 0
    2eaa:	3d 83       	std	Y+5, r19	; 0x05
    2eac:	2c 83       	std	Y+4, r18	; 0x04
    2eae:	8c 81       	ldd	r24, Y+4	; 0x04
    2eb0:	9d 81       	ldd	r25, Y+5	; 0x05
    2eb2:	81 30       	cpi	r24, 0x01	; 1
    2eb4:	91 05       	cpc	r25, r1
    2eb6:	59 f1       	breq	.+86     	; 0x2f0e <DIO_VidSetPinValue+0x172>
    2eb8:	2c 81       	ldd	r18, Y+4	; 0x04
    2eba:	3d 81       	ldd	r19, Y+5	; 0x05
    2ebc:	22 30       	cpi	r18, 0x02	; 2
    2ebe:	31 05       	cpc	r19, r1
    2ec0:	2c f4       	brge	.+10     	; 0x2ecc <DIO_VidSetPinValue+0x130>
    2ec2:	8c 81       	ldd	r24, Y+4	; 0x04
    2ec4:	9d 81       	ldd	r25, Y+5	; 0x05
    2ec6:	00 97       	sbiw	r24, 0x00	; 0
    2ec8:	69 f0       	breq	.+26     	; 0x2ee4 <DIO_VidSetPinValue+0x148>
    2eca:	5f c0       	rjmp	.+190    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
    2ecc:	2c 81       	ldd	r18, Y+4	; 0x04
    2ece:	3d 81       	ldd	r19, Y+5	; 0x05
    2ed0:	22 30       	cpi	r18, 0x02	; 2
    2ed2:	31 05       	cpc	r19, r1
    2ed4:	89 f1       	breq	.+98     	; 0x2f38 <DIO_VidSetPinValue+0x19c>
    2ed6:	8c 81       	ldd	r24, Y+4	; 0x04
    2ed8:	9d 81       	ldd	r25, Y+5	; 0x05
    2eda:	83 30       	cpi	r24, 0x03	; 3
    2edc:	91 05       	cpc	r25, r1
    2ede:	09 f4       	brne	.+2      	; 0x2ee2 <DIO_VidSetPinValue+0x146>
    2ee0:	40 c0       	rjmp	.+128    	; 0x2f62 <DIO_VidSetPinValue+0x1c6>
    2ee2:	53 c0       	rjmp	.+166    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			case 0 : 
			    CLR_BIT(PORTA,Copy_U8Pin);
    2ee4:	ab e3       	ldi	r26, 0x3B	; 59
    2ee6:	b0 e0       	ldi	r27, 0x00	; 0
    2ee8:	eb e3       	ldi	r30, 0x3B	; 59
    2eea:	f0 e0       	ldi	r31, 0x00	; 0
    2eec:	80 81       	ld	r24, Z
    2eee:	48 2f       	mov	r20, r24
    2ef0:	8a 81       	ldd	r24, Y+2	; 0x02
    2ef2:	28 2f       	mov	r18, r24
    2ef4:	30 e0       	ldi	r19, 0x00	; 0
    2ef6:	81 e0       	ldi	r24, 0x01	; 1
    2ef8:	90 e0       	ldi	r25, 0x00	; 0
    2efa:	02 2e       	mov	r0, r18
    2efc:	02 c0       	rjmp	.+4      	; 0x2f02 <DIO_VidSetPinValue+0x166>
    2efe:	88 0f       	add	r24, r24
    2f00:	99 1f       	adc	r25, r25
    2f02:	0a 94       	dec	r0
    2f04:	e2 f7       	brpl	.-8      	; 0x2efe <DIO_VidSetPinValue+0x162>
    2f06:	80 95       	com	r24
    2f08:	84 23       	and	r24, r20
    2f0a:	8c 93       	st	X, r24
    2f0c:	3e c0       	rjmp	.+124    	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 1 : 
			    CLR_BIT(PORTB,Copy_U8Pin);
    2f0e:	a8 e3       	ldi	r26, 0x38	; 56
    2f10:	b0 e0       	ldi	r27, 0x00	; 0
    2f12:	e8 e3       	ldi	r30, 0x38	; 56
    2f14:	f0 e0       	ldi	r31, 0x00	; 0
    2f16:	80 81       	ld	r24, Z
    2f18:	48 2f       	mov	r20, r24
    2f1a:	8a 81       	ldd	r24, Y+2	; 0x02
    2f1c:	28 2f       	mov	r18, r24
    2f1e:	30 e0       	ldi	r19, 0x00	; 0
    2f20:	81 e0       	ldi	r24, 0x01	; 1
    2f22:	90 e0       	ldi	r25, 0x00	; 0
    2f24:	02 2e       	mov	r0, r18
    2f26:	02 c0       	rjmp	.+4      	; 0x2f2c <DIO_VidSetPinValue+0x190>
    2f28:	88 0f       	add	r24, r24
    2f2a:	99 1f       	adc	r25, r25
    2f2c:	0a 94       	dec	r0
    2f2e:	e2 f7       	brpl	.-8      	; 0x2f28 <DIO_VidSetPinValue+0x18c>
    2f30:	80 95       	com	r24
    2f32:	84 23       	and	r24, r20
    2f34:	8c 93       	st	X, r24
    2f36:	29 c0       	rjmp	.+82     	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			    break ;			
			case 2 : 
			    CLR_BIT(PORTC,Copy_U8Pin);
    2f38:	a5 e3       	ldi	r26, 0x35	; 53
    2f3a:	b0 e0       	ldi	r27, 0x00	; 0
    2f3c:	e5 e3       	ldi	r30, 0x35	; 53
    2f3e:	f0 e0       	ldi	r31, 0x00	; 0
    2f40:	80 81       	ld	r24, Z
    2f42:	48 2f       	mov	r20, r24
    2f44:	8a 81       	ldd	r24, Y+2	; 0x02
    2f46:	28 2f       	mov	r18, r24
    2f48:	30 e0       	ldi	r19, 0x00	; 0
    2f4a:	81 e0       	ldi	r24, 0x01	; 1
    2f4c:	90 e0       	ldi	r25, 0x00	; 0
    2f4e:	02 2e       	mov	r0, r18
    2f50:	02 c0       	rjmp	.+4      	; 0x2f56 <DIO_VidSetPinValue+0x1ba>
    2f52:	88 0f       	add	r24, r24
    2f54:	99 1f       	adc	r25, r25
    2f56:	0a 94       	dec	r0
    2f58:	e2 f7       	brpl	.-8      	; 0x2f52 <DIO_VidSetPinValue+0x1b6>
    2f5a:	80 95       	com	r24
    2f5c:	84 23       	and	r24, r20
    2f5e:	8c 93       	st	X, r24
    2f60:	14 c0       	rjmp	.+40     	; 0x2f8a <DIO_VidSetPinValue+0x1ee>
			    break ;  
			case 3 : 
			    CLR_BIT(PORTD,Copy_U8Pin);
    2f62:	a2 e3       	ldi	r26, 0x32	; 50
    2f64:	b0 e0       	ldi	r27, 0x00	; 0
    2f66:	e2 e3       	ldi	r30, 0x32	; 50
    2f68:	f0 e0       	ldi	r31, 0x00	; 0
    2f6a:	80 81       	ld	r24, Z
    2f6c:	48 2f       	mov	r20, r24
    2f6e:	8a 81       	ldd	r24, Y+2	; 0x02
    2f70:	28 2f       	mov	r18, r24
    2f72:	30 e0       	ldi	r19, 0x00	; 0
    2f74:	81 e0       	ldi	r24, 0x01	; 1
    2f76:	90 e0       	ldi	r25, 0x00	; 0
    2f78:	02 2e       	mov	r0, r18
    2f7a:	02 c0       	rjmp	.+4      	; 0x2f80 <DIO_VidSetPinValue+0x1e4>
    2f7c:	88 0f       	add	r24, r24
    2f7e:	99 1f       	adc	r25, r25
    2f80:	0a 94       	dec	r0
    2f82:	e2 f7       	brpl	.-8      	; 0x2f7c <DIO_VidSetPinValue+0x1e0>
    2f84:	80 95       	com	r24
    2f86:	84 23       	and	r24, r20
    2f88:	8c 93       	st	X, r24
			    break ; 
		}//end switch
	}//end else if
}// end FUNC DIO_VidSetPinValue
    2f8a:	27 96       	adiw	r28, 0x07	; 7
    2f8c:	0f b6       	in	r0, 0x3f	; 63
    2f8e:	f8 94       	cli
    2f90:	de bf       	out	0x3e, r29	; 62
    2f92:	0f be       	out	0x3f, r0	; 63
    2f94:	cd bf       	out	0x3d, r28	; 61
    2f96:	cf 91       	pop	r28
    2f98:	df 91       	pop	r29
    2f9a:	08 95       	ret

00002f9c <DIO_VidSetPortValue>:
void DIO_VidSetPortValue (u8 Copy_U8Port , u8 Copy_U8Val ) {
    2f9c:	df 93       	push	r29
    2f9e:	cf 93       	push	r28
    2fa0:	00 d0       	rcall	.+0      	; 0x2fa2 <DIO_VidSetPortValue+0x6>
    2fa2:	00 d0       	rcall	.+0      	; 0x2fa4 <DIO_VidSetPortValue+0x8>
    2fa4:	cd b7       	in	r28, 0x3d	; 61
    2fa6:	de b7       	in	r29, 0x3e	; 62
    2fa8:	89 83       	std	Y+1, r24	; 0x01
    2faa:	6a 83       	std	Y+2, r22	; 0x02
    switch (Copy_U8Port){
    2fac:	89 81       	ldd	r24, Y+1	; 0x01
    2fae:	28 2f       	mov	r18, r24
    2fb0:	30 e0       	ldi	r19, 0x00	; 0
    2fb2:	3c 83       	std	Y+4, r19	; 0x04
    2fb4:	2b 83       	std	Y+3, r18	; 0x03
    2fb6:	8b 81       	ldd	r24, Y+3	; 0x03
    2fb8:	9c 81       	ldd	r25, Y+4	; 0x04
    2fba:	81 30       	cpi	r24, 0x01	; 1
    2fbc:	91 05       	cpc	r25, r1
    2fbe:	d1 f0       	breq	.+52     	; 0x2ff4 <DIO_VidSetPortValue+0x58>
    2fc0:	2b 81       	ldd	r18, Y+3	; 0x03
    2fc2:	3c 81       	ldd	r19, Y+4	; 0x04
    2fc4:	22 30       	cpi	r18, 0x02	; 2
    2fc6:	31 05       	cpc	r19, r1
    2fc8:	2c f4       	brge	.+10     	; 0x2fd4 <DIO_VidSetPortValue+0x38>
    2fca:	8b 81       	ldd	r24, Y+3	; 0x03
    2fcc:	9c 81       	ldd	r25, Y+4	; 0x04
    2fce:	00 97       	sbiw	r24, 0x00	; 0
    2fd0:	61 f0       	breq	.+24     	; 0x2fea <DIO_VidSetPortValue+0x4e>
    2fd2:	1e c0       	rjmp	.+60     	; 0x3010 <DIO_VidSetPortValue+0x74>
    2fd4:	2b 81       	ldd	r18, Y+3	; 0x03
    2fd6:	3c 81       	ldd	r19, Y+4	; 0x04
    2fd8:	22 30       	cpi	r18, 0x02	; 2
    2fda:	31 05       	cpc	r19, r1
    2fdc:	81 f0       	breq	.+32     	; 0x2ffe <DIO_VidSetPortValue+0x62>
    2fde:	8b 81       	ldd	r24, Y+3	; 0x03
    2fe0:	9c 81       	ldd	r25, Y+4	; 0x04
    2fe2:	83 30       	cpi	r24, 0x03	; 3
    2fe4:	91 05       	cpc	r25, r1
    2fe6:	81 f0       	breq	.+32     	; 0x3008 <DIO_VidSetPortValue+0x6c>
    2fe8:	13 c0       	rjmp	.+38     	; 0x3010 <DIO_VidSetPortValue+0x74>
		case 0 : 
			PORTA = Copy_U8Val ;
    2fea:	eb e3       	ldi	r30, 0x3B	; 59
    2fec:	f0 e0       	ldi	r31, 0x00	; 0
    2fee:	8a 81       	ldd	r24, Y+2	; 0x02
    2ff0:	80 83       	st	Z, r24
    2ff2:	0e c0       	rjmp	.+28     	; 0x3010 <DIO_VidSetPortValue+0x74>
			break ;  
		case 1 : 
			PORTB = Copy_U8Val ;
    2ff4:	e8 e3       	ldi	r30, 0x38	; 56
    2ff6:	f0 e0       	ldi	r31, 0x00	; 0
    2ff8:	8a 81       	ldd	r24, Y+2	; 0x02
    2ffa:	80 83       	st	Z, r24
    2ffc:	09 c0       	rjmp	.+18     	; 0x3010 <DIO_VidSetPortValue+0x74>
			break ;			
		case 2 : 
			PORTC = Copy_U8Val ;
    2ffe:	e5 e3       	ldi	r30, 0x35	; 53
    3000:	f0 e0       	ldi	r31, 0x00	; 0
    3002:	8a 81       	ldd	r24, Y+2	; 0x02
    3004:	80 83       	st	Z, r24
    3006:	04 c0       	rjmp	.+8      	; 0x3010 <DIO_VidSetPortValue+0x74>
			break ;  
		case 3 : 
			PORTD = Copy_U8Val ;
    3008:	e2 e3       	ldi	r30, 0x32	; 50
    300a:	f0 e0       	ldi	r31, 0x00	; 0
    300c:	8a 81       	ldd	r24, Y+2	; 0x02
    300e:	80 83       	st	Z, r24
			break ; 
		}//end switch
}//end FUNC DIO_VidSetPortValue
    3010:	0f 90       	pop	r0
    3012:	0f 90       	pop	r0
    3014:	0f 90       	pop	r0
    3016:	0f 90       	pop	r0
    3018:	cf 91       	pop	r28
    301a:	df 91       	pop	r29
    301c:	08 95       	ret

0000301e <DIO_VidTogglePinValue>:
void DIO_VidTogglePinValue (u8 Copy_U8Port , u8 Copy_U8Pin ) {
    301e:	df 93       	push	r29
    3020:	cf 93       	push	r28
    3022:	00 d0       	rcall	.+0      	; 0x3024 <DIO_VidTogglePinValue+0x6>
    3024:	00 d0       	rcall	.+0      	; 0x3026 <DIO_VidTogglePinValue+0x8>
    3026:	cd b7       	in	r28, 0x3d	; 61
    3028:	de b7       	in	r29, 0x3e	; 62
    302a:	89 83       	std	Y+1, r24	; 0x01
    302c:	6a 83       	std	Y+2, r22	; 0x02
	switch ( Copy_U8Port ) {
    302e:	89 81       	ldd	r24, Y+1	; 0x01
    3030:	28 2f       	mov	r18, r24
    3032:	30 e0       	ldi	r19, 0x00	; 0
    3034:	3c 83       	std	Y+4, r19	; 0x04
    3036:	2b 83       	std	Y+3, r18	; 0x03
    3038:	8b 81       	ldd	r24, Y+3	; 0x03
    303a:	9c 81       	ldd	r25, Y+4	; 0x04
    303c:	81 30       	cpi	r24, 0x01	; 1
    303e:	91 05       	cpc	r25, r1
    3040:	49 f1       	breq	.+82     	; 0x3094 <DIO_VidTogglePinValue+0x76>
    3042:	2b 81       	ldd	r18, Y+3	; 0x03
    3044:	3c 81       	ldd	r19, Y+4	; 0x04
    3046:	22 30       	cpi	r18, 0x02	; 2
    3048:	31 05       	cpc	r19, r1
    304a:	2c f4       	brge	.+10     	; 0x3056 <DIO_VidTogglePinValue+0x38>
    304c:	8b 81       	ldd	r24, Y+3	; 0x03
    304e:	9c 81       	ldd	r25, Y+4	; 0x04
    3050:	00 97       	sbiw	r24, 0x00	; 0
    3052:	61 f0       	breq	.+24     	; 0x306c <DIO_VidTogglePinValue+0x4e>
    3054:	5a c0       	rjmp	.+180    	; 0x310a <DIO_VidTogglePinValue+0xec>
    3056:	2b 81       	ldd	r18, Y+3	; 0x03
    3058:	3c 81       	ldd	r19, Y+4	; 0x04
    305a:	22 30       	cpi	r18, 0x02	; 2
    305c:	31 05       	cpc	r19, r1
    305e:	71 f1       	breq	.+92     	; 0x30bc <DIO_VidTogglePinValue+0x9e>
    3060:	8b 81       	ldd	r24, Y+3	; 0x03
    3062:	9c 81       	ldd	r25, Y+4	; 0x04
    3064:	83 30       	cpi	r24, 0x03	; 3
    3066:	91 05       	cpc	r25, r1
    3068:	e9 f1       	breq	.+122    	; 0x30e4 <DIO_VidTogglePinValue+0xc6>
    306a:	4f c0       	rjmp	.+158    	; 0x310a <DIO_VidTogglePinValue+0xec>
		case 0 : 
		    TOGGLE_BIT( PORTA , Copy_U8Pin ) ;
    306c:	ab e3       	ldi	r26, 0x3B	; 59
    306e:	b0 e0       	ldi	r27, 0x00	; 0
    3070:	eb e3       	ldi	r30, 0x3B	; 59
    3072:	f0 e0       	ldi	r31, 0x00	; 0
    3074:	80 81       	ld	r24, Z
    3076:	48 2f       	mov	r20, r24
    3078:	8a 81       	ldd	r24, Y+2	; 0x02
    307a:	28 2f       	mov	r18, r24
    307c:	30 e0       	ldi	r19, 0x00	; 0
    307e:	81 e0       	ldi	r24, 0x01	; 1
    3080:	90 e0       	ldi	r25, 0x00	; 0
    3082:	02 2e       	mov	r0, r18
    3084:	02 c0       	rjmp	.+4      	; 0x308a <DIO_VidTogglePinValue+0x6c>
    3086:	88 0f       	add	r24, r24
    3088:	99 1f       	adc	r25, r25
    308a:	0a 94       	dec	r0
    308c:	e2 f7       	brpl	.-8      	; 0x3086 <DIO_VidTogglePinValue+0x68>
    308e:	84 27       	eor	r24, r20
    3090:	8c 93       	st	X, r24
    3092:	3b c0       	rjmp	.+118    	; 0x310a <DIO_VidTogglePinValue+0xec>
			break ;  
		case 1 : 
			TOGGLE_BIT( PORTB , Copy_U8Pin ) ;
    3094:	a8 e3       	ldi	r26, 0x38	; 56
    3096:	b0 e0       	ldi	r27, 0x00	; 0
    3098:	e8 e3       	ldi	r30, 0x38	; 56
    309a:	f0 e0       	ldi	r31, 0x00	; 0
    309c:	80 81       	ld	r24, Z
    309e:	48 2f       	mov	r20, r24
    30a0:	8a 81       	ldd	r24, Y+2	; 0x02
    30a2:	28 2f       	mov	r18, r24
    30a4:	30 e0       	ldi	r19, 0x00	; 0
    30a6:	81 e0       	ldi	r24, 0x01	; 1
    30a8:	90 e0       	ldi	r25, 0x00	; 0
    30aa:	02 2e       	mov	r0, r18
    30ac:	02 c0       	rjmp	.+4      	; 0x30b2 <DIO_VidTogglePinValue+0x94>
    30ae:	88 0f       	add	r24, r24
    30b0:	99 1f       	adc	r25, r25
    30b2:	0a 94       	dec	r0
    30b4:	e2 f7       	brpl	.-8      	; 0x30ae <DIO_VidTogglePinValue+0x90>
    30b6:	84 27       	eor	r24, r20
    30b8:	8c 93       	st	X, r24
    30ba:	27 c0       	rjmp	.+78     	; 0x310a <DIO_VidTogglePinValue+0xec>
			break ;			
		case 2 : 
			TOGGLE_BIT( PORTC , Copy_U8Pin ) ;
    30bc:	a5 e3       	ldi	r26, 0x35	; 53
    30be:	b0 e0       	ldi	r27, 0x00	; 0
    30c0:	e5 e3       	ldi	r30, 0x35	; 53
    30c2:	f0 e0       	ldi	r31, 0x00	; 0
    30c4:	80 81       	ld	r24, Z
    30c6:	48 2f       	mov	r20, r24
    30c8:	8a 81       	ldd	r24, Y+2	; 0x02
    30ca:	28 2f       	mov	r18, r24
    30cc:	30 e0       	ldi	r19, 0x00	; 0
    30ce:	81 e0       	ldi	r24, 0x01	; 1
    30d0:	90 e0       	ldi	r25, 0x00	; 0
    30d2:	02 2e       	mov	r0, r18
    30d4:	02 c0       	rjmp	.+4      	; 0x30da <DIO_VidTogglePinValue+0xbc>
    30d6:	88 0f       	add	r24, r24
    30d8:	99 1f       	adc	r25, r25
    30da:	0a 94       	dec	r0
    30dc:	e2 f7       	brpl	.-8      	; 0x30d6 <DIO_VidTogglePinValue+0xb8>
    30de:	84 27       	eor	r24, r20
    30e0:	8c 93       	st	X, r24
    30e2:	13 c0       	rjmp	.+38     	; 0x310a <DIO_VidTogglePinValue+0xec>
			break ;  
		case 3 : 
			TOGGLE_BIT( PORTD , Copy_U8Pin ) ;
    30e4:	a2 e3       	ldi	r26, 0x32	; 50
    30e6:	b0 e0       	ldi	r27, 0x00	; 0
    30e8:	e2 e3       	ldi	r30, 0x32	; 50
    30ea:	f0 e0       	ldi	r31, 0x00	; 0
    30ec:	80 81       	ld	r24, Z
    30ee:	48 2f       	mov	r20, r24
    30f0:	8a 81       	ldd	r24, Y+2	; 0x02
    30f2:	28 2f       	mov	r18, r24
    30f4:	30 e0       	ldi	r19, 0x00	; 0
    30f6:	81 e0       	ldi	r24, 0x01	; 1
    30f8:	90 e0       	ldi	r25, 0x00	; 0
    30fa:	02 2e       	mov	r0, r18
    30fc:	02 c0       	rjmp	.+4      	; 0x3102 <DIO_VidTogglePinValue+0xe4>
    30fe:	88 0f       	add	r24, r24
    3100:	99 1f       	adc	r25, r25
    3102:	0a 94       	dec	r0
    3104:	e2 f7       	brpl	.-8      	; 0x30fe <DIO_VidTogglePinValue+0xe0>
    3106:	84 27       	eor	r24, r20
    3108:	8c 93       	st	X, r24
			break ; 
	}//end switch
}//end FUNC DIO_VidTogglePinValue
    310a:	0f 90       	pop	r0
    310c:	0f 90       	pop	r0
    310e:	0f 90       	pop	r0
    3110:	0f 90       	pop	r0
    3112:	cf 91       	pop	r28
    3114:	df 91       	pop	r29
    3116:	08 95       	ret

00003118 <DIO_U8GetPinValue>:
u8 DIO_U8GetPinValue (u8 Copy_U8Port , u8 Copy_U8Pin ) {
    3118:	df 93       	push	r29
    311a:	cf 93       	push	r28
    311c:	00 d0       	rcall	.+0      	; 0x311e <DIO_U8GetPinValue+0x6>
    311e:	00 d0       	rcall	.+0      	; 0x3120 <DIO_U8GetPinValue+0x8>
    3120:	00 d0       	rcall	.+0      	; 0x3122 <DIO_U8GetPinValue+0xa>
    3122:	cd b7       	in	r28, 0x3d	; 61
    3124:	de b7       	in	r29, 0x3e	; 62
    3126:	89 83       	std	Y+1, r24	; 0x01
    3128:	6a 83       	std	Y+2, r22	; 0x02
	switch ( Copy_U8Port ) {
    312a:	89 81       	ldd	r24, Y+1	; 0x01
    312c:	28 2f       	mov	r18, r24
    312e:	30 e0       	ldi	r19, 0x00	; 0
    3130:	3d 83       	std	Y+5, r19	; 0x05
    3132:	2c 83       	std	Y+4, r18	; 0x04
    3134:	4c 81       	ldd	r20, Y+4	; 0x04
    3136:	5d 81       	ldd	r21, Y+5	; 0x05
    3138:	41 30       	cpi	r20, 0x01	; 1
    313a:	51 05       	cpc	r21, r1
    313c:	49 f1       	breq	.+82     	; 0x3190 <DIO_U8GetPinValue+0x78>
    313e:	8c 81       	ldd	r24, Y+4	; 0x04
    3140:	9d 81       	ldd	r25, Y+5	; 0x05
    3142:	82 30       	cpi	r24, 0x02	; 2
    3144:	91 05       	cpc	r25, r1
    3146:	34 f4       	brge	.+12     	; 0x3154 <DIO_U8GetPinValue+0x3c>
    3148:	2c 81       	ldd	r18, Y+4	; 0x04
    314a:	3d 81       	ldd	r19, Y+5	; 0x05
    314c:	21 15       	cp	r18, r1
    314e:	31 05       	cpc	r19, r1
    3150:	61 f0       	breq	.+24     	; 0x316a <DIO_U8GetPinValue+0x52>
    3152:	57 c0       	rjmp	.+174    	; 0x3202 <DIO_U8GetPinValue+0xea>
    3154:	4c 81       	ldd	r20, Y+4	; 0x04
    3156:	5d 81       	ldd	r21, Y+5	; 0x05
    3158:	42 30       	cpi	r20, 0x02	; 2
    315a:	51 05       	cpc	r21, r1
    315c:	61 f1       	breq	.+88     	; 0x31b6 <DIO_U8GetPinValue+0x9e>
    315e:	8c 81       	ldd	r24, Y+4	; 0x04
    3160:	9d 81       	ldd	r25, Y+5	; 0x05
    3162:	83 30       	cpi	r24, 0x03	; 3
    3164:	91 05       	cpc	r25, r1
    3166:	d1 f1       	breq	.+116    	; 0x31dc <DIO_U8GetPinValue+0xc4>
    3168:	4c c0       	rjmp	.+152    	; 0x3202 <DIO_U8GetPinValue+0xea>
		case 0 : 
		   return GET_BIT( PINA , Copy_U8Pin ) ;
    316a:	e9 e3       	ldi	r30, 0x39	; 57
    316c:	f0 e0       	ldi	r31, 0x00	; 0
    316e:	80 81       	ld	r24, Z
    3170:	28 2f       	mov	r18, r24
    3172:	30 e0       	ldi	r19, 0x00	; 0
    3174:	8a 81       	ldd	r24, Y+2	; 0x02
    3176:	88 2f       	mov	r24, r24
    3178:	90 e0       	ldi	r25, 0x00	; 0
    317a:	a9 01       	movw	r20, r18
    317c:	02 c0       	rjmp	.+4      	; 0x3182 <DIO_U8GetPinValue+0x6a>
    317e:	55 95       	asr	r21
    3180:	47 95       	ror	r20
    3182:	8a 95       	dec	r24
    3184:	e2 f7       	brpl	.-8      	; 0x317e <DIO_U8GetPinValue+0x66>
    3186:	ca 01       	movw	r24, r20
    3188:	58 2f       	mov	r21, r24
    318a:	51 70       	andi	r21, 0x01	; 1
    318c:	5b 83       	std	Y+3, r21	; 0x03
    318e:	3a c0       	rjmp	.+116    	; 0x3204 <DIO_U8GetPinValue+0xec>
		case 1 : 
			return GET_BIT( PINB , Copy_U8Pin ) ;
    3190:	e6 e3       	ldi	r30, 0x36	; 54
    3192:	f0 e0       	ldi	r31, 0x00	; 0
    3194:	80 81       	ld	r24, Z
    3196:	28 2f       	mov	r18, r24
    3198:	30 e0       	ldi	r19, 0x00	; 0
    319a:	8a 81       	ldd	r24, Y+2	; 0x02
    319c:	88 2f       	mov	r24, r24
    319e:	90 e0       	ldi	r25, 0x00	; 0
    31a0:	a9 01       	movw	r20, r18
    31a2:	02 c0       	rjmp	.+4      	; 0x31a8 <DIO_U8GetPinValue+0x90>
    31a4:	55 95       	asr	r21
    31a6:	47 95       	ror	r20
    31a8:	8a 95       	dec	r24
    31aa:	e2 f7       	brpl	.-8      	; 0x31a4 <DIO_U8GetPinValue+0x8c>
    31ac:	ca 01       	movw	r24, r20
    31ae:	58 2f       	mov	r21, r24
    31b0:	51 70       	andi	r21, 0x01	; 1
    31b2:	5b 83       	std	Y+3, r21	; 0x03
    31b4:	27 c0       	rjmp	.+78     	; 0x3204 <DIO_U8GetPinValue+0xec>
		case 2 : 
			return GET_BIT( PINC , Copy_U8Pin ) ;
    31b6:	e3 e3       	ldi	r30, 0x33	; 51
    31b8:	f0 e0       	ldi	r31, 0x00	; 0
    31ba:	80 81       	ld	r24, Z
    31bc:	28 2f       	mov	r18, r24
    31be:	30 e0       	ldi	r19, 0x00	; 0
    31c0:	8a 81       	ldd	r24, Y+2	; 0x02
    31c2:	88 2f       	mov	r24, r24
    31c4:	90 e0       	ldi	r25, 0x00	; 0
    31c6:	a9 01       	movw	r20, r18
    31c8:	02 c0       	rjmp	.+4      	; 0x31ce <DIO_U8GetPinValue+0xb6>
    31ca:	55 95       	asr	r21
    31cc:	47 95       	ror	r20
    31ce:	8a 95       	dec	r24
    31d0:	e2 f7       	brpl	.-8      	; 0x31ca <DIO_U8GetPinValue+0xb2>
    31d2:	ca 01       	movw	r24, r20
    31d4:	58 2f       	mov	r21, r24
    31d6:	51 70       	andi	r21, 0x01	; 1
    31d8:	5b 83       	std	Y+3, r21	; 0x03
    31da:	14 c0       	rjmp	.+40     	; 0x3204 <DIO_U8GetPinValue+0xec>
		case 3 : 
			return GET_BIT( PIND , Copy_U8Pin ) ;
    31dc:	e0 e3       	ldi	r30, 0x30	; 48
    31de:	f0 e0       	ldi	r31, 0x00	; 0
    31e0:	80 81       	ld	r24, Z
    31e2:	28 2f       	mov	r18, r24
    31e4:	30 e0       	ldi	r19, 0x00	; 0
    31e6:	8a 81       	ldd	r24, Y+2	; 0x02
    31e8:	88 2f       	mov	r24, r24
    31ea:	90 e0       	ldi	r25, 0x00	; 0
    31ec:	a9 01       	movw	r20, r18
    31ee:	02 c0       	rjmp	.+4      	; 0x31f4 <DIO_U8GetPinValue+0xdc>
    31f0:	55 95       	asr	r21
    31f2:	47 95       	ror	r20
    31f4:	8a 95       	dec	r24
    31f6:	e2 f7       	brpl	.-8      	; 0x31f0 <DIO_U8GetPinValue+0xd8>
    31f8:	ca 01       	movw	r24, r20
    31fa:	58 2f       	mov	r21, r24
    31fc:	51 70       	andi	r21, 0x01	; 1
    31fe:	5b 83       	std	Y+3, r21	; 0x03
    3200:	01 c0       	rjmp	.+2      	; 0x3204 <DIO_U8GetPinValue+0xec>
    3202:	02 c0       	rjmp	.+4      	; 0x3208 <DIO_U8GetPinValue+0xf0>
	}//end switch	
}//end FUNC DIO_VidU8PinValue 
    3204:	8b 81       	ldd	r24, Y+3	; 0x03
    3206:	8e 83       	std	Y+6, r24	; 0x06
    3208:	8e 81       	ldd	r24, Y+6	; 0x06
    320a:	26 96       	adiw	r28, 0x06	; 6
    320c:	0f b6       	in	r0, 0x3f	; 63
    320e:	f8 94       	cli
    3210:	de bf       	out	0x3e, r29	; 62
    3212:	0f be       	out	0x3f, r0	; 63
    3214:	cd bf       	out	0x3d, r28	; 61
    3216:	cf 91       	pop	r28
    3218:	df 91       	pop	r29
    321a:	08 95       	ret

0000321c <EX_INT_VidSetCallBack>:
static void (*INT0_PFUNC)(void) = 0 ;
static void (*INT1_PFUNC)(void) = 0 ;
static void (*INT2_PFUNC)(void) = 0 ;

//preferred to use this FUNC in line 1 in main code to avoid some problems in memory
void EX_INT_VidSetCallBack (u8 Copy_NumOfINT , void (*ptr)(void)){
    321c:	df 93       	push	r29
    321e:	cf 93       	push	r28
    3220:	00 d0       	rcall	.+0      	; 0x3222 <EX_INT_VidSetCallBack+0x6>
    3222:	00 d0       	rcall	.+0      	; 0x3224 <EX_INT_VidSetCallBack+0x8>
    3224:	0f 92       	push	r0
    3226:	cd b7       	in	r28, 0x3d	; 61
    3228:	de b7       	in	r29, 0x3e	; 62
    322a:	89 83       	std	Y+1, r24	; 0x01
    322c:	7b 83       	std	Y+3, r23	; 0x03
    322e:	6a 83       	std	Y+2, r22	; 0x02
	switch (Copy_NumOfINT){
    3230:	89 81       	ldd	r24, Y+1	; 0x01
    3232:	28 2f       	mov	r18, r24
    3234:	30 e0       	ldi	r19, 0x00	; 0
    3236:	3d 83       	std	Y+5, r19	; 0x05
    3238:	2c 83       	std	Y+4, r18	; 0x04
    323a:	8c 81       	ldd	r24, Y+4	; 0x04
    323c:	9d 81       	ldd	r25, Y+5	; 0x05
    323e:	81 30       	cpi	r24, 0x01	; 1
    3240:	91 05       	cpc	r25, r1
    3242:	81 f0       	breq	.+32     	; 0x3264 <EX_INT_VidSetCallBack+0x48>
    3244:	2c 81       	ldd	r18, Y+4	; 0x04
    3246:	3d 81       	ldd	r19, Y+5	; 0x05
    3248:	22 30       	cpi	r18, 0x02	; 2
    324a:	31 05       	cpc	r19, r1
    324c:	91 f0       	breq	.+36     	; 0x3272 <EX_INT_VidSetCallBack+0x56>
    324e:	8c 81       	ldd	r24, Y+4	; 0x04
    3250:	9d 81       	ldd	r25, Y+5	; 0x05
    3252:	00 97       	sbiw	r24, 0x00	; 0
    3254:	a1 f4       	brne	.+40     	; 0x327e <EX_INT_VidSetCallBack+0x62>
	case 0 :INT0_PFUNC = ptr ;             break ;
    3256:	8a 81       	ldd	r24, Y+2	; 0x02
    3258:	9b 81       	ldd	r25, Y+3	; 0x03
    325a:	90 93 95 01 	sts	0x0195, r25
    325e:	80 93 94 01 	sts	0x0194, r24
    3262:	0d c0       	rjmp	.+26     	; 0x327e <EX_INT_VidSetCallBack+0x62>
	case 1 :INT1_PFUNC = ptr ;             break ;
    3264:	8a 81       	ldd	r24, Y+2	; 0x02
    3266:	9b 81       	ldd	r25, Y+3	; 0x03
    3268:	90 93 97 01 	sts	0x0197, r25
    326c:	80 93 96 01 	sts	0x0196, r24
    3270:	06 c0       	rjmp	.+12     	; 0x327e <EX_INT_VidSetCallBack+0x62>
	case 2 :INT2_PFUNC = ptr ;             break ;
    3272:	8a 81       	ldd	r24, Y+2	; 0x02
    3274:	9b 81       	ldd	r25, Y+3	; 0x03
    3276:	90 93 99 01 	sts	0x0199, r25
    327a:	80 93 98 01 	sts	0x0198, r24
	}
}
    327e:	0f 90       	pop	r0
    3280:	0f 90       	pop	r0
    3282:	0f 90       	pop	r0
    3284:	0f 90       	pop	r0
    3286:	0f 90       	pop	r0
    3288:	cf 91       	pop	r28
    328a:	df 91       	pop	r29
    328c:	08 95       	ret

0000328e <EX_INT_VidINIT>:
/**********************************************************/
void EX_INT_VidINIT(void){
    328e:	df 93       	push	r29
    3290:	cf 93       	push	r28
    3292:	cd b7       	in	r28, 0x3d	; 61
    3294:	de b7       	in	r29, 0x3e	; 62
    	SET_BIT(MCUCR,ISC00);
    	CLR_BIT(MCUCR,ISC01);
    }
    else if (INT0_FALLING){
		//INT0 sense control = falling edge
        DIO_VidSetPinDirection(PORTD,PD2,LOW);     //to define bit interrupt 0 as input
    3296:	83 e0       	ldi	r24, 0x03	; 3
    3298:	62 e0       	ldi	r22, 0x02	; 2
    329a:	40 e0       	ldi	r20, 0x00	; 0
    329c:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
        DIO_VidSetPinValue(PORTD,PD2,HIGH);        // pull up resistor on interrupt 0
    32a0:	83 e0       	ldi	r24, 0x03	; 3
    32a2:	62 e0       	ldi	r22, 0x02	; 2
    32a4:	41 e0       	ldi	r20, 0x01	; 1
    32a6:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
		CLR_BIT(MCUCR,ISC00);
    32aa:	a5 e5       	ldi	r26, 0x55	; 85
    32ac:	b0 e0       	ldi	r27, 0x00	; 0
    32ae:	e5 e5       	ldi	r30, 0x55	; 85
    32b0:	f0 e0       	ldi	r31, 0x00	; 0
    32b2:	80 81       	ld	r24, Z
    32b4:	8e 7f       	andi	r24, 0xFE	; 254
    32b6:	8c 93       	st	X, r24
		SET_BIT(MCUCR,ISC01);
    32b8:	a5 e5       	ldi	r26, 0x55	; 85
    32ba:	b0 e0       	ldi	r27, 0x00	; 0
    32bc:	e5 e5       	ldi	r30, 0x55	; 85
    32be:	f0 e0       	ldi	r31, 0x00	; 0
    32c0:	80 81       	ld	r24, Z
    32c2:	82 60       	ori	r24, 0x02	; 2
    32c4:	8c 93       	st	X, r24
    	SET_BIT(MCUCR,ISC10);
    	CLR_BIT(MCUCR,ISC11);
    }
    else if (INT1_FALLING){
		//INT1 sense control = falling edge
        DIO_VidSetPinDirection(PORTD,PD3,LOW);     //to define bit interrupt 1 as input
    32c6:	83 e0       	ldi	r24, 0x03	; 3
    32c8:	63 e0       	ldi	r22, 0x03	; 3
    32ca:	40 e0       	ldi	r20, 0x00	; 0
    32cc:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
        DIO_VidSetPinValue(PORTD,PD3,HIGH);        // pull up resistor on interrupt 1
    32d0:	83 e0       	ldi	r24, 0x03	; 3
    32d2:	63 e0       	ldi	r22, 0x03	; 3
    32d4:	41 e0       	ldi	r20, 0x01	; 1
    32d6:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
		CLR_BIT(MCUCR,ISC10);
    32da:	a5 e5       	ldi	r26, 0x55	; 85
    32dc:	b0 e0       	ldi	r27, 0x00	; 0
    32de:	e5 e5       	ldi	r30, 0x55	; 85
    32e0:	f0 e0       	ldi	r31, 0x00	; 0
    32e2:	80 81       	ld	r24, Z
    32e4:	8b 7f       	andi	r24, 0xFB	; 251
    32e6:	8c 93       	st	X, r24
		SET_BIT(MCUCR,ISC11);
    32e8:	a5 e5       	ldi	r26, 0x55	; 85
    32ea:	b0 e0       	ldi	r27, 0x00	; 0
    32ec:	e5 e5       	ldi	r30, 0x55	; 85
    32ee:	f0 e0       	ldi	r31, 0x00	; 0
    32f0:	80 81       	ld	r24, Z
    32f2:	88 60       	ori	r24, 0x08	; 8
    32f4:	8c 93       	st	X, r24
    }
#endif

#ifdef INT2      //to define edge of interrupt 2
    if (INT2_FALLING){
        DIO_VidSetPinDirection(PORTB,PB2,LOW);     //to define bit interrupt 2 as input
    32f6:	81 e0       	ldi	r24, 0x01	; 1
    32f8:	62 e0       	ldi	r22, 0x02	; 2
    32fa:	40 e0       	ldi	r20, 0x00	; 0
    32fc:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
        DIO_VidSetPinValue(PORTB,PB2,HIGH);        // pull up resistor on interrupt 2
    3300:	81 e0       	ldi	r24, 0x01	; 1
    3302:	62 e0       	ldi	r22, 0x02	; 2
    3304:	41 e0       	ldi	r20, 0x01	; 1
    3306:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
		CLR_BIT(MCUCSR,ISC2);		//INT2 sense control = falling edge
    330a:	a4 e5       	ldi	r26, 0x54	; 84
    330c:	b0 e0       	ldi	r27, 0x00	; 0
    330e:	e4 e5       	ldi	r30, 0x54	; 84
    3310:	f0 e0       	ldi	r31, 0x00	; 0
    3312:	80 81       	ld	r24, Z
    3314:	8f 7b       	andi	r24, 0xBF	; 191
    3316:	8c 93       	st	X, r24
    else if (INT2_RASING) {
    	SET_BIT(MCUCSR,ISC2);        //INT2 sense control = raising edge
    }
#endif

}
    3318:	cf 91       	pop	r28
    331a:	df 91       	pop	r29
    331c:	08 95       	ret

0000331e <EX_PIE_VidEnable>:
	//to disable general interrupt
	CLR_BIT(SREG,I_BIT);
}*/

/**********************************************************/
void EX_PIE_VidEnable(u8 COPY_U8INT_NUM){
    331e:	df 93       	push	r29
    3320:	cf 93       	push	r28
    3322:	00 d0       	rcall	.+0      	; 0x3324 <EX_PIE_VidEnable+0x6>
    3324:	0f 92       	push	r0
    3326:	cd b7       	in	r28, 0x3d	; 61
    3328:	de b7       	in	r29, 0x3e	; 62
    332a:	89 83       	std	Y+1, r24	; 0x01
	switch(COPY_U8INT_NUM) {
    332c:	89 81       	ldd	r24, Y+1	; 0x01
    332e:	28 2f       	mov	r18, r24
    3330:	30 e0       	ldi	r19, 0x00	; 0
    3332:	3b 83       	std	Y+3, r19	; 0x03
    3334:	2a 83       	std	Y+2, r18	; 0x02
    3336:	8a 81       	ldd	r24, Y+2	; 0x02
    3338:	9b 81       	ldd	r25, Y+3	; 0x03
    333a:	81 30       	cpi	r24, 0x01	; 1
    333c:	91 05       	cpc	r25, r1
    333e:	89 f0       	breq	.+34     	; 0x3362 <EX_PIE_VidEnable+0x44>
    3340:	2a 81       	ldd	r18, Y+2	; 0x02
    3342:	3b 81       	ldd	r19, Y+3	; 0x03
    3344:	22 30       	cpi	r18, 0x02	; 2
    3346:	31 05       	cpc	r19, r1
    3348:	a1 f0       	breq	.+40     	; 0x3372 <EX_PIE_VidEnable+0x54>
    334a:	8a 81       	ldd	r24, Y+2	; 0x02
    334c:	9b 81       	ldd	r25, Y+3	; 0x03
    334e:	00 97       	sbiw	r24, 0x00	; 0
    3350:	b9 f4       	brne	.+46     	; 0x3380 <EX_PIE_VidEnable+0x62>
	case 0 : SET_BIT(GICR,INT0);  break ;   //INT0 Enable
    3352:	ab e5       	ldi	r26, 0x5B	; 91
    3354:	b0 e0       	ldi	r27, 0x00	; 0
    3356:	eb e5       	ldi	r30, 0x5B	; 91
    3358:	f0 e0       	ldi	r31, 0x00	; 0
    335a:	80 81       	ld	r24, Z
    335c:	80 64       	ori	r24, 0x40	; 64
    335e:	8c 93       	st	X, r24
    3360:	0f c0       	rjmp	.+30     	; 0x3380 <EX_PIE_VidEnable+0x62>
	case 1 : SET_BIT(GICR,INT1);  break ;   //INT1 Enable
    3362:	ab e5       	ldi	r26, 0x5B	; 91
    3364:	b0 e0       	ldi	r27, 0x00	; 0
    3366:	eb e5       	ldi	r30, 0x5B	; 91
    3368:	f0 e0       	ldi	r31, 0x00	; 0
    336a:	80 81       	ld	r24, Z
    336c:	80 68       	ori	r24, 0x80	; 128
    336e:	8c 93       	st	X, r24
    3370:	07 c0       	rjmp	.+14     	; 0x3380 <EX_PIE_VidEnable+0x62>
	case 2 : SET_BIT(GICR,INT2);  break ;   //INT2 Enable
    3372:	ab e5       	ldi	r26, 0x5B	; 91
    3374:	b0 e0       	ldi	r27, 0x00	; 0
    3376:	eb e5       	ldi	r30, 0x5B	; 91
    3378:	f0 e0       	ldi	r31, 0x00	; 0
    337a:	80 81       	ld	r24, Z
    337c:	80 62       	ori	r24, 0x20	; 32
    337e:	8c 93       	st	X, r24
	}
}
    3380:	0f 90       	pop	r0
    3382:	0f 90       	pop	r0
    3384:	0f 90       	pop	r0
    3386:	cf 91       	pop	r28
    3388:	df 91       	pop	r29
    338a:	08 95       	ret

0000338c <EX_PIE_VidDisable>:

void EX_PIE_VidDisable(u8 COPY_U8INT_NUM){
    338c:	df 93       	push	r29
    338e:	cf 93       	push	r28
    3390:	00 d0       	rcall	.+0      	; 0x3392 <EX_PIE_VidDisable+0x6>
    3392:	0f 92       	push	r0
    3394:	cd b7       	in	r28, 0x3d	; 61
    3396:	de b7       	in	r29, 0x3e	; 62
    3398:	89 83       	std	Y+1, r24	; 0x01
	switch(COPY_U8INT_NUM) {
    339a:	89 81       	ldd	r24, Y+1	; 0x01
    339c:	28 2f       	mov	r18, r24
    339e:	30 e0       	ldi	r19, 0x00	; 0
    33a0:	3b 83       	std	Y+3, r19	; 0x03
    33a2:	2a 83       	std	Y+2, r18	; 0x02
    33a4:	8a 81       	ldd	r24, Y+2	; 0x02
    33a6:	9b 81       	ldd	r25, Y+3	; 0x03
    33a8:	81 30       	cpi	r24, 0x01	; 1
    33aa:	91 05       	cpc	r25, r1
    33ac:	89 f0       	breq	.+34     	; 0x33d0 <EX_PIE_VidDisable+0x44>
    33ae:	2a 81       	ldd	r18, Y+2	; 0x02
    33b0:	3b 81       	ldd	r19, Y+3	; 0x03
    33b2:	22 30       	cpi	r18, 0x02	; 2
    33b4:	31 05       	cpc	r19, r1
    33b6:	a1 f0       	breq	.+40     	; 0x33e0 <EX_PIE_VidDisable+0x54>
    33b8:	8a 81       	ldd	r24, Y+2	; 0x02
    33ba:	9b 81       	ldd	r25, Y+3	; 0x03
    33bc:	00 97       	sbiw	r24, 0x00	; 0
    33be:	b9 f4       	brne	.+46     	; 0x33ee <EX_PIE_VidDisable+0x62>
	case 0 : CLR_BIT(GICR,INT0);  break ;   //INT0 Enable
    33c0:	ab e5       	ldi	r26, 0x5B	; 91
    33c2:	b0 e0       	ldi	r27, 0x00	; 0
    33c4:	eb e5       	ldi	r30, 0x5B	; 91
    33c6:	f0 e0       	ldi	r31, 0x00	; 0
    33c8:	80 81       	ld	r24, Z
    33ca:	8f 7b       	andi	r24, 0xBF	; 191
    33cc:	8c 93       	st	X, r24
    33ce:	0f c0       	rjmp	.+30     	; 0x33ee <EX_PIE_VidDisable+0x62>
	case 1 : CLR_BIT(GICR,INT1);  break ;   //INT1 Enable
    33d0:	ab e5       	ldi	r26, 0x5B	; 91
    33d2:	b0 e0       	ldi	r27, 0x00	; 0
    33d4:	eb e5       	ldi	r30, 0x5B	; 91
    33d6:	f0 e0       	ldi	r31, 0x00	; 0
    33d8:	80 81       	ld	r24, Z
    33da:	8f 77       	andi	r24, 0x7F	; 127
    33dc:	8c 93       	st	X, r24
    33de:	07 c0       	rjmp	.+14     	; 0x33ee <EX_PIE_VidDisable+0x62>
	case 2 : CLR_BIT(GICR,INT2);  break ;   //INT2 Enable
    33e0:	ab e5       	ldi	r26, 0x5B	; 91
    33e2:	b0 e0       	ldi	r27, 0x00	; 0
    33e4:	eb e5       	ldi	r30, 0x5B	; 91
    33e6:	f0 e0       	ldi	r31, 0x00	; 0
    33e8:	80 81       	ld	r24, Z
    33ea:	8f 7d       	andi	r24, 0xDF	; 223
    33ec:	8c 93       	st	X, r24
	}
}
    33ee:	0f 90       	pop	r0
    33f0:	0f 90       	pop	r0
    33f2:	0f 90       	pop	r0
    33f4:	cf 91       	pop	r28
    33f6:	df 91       	pop	r29
    33f8:	08 95       	ret

000033fa <__vector_1>:

/**********************************************************/
void __vector_1(void){
    33fa:	1f 92       	push	r1
    33fc:	0f 92       	push	r0
    33fe:	0f b6       	in	r0, 0x3f	; 63
    3400:	0f 92       	push	r0
    3402:	11 24       	eor	r1, r1
    3404:	2f 93       	push	r18
    3406:	3f 93       	push	r19
    3408:	4f 93       	push	r20
    340a:	5f 93       	push	r21
    340c:	6f 93       	push	r22
    340e:	7f 93       	push	r23
    3410:	8f 93       	push	r24
    3412:	9f 93       	push	r25
    3414:	af 93       	push	r26
    3416:	bf 93       	push	r27
    3418:	ef 93       	push	r30
    341a:	ff 93       	push	r31
    341c:	df 93       	push	r29
    341e:	cf 93       	push	r28
    3420:	cd b7       	in	r28, 0x3d	; 61
    3422:	de b7       	in	r29, 0x3e	; 62
	//to toggle led
	INT0_PFUNC();
    3424:	e0 91 94 01 	lds	r30, 0x0194
    3428:	f0 91 95 01 	lds	r31, 0x0195
    342c:	09 95       	icall
}
    342e:	cf 91       	pop	r28
    3430:	df 91       	pop	r29
    3432:	ff 91       	pop	r31
    3434:	ef 91       	pop	r30
    3436:	bf 91       	pop	r27
    3438:	af 91       	pop	r26
    343a:	9f 91       	pop	r25
    343c:	8f 91       	pop	r24
    343e:	7f 91       	pop	r23
    3440:	6f 91       	pop	r22
    3442:	5f 91       	pop	r21
    3444:	4f 91       	pop	r20
    3446:	3f 91       	pop	r19
    3448:	2f 91       	pop	r18
    344a:	0f 90       	pop	r0
    344c:	0f be       	out	0x3f, r0	; 63
    344e:	0f 90       	pop	r0
    3450:	1f 90       	pop	r1
    3452:	18 95       	reti

00003454 <__vector_2>:

void __vector_2(void){
    3454:	1f 92       	push	r1
    3456:	0f 92       	push	r0
    3458:	0f b6       	in	r0, 0x3f	; 63
    345a:	0f 92       	push	r0
    345c:	11 24       	eor	r1, r1
    345e:	2f 93       	push	r18
    3460:	3f 93       	push	r19
    3462:	4f 93       	push	r20
    3464:	5f 93       	push	r21
    3466:	6f 93       	push	r22
    3468:	7f 93       	push	r23
    346a:	8f 93       	push	r24
    346c:	9f 93       	push	r25
    346e:	af 93       	push	r26
    3470:	bf 93       	push	r27
    3472:	ef 93       	push	r30
    3474:	ff 93       	push	r31
    3476:	df 93       	push	r29
    3478:	cf 93       	push	r28
    347a:	cd b7       	in	r28, 0x3d	; 61
    347c:	de b7       	in	r29, 0x3e	; 62
	//to toggle led
	INT1_PFUNC();
    347e:	e0 91 96 01 	lds	r30, 0x0196
    3482:	f0 91 97 01 	lds	r31, 0x0197
    3486:	09 95       	icall
}
    3488:	cf 91       	pop	r28
    348a:	df 91       	pop	r29
    348c:	ff 91       	pop	r31
    348e:	ef 91       	pop	r30
    3490:	bf 91       	pop	r27
    3492:	af 91       	pop	r26
    3494:	9f 91       	pop	r25
    3496:	8f 91       	pop	r24
    3498:	7f 91       	pop	r23
    349a:	6f 91       	pop	r22
    349c:	5f 91       	pop	r21
    349e:	4f 91       	pop	r20
    34a0:	3f 91       	pop	r19
    34a2:	2f 91       	pop	r18
    34a4:	0f 90       	pop	r0
    34a6:	0f be       	out	0x3f, r0	; 63
    34a8:	0f 90       	pop	r0
    34aa:	1f 90       	pop	r1
    34ac:	18 95       	reti

000034ae <__vector_3>:

void __vector_3(void){
    34ae:	1f 92       	push	r1
    34b0:	0f 92       	push	r0
    34b2:	0f b6       	in	r0, 0x3f	; 63
    34b4:	0f 92       	push	r0
    34b6:	11 24       	eor	r1, r1
    34b8:	2f 93       	push	r18
    34ba:	3f 93       	push	r19
    34bc:	4f 93       	push	r20
    34be:	5f 93       	push	r21
    34c0:	6f 93       	push	r22
    34c2:	7f 93       	push	r23
    34c4:	8f 93       	push	r24
    34c6:	9f 93       	push	r25
    34c8:	af 93       	push	r26
    34ca:	bf 93       	push	r27
    34cc:	ef 93       	push	r30
    34ce:	ff 93       	push	r31
    34d0:	df 93       	push	r29
    34d2:	cf 93       	push	r28
    34d4:	cd b7       	in	r28, 0x3d	; 61
    34d6:	de b7       	in	r29, 0x3e	; 62
	//to toggle led
	INT2_PFUNC();
    34d8:	e0 91 98 01 	lds	r30, 0x0198
    34dc:	f0 91 99 01 	lds	r31, 0x0199
    34e0:	09 95       	icall
}
    34e2:	cf 91       	pop	r28
    34e4:	df 91       	pop	r29
    34e6:	ff 91       	pop	r31
    34e8:	ef 91       	pop	r30
    34ea:	bf 91       	pop	r27
    34ec:	af 91       	pop	r26
    34ee:	9f 91       	pop	r25
    34f0:	8f 91       	pop	r24
    34f2:	7f 91       	pop	r23
    34f4:	6f 91       	pop	r22
    34f6:	5f 91       	pop	r21
    34f8:	4f 91       	pop	r20
    34fa:	3f 91       	pop	r19
    34fc:	2f 91       	pop	r18
    34fe:	0f 90       	pop	r0
    3500:	0f be       	out	0x3f, r0	; 63
    3502:	0f 90       	pop	r0
    3504:	1f 90       	pop	r1
    3506:	18 95       	reti

00003508 <GIE_VidEnable>:
#include"../LIB/BIT_MATH.h"
#include "DIO_interface.h"
#include "INTERRUPT_Interface.h"
#include "INTERRUPT_private.h"

void GIE_VidEnable (void){
    3508:	df 93       	push	r29
    350a:	cf 93       	push	r28
    350c:	cd b7       	in	r28, 0x3d	; 61
    350e:	de b7       	in	r29, 0x3e	; 62
	//to enable general interrupt
	SET_BIT(SREG,I_BIT);
    3510:	af e5       	ldi	r26, 0x5F	; 95
    3512:	b0 e0       	ldi	r27, 0x00	; 0
    3514:	ef e5       	ldi	r30, 0x5F	; 95
    3516:	f0 e0       	ldi	r31, 0x00	; 0
    3518:	80 81       	ld	r24, Z
    351a:	80 68       	ori	r24, 0x80	; 128
    351c:	8c 93       	st	X, r24
}
    351e:	cf 91       	pop	r28
    3520:	df 91       	pop	r29
    3522:	08 95       	ret

00003524 <GIE_VidDisable>:

void GIE_VidDisable (void){
    3524:	df 93       	push	r29
    3526:	cf 93       	push	r28
    3528:	cd b7       	in	r28, 0x3d	; 61
    352a:	de b7       	in	r29, 0x3e	; 62
	//to disable general interrupt
	CLR_BIT(SREG,I_BIT);
    352c:	af e5       	ldi	r26, 0x5F	; 95
    352e:	b0 e0       	ldi	r27, 0x00	; 0
    3530:	ef e5       	ldi	r30, 0x5F	; 95
    3532:	f0 e0       	ldi	r31, 0x00	; 0
    3534:	80 81       	ld	r24, Z
    3536:	8f 77       	andi	r24, 0x7F	; 127
    3538:	8c 93       	st	X, r24
}
    353a:	cf 91       	pop	r28
    353c:	df 91       	pop	r29
    353e:	08 95       	ret

00003540 <LCD_VidSendCommend>:
#include"LCD_cfg.h"
#include"LCD_private.h" 
#include<avr/delay.h>


void LCD_VidSendCommend(u8 Copy_U8Commend){
    3540:	df 93       	push	r29
    3542:	cf 93       	push	r28
    3544:	cd b7       	in	r28, 0x3d	; 61
    3546:	de b7       	in	r29, 0x3e	; 62
    3548:	6d 97       	sbiw	r28, 0x1d	; 29
    354a:	0f b6       	in	r0, 0x3f	; 63
    354c:	f8 94       	cli
    354e:	de bf       	out	0x3e, r29	; 62
    3550:	0f be       	out	0x3f, r0	; 63
    3552:	cd bf       	out	0x3d, r28	; 61
    3554:	8d 8f       	std	Y+29, r24	; 0x1d

#ifdef EIGHT_BIT

/**************to disable RS *** *********************/
	DIO_VidSetPinValue(CONTROL_PORT,RS,LOW);
    3556:	83 e0       	ldi	r24, 0x03	; 3
    3558:	63 e0       	ldi	r22, 0x03	; 3
    355a:	40 e0       	ldi	r20, 0x00	; 0
    355c:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
/******to out the value of commend on data port *****/
	DIO_VidSetPortValue(DATA_PORT,Copy_U8Commend);
    3560:	82 e0       	ldi	r24, 0x02	; 2
    3562:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3564:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <DIO_VidSetPortValue>
/*************to make pulse for enable **************/
	DIO_VidSetPinValue(CONTROL_PORT,E,HIGH);
    3568:	83 e0       	ldi	r24, 0x03	; 3
    356a:	64 e0       	ldi	r22, 0x04	; 4
    356c:	41 e0       	ldi	r20, 0x01	; 1
    356e:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    3572:	80 e0       	ldi	r24, 0x00	; 0
    3574:	90 e0       	ldi	r25, 0x00	; 0
    3576:	a0 e8       	ldi	r26, 0x80	; 128
    3578:	bf e3       	ldi	r27, 0x3F	; 63
    357a:	89 8f       	std	Y+25, r24	; 0x19
    357c:	9a 8f       	std	Y+26, r25	; 0x1a
    357e:	ab 8f       	std	Y+27, r26	; 0x1b
    3580:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3582:	69 8d       	ldd	r22, Y+25	; 0x19
    3584:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3586:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3588:	9c 8d       	ldd	r25, Y+28	; 0x1c
    358a:	20 e0       	ldi	r18, 0x00	; 0
    358c:	30 e0       	ldi	r19, 0x00	; 0
    358e:	4a ef       	ldi	r20, 0xFA	; 250
    3590:	54 e4       	ldi	r21, 0x44	; 68
    3592:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3596:	dc 01       	movw	r26, r24
    3598:	cb 01       	movw	r24, r22
    359a:	8d 8b       	std	Y+21, r24	; 0x15
    359c:	9e 8b       	std	Y+22, r25	; 0x16
    359e:	af 8b       	std	Y+23, r26	; 0x17
    35a0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    35a2:	6d 89       	ldd	r22, Y+21	; 0x15
    35a4:	7e 89       	ldd	r23, Y+22	; 0x16
    35a6:	8f 89       	ldd	r24, Y+23	; 0x17
    35a8:	98 8d       	ldd	r25, Y+24	; 0x18
    35aa:	20 e0       	ldi	r18, 0x00	; 0
    35ac:	30 e0       	ldi	r19, 0x00	; 0
    35ae:	40 e8       	ldi	r20, 0x80	; 128
    35b0:	5f e3       	ldi	r21, 0x3F	; 63
    35b2:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    35b6:	88 23       	and	r24, r24
    35b8:	2c f4       	brge	.+10     	; 0x35c4 <LCD_VidSendCommend+0x84>
		__ticks = 1;
    35ba:	81 e0       	ldi	r24, 0x01	; 1
    35bc:	90 e0       	ldi	r25, 0x00	; 0
    35be:	9c 8b       	std	Y+20, r25	; 0x14
    35c0:	8b 8b       	std	Y+19, r24	; 0x13
    35c2:	3f c0       	rjmp	.+126    	; 0x3642 <LCD_VidSendCommend+0x102>
	else if (__tmp > 65535)
    35c4:	6d 89       	ldd	r22, Y+21	; 0x15
    35c6:	7e 89       	ldd	r23, Y+22	; 0x16
    35c8:	8f 89       	ldd	r24, Y+23	; 0x17
    35ca:	98 8d       	ldd	r25, Y+24	; 0x18
    35cc:	20 e0       	ldi	r18, 0x00	; 0
    35ce:	3f ef       	ldi	r19, 0xFF	; 255
    35d0:	4f e7       	ldi	r20, 0x7F	; 127
    35d2:	57 e4       	ldi	r21, 0x47	; 71
    35d4:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    35d8:	18 16       	cp	r1, r24
    35da:	4c f5       	brge	.+82     	; 0x362e <LCD_VidSendCommend+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35dc:	69 8d       	ldd	r22, Y+25	; 0x19
    35de:	7a 8d       	ldd	r23, Y+26	; 0x1a
    35e0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    35e2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    35e4:	20 e0       	ldi	r18, 0x00	; 0
    35e6:	30 e0       	ldi	r19, 0x00	; 0
    35e8:	40 e2       	ldi	r20, 0x20	; 32
    35ea:	51 e4       	ldi	r21, 0x41	; 65
    35ec:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    35f0:	dc 01       	movw	r26, r24
    35f2:	cb 01       	movw	r24, r22
    35f4:	bc 01       	movw	r22, r24
    35f6:	cd 01       	movw	r24, r26
    35f8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    35fc:	dc 01       	movw	r26, r24
    35fe:	cb 01       	movw	r24, r22
    3600:	9c 8b       	std	Y+20, r25	; 0x14
    3602:	8b 8b       	std	Y+19, r24	; 0x13
    3604:	0f c0       	rjmp	.+30     	; 0x3624 <LCD_VidSendCommend+0xe4>
    3606:	88 ec       	ldi	r24, 0xC8	; 200
    3608:	90 e0       	ldi	r25, 0x00	; 0
    360a:	9a 8b       	std	Y+18, r25	; 0x12
    360c:	89 8b       	std	Y+17, r24	; 0x11
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    360e:	89 89       	ldd	r24, Y+17	; 0x11
    3610:	9a 89       	ldd	r25, Y+18	; 0x12
    3612:	01 97       	sbiw	r24, 0x01	; 1
    3614:	f1 f7       	brne	.-4      	; 0x3612 <LCD_VidSendCommend+0xd2>
    3616:	9a 8b       	std	Y+18, r25	; 0x12
    3618:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    361a:	8b 89       	ldd	r24, Y+19	; 0x13
    361c:	9c 89       	ldd	r25, Y+20	; 0x14
    361e:	01 97       	sbiw	r24, 0x01	; 1
    3620:	9c 8b       	std	Y+20, r25	; 0x14
    3622:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3624:	8b 89       	ldd	r24, Y+19	; 0x13
    3626:	9c 89       	ldd	r25, Y+20	; 0x14
    3628:	00 97       	sbiw	r24, 0x00	; 0
    362a:	69 f7       	brne	.-38     	; 0x3606 <LCD_VidSendCommend+0xc6>
    362c:	14 c0       	rjmp	.+40     	; 0x3656 <LCD_VidSendCommend+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    362e:	6d 89       	ldd	r22, Y+21	; 0x15
    3630:	7e 89       	ldd	r23, Y+22	; 0x16
    3632:	8f 89       	ldd	r24, Y+23	; 0x17
    3634:	98 8d       	ldd	r25, Y+24	; 0x18
    3636:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    363a:	dc 01       	movw	r26, r24
    363c:	cb 01       	movw	r24, r22
    363e:	9c 8b       	std	Y+20, r25	; 0x14
    3640:	8b 8b       	std	Y+19, r24	; 0x13
    3642:	8b 89       	ldd	r24, Y+19	; 0x13
    3644:	9c 89       	ldd	r25, Y+20	; 0x14
    3646:	98 8b       	std	Y+16, r25	; 0x10
    3648:	8f 87       	std	Y+15, r24	; 0x0f
    364a:	8f 85       	ldd	r24, Y+15	; 0x0f
    364c:	98 89       	ldd	r25, Y+16	; 0x10
    364e:	01 97       	sbiw	r24, 0x01	; 1
    3650:	f1 f7       	brne	.-4      	; 0x364e <LCD_VidSendCommend+0x10e>
    3652:	98 8b       	std	Y+16, r25	; 0x10
    3654:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
    3656:	83 e0       	ldi	r24, 0x03	; 3
    3658:	64 e0       	ldi	r22, 0x04	; 4
    365a:	40 e0       	ldi	r20, 0x00	; 0
    365c:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    3660:	80 e0       	ldi	r24, 0x00	; 0
    3662:	90 e0       	ldi	r25, 0x00	; 0
    3664:	a0 e0       	ldi	r26, 0x00	; 0
    3666:	b0 e4       	ldi	r27, 0x40	; 64
    3668:	8b 87       	std	Y+11, r24	; 0x0b
    366a:	9c 87       	std	Y+12, r25	; 0x0c
    366c:	ad 87       	std	Y+13, r26	; 0x0d
    366e:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3670:	6b 85       	ldd	r22, Y+11	; 0x0b
    3672:	7c 85       	ldd	r23, Y+12	; 0x0c
    3674:	8d 85       	ldd	r24, Y+13	; 0x0d
    3676:	9e 85       	ldd	r25, Y+14	; 0x0e
    3678:	20 e0       	ldi	r18, 0x00	; 0
    367a:	30 e0       	ldi	r19, 0x00	; 0
    367c:	4a ef       	ldi	r20, 0xFA	; 250
    367e:	54 e4       	ldi	r21, 0x44	; 68
    3680:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3684:	dc 01       	movw	r26, r24
    3686:	cb 01       	movw	r24, r22
    3688:	8f 83       	std	Y+7, r24	; 0x07
    368a:	98 87       	std	Y+8, r25	; 0x08
    368c:	a9 87       	std	Y+9, r26	; 0x09
    368e:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3690:	6f 81       	ldd	r22, Y+7	; 0x07
    3692:	78 85       	ldd	r23, Y+8	; 0x08
    3694:	89 85       	ldd	r24, Y+9	; 0x09
    3696:	9a 85       	ldd	r25, Y+10	; 0x0a
    3698:	20 e0       	ldi	r18, 0x00	; 0
    369a:	30 e0       	ldi	r19, 0x00	; 0
    369c:	40 e8       	ldi	r20, 0x80	; 128
    369e:	5f e3       	ldi	r21, 0x3F	; 63
    36a0:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    36a4:	88 23       	and	r24, r24
    36a6:	2c f4       	brge	.+10     	; 0x36b2 <LCD_VidSendCommend+0x172>
		__ticks = 1;
    36a8:	81 e0       	ldi	r24, 0x01	; 1
    36aa:	90 e0       	ldi	r25, 0x00	; 0
    36ac:	9e 83       	std	Y+6, r25	; 0x06
    36ae:	8d 83       	std	Y+5, r24	; 0x05
    36b0:	3f c0       	rjmp	.+126    	; 0x3730 <LCD_VidSendCommend+0x1f0>
	else if (__tmp > 65535)
    36b2:	6f 81       	ldd	r22, Y+7	; 0x07
    36b4:	78 85       	ldd	r23, Y+8	; 0x08
    36b6:	89 85       	ldd	r24, Y+9	; 0x09
    36b8:	9a 85       	ldd	r25, Y+10	; 0x0a
    36ba:	20 e0       	ldi	r18, 0x00	; 0
    36bc:	3f ef       	ldi	r19, 0xFF	; 255
    36be:	4f e7       	ldi	r20, 0x7F	; 127
    36c0:	57 e4       	ldi	r21, 0x47	; 71
    36c2:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    36c6:	18 16       	cp	r1, r24
    36c8:	4c f5       	brge	.+82     	; 0x371c <LCD_VidSendCommend+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    36ca:	6b 85       	ldd	r22, Y+11	; 0x0b
    36cc:	7c 85       	ldd	r23, Y+12	; 0x0c
    36ce:	8d 85       	ldd	r24, Y+13	; 0x0d
    36d0:	9e 85       	ldd	r25, Y+14	; 0x0e
    36d2:	20 e0       	ldi	r18, 0x00	; 0
    36d4:	30 e0       	ldi	r19, 0x00	; 0
    36d6:	40 e2       	ldi	r20, 0x20	; 32
    36d8:	51 e4       	ldi	r21, 0x41	; 65
    36da:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    36de:	dc 01       	movw	r26, r24
    36e0:	cb 01       	movw	r24, r22
    36e2:	bc 01       	movw	r22, r24
    36e4:	cd 01       	movw	r24, r26
    36e6:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    36ea:	dc 01       	movw	r26, r24
    36ec:	cb 01       	movw	r24, r22
    36ee:	9e 83       	std	Y+6, r25	; 0x06
    36f0:	8d 83       	std	Y+5, r24	; 0x05
    36f2:	0f c0       	rjmp	.+30     	; 0x3712 <LCD_VidSendCommend+0x1d2>
    36f4:	88 ec       	ldi	r24, 0xC8	; 200
    36f6:	90 e0       	ldi	r25, 0x00	; 0
    36f8:	9c 83       	std	Y+4, r25	; 0x04
    36fa:	8b 83       	std	Y+3, r24	; 0x03
    36fc:	8b 81       	ldd	r24, Y+3	; 0x03
    36fe:	9c 81       	ldd	r25, Y+4	; 0x04
    3700:	01 97       	sbiw	r24, 0x01	; 1
    3702:	f1 f7       	brne	.-4      	; 0x3700 <LCD_VidSendCommend+0x1c0>
    3704:	9c 83       	std	Y+4, r25	; 0x04
    3706:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3708:	8d 81       	ldd	r24, Y+5	; 0x05
    370a:	9e 81       	ldd	r25, Y+6	; 0x06
    370c:	01 97       	sbiw	r24, 0x01	; 1
    370e:	9e 83       	std	Y+6, r25	; 0x06
    3710:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3712:	8d 81       	ldd	r24, Y+5	; 0x05
    3714:	9e 81       	ldd	r25, Y+6	; 0x06
    3716:	00 97       	sbiw	r24, 0x00	; 0
    3718:	69 f7       	brne	.-38     	; 0x36f4 <LCD_VidSendCommend+0x1b4>
    371a:	14 c0       	rjmp	.+40     	; 0x3744 <LCD_VidSendCommend+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    371c:	6f 81       	ldd	r22, Y+7	; 0x07
    371e:	78 85       	ldd	r23, Y+8	; 0x08
    3720:	89 85       	ldd	r24, Y+9	; 0x09
    3722:	9a 85       	ldd	r25, Y+10	; 0x0a
    3724:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3728:	dc 01       	movw	r26, r24
    372a:	cb 01       	movw	r24, r22
    372c:	9e 83       	std	Y+6, r25	; 0x06
    372e:	8d 83       	std	Y+5, r24	; 0x05
    3730:	8d 81       	ldd	r24, Y+5	; 0x05
    3732:	9e 81       	ldd	r25, Y+6	; 0x06
    3734:	9a 83       	std	Y+2, r25	; 0x02
    3736:	89 83       	std	Y+1, r24	; 0x01
    3738:	89 81       	ldd	r24, Y+1	; 0x01
    373a:	9a 81       	ldd	r25, Y+2	; 0x02
    373c:	01 97       	sbiw	r24, 0x01	; 1
    373e:	f1 f7       	brne	.-4      	; 0x373c <LCD_VidSendCommend+0x1fc>
    3740:	9a 83       	std	Y+2, r25	; 0x02
    3742:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
	_delay_ms(2);

#endif
}
    3744:	6d 96       	adiw	r28, 0x1d	; 29
    3746:	0f b6       	in	r0, 0x3f	; 63
    3748:	f8 94       	cli
    374a:	de bf       	out	0x3e, r29	; 62
    374c:	0f be       	out	0x3f, r0	; 63
    374e:	cd bf       	out	0x3d, r28	; 61
    3750:	cf 91       	pop	r28
    3752:	df 91       	pop	r29
    3754:	08 95       	ret

00003756 <LCD_VidInit>:



void LCD_VidInit (void) {
    3756:	0f 93       	push	r16
    3758:	1f 93       	push	r17
    375a:	df 93       	push	r29
    375c:	cf 93       	push	r28
    375e:	cd b7       	in	r28, 0x3d	; 61
    3760:	de b7       	in	r29, 0x3e	; 62
    3762:	c4 56       	subi	r28, 0x64	; 100
    3764:	d0 40       	sbci	r29, 0x00	; 0
    3766:	0f b6       	in	r0, 0x3f	; 63
    3768:	f8 94       	cli
    376a:	de bf       	out	0x3e, r29	; 62
    376c:	0f be       	out	0x3f, r0	; 63
    376e:	cd bf       	out	0x3d, r28	; 61

#ifdef EIGHT_BIT

/****to define CONTROL PORT as OUTPUT PINS******/
	DIO_VidSetPinDirection(CONTROL_PORT,RS,HIGH);
    3770:	83 e0       	ldi	r24, 0x03	; 3
    3772:	63 e0       	ldi	r22, 0x03	; 3
    3774:	41 e0       	ldi	r20, 0x01	; 1
    3776:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
	DIO_VidSetPinDirection(CONTROL_PORT,E,HIGH);
    377a:	83 e0       	ldi	r24, 0x03	; 3
    377c:	64 e0       	ldi	r22, 0x04	; 4
    377e:	41 e0       	ldi	r20, 0x01	; 1
    3780:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
/****to define DATA PORT as OUTPUT PINS********/
	DIO_VidSetPortDirection(DATA_PORT,0xff);
    3784:	82 e0       	ldi	r24, 0x02	; 2
    3786:	6f ef       	ldi	r22, 0xFF	; 255
    3788:	0e 94 8d 16 	call	0x2d1a	; 0x2d1a <DIO_VidSetPortDirection>
    378c:	fe 01       	movw	r30, r28
    378e:	ef 59       	subi	r30, 0x9F	; 159
    3790:	ff 4f       	sbci	r31, 0xFF	; 255
    3792:	80 e0       	ldi	r24, 0x00	; 0
    3794:	90 e0       	ldi	r25, 0x00	; 0
    3796:	a0 e2       	ldi	r26, 0x20	; 32
    3798:	b2 e4       	ldi	r27, 0x42	; 66
    379a:	80 83       	st	Z, r24
    379c:	91 83       	std	Z+1, r25	; 0x01
    379e:	a2 83       	std	Z+2, r26	; 0x02
    37a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    37a2:	8e 01       	movw	r16, r28
    37a4:	03 5a       	subi	r16, 0xA3	; 163
    37a6:	1f 4f       	sbci	r17, 0xFF	; 255
    37a8:	fe 01       	movw	r30, r28
    37aa:	ef 59       	subi	r30, 0x9F	; 159
    37ac:	ff 4f       	sbci	r31, 0xFF	; 255
    37ae:	60 81       	ld	r22, Z
    37b0:	71 81       	ldd	r23, Z+1	; 0x01
    37b2:	82 81       	ldd	r24, Z+2	; 0x02
    37b4:	93 81       	ldd	r25, Z+3	; 0x03
    37b6:	20 e0       	ldi	r18, 0x00	; 0
    37b8:	30 e0       	ldi	r19, 0x00	; 0
    37ba:	4a ef       	ldi	r20, 0xFA	; 250
    37bc:	54 e4       	ldi	r21, 0x44	; 68
    37be:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    37c2:	dc 01       	movw	r26, r24
    37c4:	cb 01       	movw	r24, r22
    37c6:	f8 01       	movw	r30, r16
    37c8:	80 83       	st	Z, r24
    37ca:	91 83       	std	Z+1, r25	; 0x01
    37cc:	a2 83       	std	Z+2, r26	; 0x02
    37ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    37d0:	fe 01       	movw	r30, r28
    37d2:	e3 5a       	subi	r30, 0xA3	; 163
    37d4:	ff 4f       	sbci	r31, 0xFF	; 255
    37d6:	60 81       	ld	r22, Z
    37d8:	71 81       	ldd	r23, Z+1	; 0x01
    37da:	82 81       	ldd	r24, Z+2	; 0x02
    37dc:	93 81       	ldd	r25, Z+3	; 0x03
    37de:	20 e0       	ldi	r18, 0x00	; 0
    37e0:	30 e0       	ldi	r19, 0x00	; 0
    37e2:	40 e8       	ldi	r20, 0x80	; 128
    37e4:	5f e3       	ldi	r21, 0x3F	; 63
    37e6:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    37ea:	88 23       	and	r24, r24
    37ec:	44 f4       	brge	.+16     	; 0x37fe <LCD_VidInit+0xa8>
		__ticks = 1;
    37ee:	fe 01       	movw	r30, r28
    37f0:	e5 5a       	subi	r30, 0xA5	; 165
    37f2:	ff 4f       	sbci	r31, 0xFF	; 255
    37f4:	81 e0       	ldi	r24, 0x01	; 1
    37f6:	90 e0       	ldi	r25, 0x00	; 0
    37f8:	91 83       	std	Z+1, r25	; 0x01
    37fa:	80 83       	st	Z, r24
    37fc:	64 c0       	rjmp	.+200    	; 0x38c6 <LCD_VidInit+0x170>
	else if (__tmp > 65535)
    37fe:	fe 01       	movw	r30, r28
    3800:	e3 5a       	subi	r30, 0xA3	; 163
    3802:	ff 4f       	sbci	r31, 0xFF	; 255
    3804:	60 81       	ld	r22, Z
    3806:	71 81       	ldd	r23, Z+1	; 0x01
    3808:	82 81       	ldd	r24, Z+2	; 0x02
    380a:	93 81       	ldd	r25, Z+3	; 0x03
    380c:	20 e0       	ldi	r18, 0x00	; 0
    380e:	3f ef       	ldi	r19, 0xFF	; 255
    3810:	4f e7       	ldi	r20, 0x7F	; 127
    3812:	57 e4       	ldi	r21, 0x47	; 71
    3814:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3818:	18 16       	cp	r1, r24
    381a:	0c f0       	brlt	.+2      	; 0x381e <LCD_VidInit+0xc8>
    381c:	43 c0       	rjmp	.+134    	; 0x38a4 <LCD_VidInit+0x14e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    381e:	fe 01       	movw	r30, r28
    3820:	ef 59       	subi	r30, 0x9F	; 159
    3822:	ff 4f       	sbci	r31, 0xFF	; 255
    3824:	60 81       	ld	r22, Z
    3826:	71 81       	ldd	r23, Z+1	; 0x01
    3828:	82 81       	ldd	r24, Z+2	; 0x02
    382a:	93 81       	ldd	r25, Z+3	; 0x03
    382c:	20 e0       	ldi	r18, 0x00	; 0
    382e:	30 e0       	ldi	r19, 0x00	; 0
    3830:	40 e2       	ldi	r20, 0x20	; 32
    3832:	51 e4       	ldi	r21, 0x41	; 65
    3834:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3838:	dc 01       	movw	r26, r24
    383a:	cb 01       	movw	r24, r22
    383c:	8e 01       	movw	r16, r28
    383e:	05 5a       	subi	r16, 0xA5	; 165
    3840:	1f 4f       	sbci	r17, 0xFF	; 255
    3842:	bc 01       	movw	r22, r24
    3844:	cd 01       	movw	r24, r26
    3846:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    384a:	dc 01       	movw	r26, r24
    384c:	cb 01       	movw	r24, r22
    384e:	f8 01       	movw	r30, r16
    3850:	91 83       	std	Z+1, r25	; 0x01
    3852:	80 83       	st	Z, r24
    3854:	1f c0       	rjmp	.+62     	; 0x3894 <LCD_VidInit+0x13e>
    3856:	fe 01       	movw	r30, r28
    3858:	e7 5a       	subi	r30, 0xA7	; 167
    385a:	ff 4f       	sbci	r31, 0xFF	; 255
    385c:	88 ec       	ldi	r24, 0xC8	; 200
    385e:	90 e0       	ldi	r25, 0x00	; 0
    3860:	91 83       	std	Z+1, r25	; 0x01
    3862:	80 83       	st	Z, r24
    3864:	fe 01       	movw	r30, r28
    3866:	e7 5a       	subi	r30, 0xA7	; 167
    3868:	ff 4f       	sbci	r31, 0xFF	; 255
    386a:	80 81       	ld	r24, Z
    386c:	91 81       	ldd	r25, Z+1	; 0x01
    386e:	01 97       	sbiw	r24, 0x01	; 1
    3870:	f1 f7       	brne	.-4      	; 0x386e <LCD_VidInit+0x118>
    3872:	fe 01       	movw	r30, r28
    3874:	e7 5a       	subi	r30, 0xA7	; 167
    3876:	ff 4f       	sbci	r31, 0xFF	; 255
    3878:	91 83       	std	Z+1, r25	; 0x01
    387a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    387c:	de 01       	movw	r26, r28
    387e:	a5 5a       	subi	r26, 0xA5	; 165
    3880:	bf 4f       	sbci	r27, 0xFF	; 255
    3882:	fe 01       	movw	r30, r28
    3884:	e5 5a       	subi	r30, 0xA5	; 165
    3886:	ff 4f       	sbci	r31, 0xFF	; 255
    3888:	80 81       	ld	r24, Z
    388a:	91 81       	ldd	r25, Z+1	; 0x01
    388c:	01 97       	sbiw	r24, 0x01	; 1
    388e:	11 96       	adiw	r26, 0x01	; 1
    3890:	9c 93       	st	X, r25
    3892:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3894:	fe 01       	movw	r30, r28
    3896:	e5 5a       	subi	r30, 0xA5	; 165
    3898:	ff 4f       	sbci	r31, 0xFF	; 255
    389a:	80 81       	ld	r24, Z
    389c:	91 81       	ldd	r25, Z+1	; 0x01
    389e:	00 97       	sbiw	r24, 0x00	; 0
    38a0:	d1 f6       	brne	.-76     	; 0x3856 <LCD_VidInit+0x100>
    38a2:	27 c0       	rjmp	.+78     	; 0x38f2 <LCD_VidInit+0x19c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    38a4:	8e 01       	movw	r16, r28
    38a6:	05 5a       	subi	r16, 0xA5	; 165
    38a8:	1f 4f       	sbci	r17, 0xFF	; 255
    38aa:	fe 01       	movw	r30, r28
    38ac:	e3 5a       	subi	r30, 0xA3	; 163
    38ae:	ff 4f       	sbci	r31, 0xFF	; 255
    38b0:	60 81       	ld	r22, Z
    38b2:	71 81       	ldd	r23, Z+1	; 0x01
    38b4:	82 81       	ldd	r24, Z+2	; 0x02
    38b6:	93 81       	ldd	r25, Z+3	; 0x03
    38b8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    38bc:	dc 01       	movw	r26, r24
    38be:	cb 01       	movw	r24, r22
    38c0:	f8 01       	movw	r30, r16
    38c2:	91 83       	std	Z+1, r25	; 0x01
    38c4:	80 83       	st	Z, r24
    38c6:	de 01       	movw	r26, r28
    38c8:	a9 5a       	subi	r26, 0xA9	; 169
    38ca:	bf 4f       	sbci	r27, 0xFF	; 255
    38cc:	fe 01       	movw	r30, r28
    38ce:	e5 5a       	subi	r30, 0xA5	; 165
    38d0:	ff 4f       	sbci	r31, 0xFF	; 255
    38d2:	80 81       	ld	r24, Z
    38d4:	91 81       	ldd	r25, Z+1	; 0x01
    38d6:	8d 93       	st	X+, r24
    38d8:	9c 93       	st	X, r25
    38da:	fe 01       	movw	r30, r28
    38dc:	e9 5a       	subi	r30, 0xA9	; 169
    38de:	ff 4f       	sbci	r31, 0xFF	; 255
    38e0:	80 81       	ld	r24, Z
    38e2:	91 81       	ldd	r25, Z+1	; 0x01
    38e4:	01 97       	sbiw	r24, 0x01	; 1
    38e6:	f1 f7       	brne	.-4      	; 0x38e4 <LCD_VidInit+0x18e>
    38e8:	fe 01       	movw	r30, r28
    38ea:	e9 5a       	subi	r30, 0xA9	; 169
    38ec:	ff 4f       	sbci	r31, 0xFF	; 255
    38ee:	91 83       	std	Z+1, r25	; 0x01
    38f0:	80 83       	st	Z, r24
/******to initialize LCD after power***********/
	_delay_ms(40);
	//send function set commend
	LCD_VidSendCommend (FUNC_SET);
    38f2:	8c e3       	ldi	r24, 0x3C	; 60
    38f4:	0e 94 a0 1a 	call	0x3540	; 0x3540 <LCD_VidSendCommend>
    38f8:	fe 01       	movw	r30, r28
    38fa:	ed 5a       	subi	r30, 0xAD	; 173
    38fc:	ff 4f       	sbci	r31, 0xFF	; 255
    38fe:	80 e0       	ldi	r24, 0x00	; 0
    3900:	90 e0       	ldi	r25, 0x00	; 0
    3902:	a0 e2       	ldi	r26, 0x20	; 32
    3904:	b2 e4       	ldi	r27, 0x42	; 66
    3906:	80 83       	st	Z, r24
    3908:	91 83       	std	Z+1, r25	; 0x01
    390a:	a2 83       	std	Z+2, r26	; 0x02
    390c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    390e:	8e 01       	movw	r16, r28
    3910:	01 5b       	subi	r16, 0xB1	; 177
    3912:	1f 4f       	sbci	r17, 0xFF	; 255
    3914:	fe 01       	movw	r30, r28
    3916:	ed 5a       	subi	r30, 0xAD	; 173
    3918:	ff 4f       	sbci	r31, 0xFF	; 255
    391a:	60 81       	ld	r22, Z
    391c:	71 81       	ldd	r23, Z+1	; 0x01
    391e:	82 81       	ldd	r24, Z+2	; 0x02
    3920:	93 81       	ldd	r25, Z+3	; 0x03
    3922:	2b ea       	ldi	r18, 0xAB	; 171
    3924:	3a ea       	ldi	r19, 0xAA	; 170
    3926:	4a e2       	ldi	r20, 0x2A	; 42
    3928:	50 e4       	ldi	r21, 0x40	; 64
    392a:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    392e:	dc 01       	movw	r26, r24
    3930:	cb 01       	movw	r24, r22
    3932:	f8 01       	movw	r30, r16
    3934:	80 83       	st	Z, r24
    3936:	91 83       	std	Z+1, r25	; 0x01
    3938:	a2 83       	std	Z+2, r26	; 0x02
    393a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    393c:	fe 01       	movw	r30, r28
    393e:	e1 5b       	subi	r30, 0xB1	; 177
    3940:	ff 4f       	sbci	r31, 0xFF	; 255
    3942:	60 81       	ld	r22, Z
    3944:	71 81       	ldd	r23, Z+1	; 0x01
    3946:	82 81       	ldd	r24, Z+2	; 0x02
    3948:	93 81       	ldd	r25, Z+3	; 0x03
    394a:	20 e0       	ldi	r18, 0x00	; 0
    394c:	30 e0       	ldi	r19, 0x00	; 0
    394e:	40 e8       	ldi	r20, 0x80	; 128
    3950:	5f e3       	ldi	r21, 0x3F	; 63
    3952:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    3956:	88 23       	and	r24, r24
    3958:	34 f4       	brge	.+12     	; 0x3966 <LCD_VidInit+0x210>
		__ticks = 1;
    395a:	fe 01       	movw	r30, r28
    395c:	e2 5b       	subi	r30, 0xB2	; 178
    395e:	ff 4f       	sbci	r31, 0xFF	; 255
    3960:	81 e0       	ldi	r24, 0x01	; 1
    3962:	80 83       	st	Z, r24
    3964:	e0 c0       	rjmp	.+448    	; 0x3b26 <LCD_VidInit+0x3d0>
	else if (__tmp > 255)
    3966:	fe 01       	movw	r30, r28
    3968:	e1 5b       	subi	r30, 0xB1	; 177
    396a:	ff 4f       	sbci	r31, 0xFF	; 255
    396c:	60 81       	ld	r22, Z
    396e:	71 81       	ldd	r23, Z+1	; 0x01
    3970:	82 81       	ldd	r24, Z+2	; 0x02
    3972:	93 81       	ldd	r25, Z+3	; 0x03
    3974:	20 e0       	ldi	r18, 0x00	; 0
    3976:	30 e0       	ldi	r19, 0x00	; 0
    3978:	4f e7       	ldi	r20, 0x7F	; 127
    397a:	53 e4       	ldi	r21, 0x43	; 67
    397c:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3980:	18 16       	cp	r1, r24
    3982:	0c f0       	brlt	.+2      	; 0x3986 <LCD_VidInit+0x230>
    3984:	c0 c0       	rjmp	.+384    	; 0x3b06 <LCD_VidInit+0x3b0>
	{
		_delay_ms(__us / 1000.0);
    3986:	fe 01       	movw	r30, r28
    3988:	ed 5a       	subi	r30, 0xAD	; 173
    398a:	ff 4f       	sbci	r31, 0xFF	; 255
    398c:	60 81       	ld	r22, Z
    398e:	71 81       	ldd	r23, Z+1	; 0x01
    3990:	82 81       	ldd	r24, Z+2	; 0x02
    3992:	93 81       	ldd	r25, Z+3	; 0x03
    3994:	20 e0       	ldi	r18, 0x00	; 0
    3996:	30 e0       	ldi	r19, 0x00	; 0
    3998:	4a e7       	ldi	r20, 0x7A	; 122
    399a:	54 e4       	ldi	r21, 0x44	; 68
    399c:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    39a0:	dc 01       	movw	r26, r24
    39a2:	cb 01       	movw	r24, r22
    39a4:	fe 01       	movw	r30, r28
    39a6:	e6 5b       	subi	r30, 0xB6	; 182
    39a8:	ff 4f       	sbci	r31, 0xFF	; 255
    39aa:	80 83       	st	Z, r24
    39ac:	91 83       	std	Z+1, r25	; 0x01
    39ae:	a2 83       	std	Z+2, r26	; 0x02
    39b0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39b2:	8e 01       	movw	r16, r28
    39b4:	0a 5b       	subi	r16, 0xBA	; 186
    39b6:	1f 4f       	sbci	r17, 0xFF	; 255
    39b8:	fe 01       	movw	r30, r28
    39ba:	e6 5b       	subi	r30, 0xB6	; 182
    39bc:	ff 4f       	sbci	r31, 0xFF	; 255
    39be:	60 81       	ld	r22, Z
    39c0:	71 81       	ldd	r23, Z+1	; 0x01
    39c2:	82 81       	ldd	r24, Z+2	; 0x02
    39c4:	93 81       	ldd	r25, Z+3	; 0x03
    39c6:	20 e0       	ldi	r18, 0x00	; 0
    39c8:	30 e0       	ldi	r19, 0x00	; 0
    39ca:	4a ef       	ldi	r20, 0xFA	; 250
    39cc:	54 e4       	ldi	r21, 0x44	; 68
    39ce:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    39d2:	dc 01       	movw	r26, r24
    39d4:	cb 01       	movw	r24, r22
    39d6:	f8 01       	movw	r30, r16
    39d8:	80 83       	st	Z, r24
    39da:	91 83       	std	Z+1, r25	; 0x01
    39dc:	a2 83       	std	Z+2, r26	; 0x02
    39de:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    39e0:	fe 01       	movw	r30, r28
    39e2:	ea 5b       	subi	r30, 0xBA	; 186
    39e4:	ff 4f       	sbci	r31, 0xFF	; 255
    39e6:	60 81       	ld	r22, Z
    39e8:	71 81       	ldd	r23, Z+1	; 0x01
    39ea:	82 81       	ldd	r24, Z+2	; 0x02
    39ec:	93 81       	ldd	r25, Z+3	; 0x03
    39ee:	20 e0       	ldi	r18, 0x00	; 0
    39f0:	30 e0       	ldi	r19, 0x00	; 0
    39f2:	40 e8       	ldi	r20, 0x80	; 128
    39f4:	5f e3       	ldi	r21, 0x3F	; 63
    39f6:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    39fa:	88 23       	and	r24, r24
    39fc:	44 f4       	brge	.+16     	; 0x3a0e <LCD_VidInit+0x2b8>
		__ticks = 1;
    39fe:	fe 01       	movw	r30, r28
    3a00:	ec 5b       	subi	r30, 0xBC	; 188
    3a02:	ff 4f       	sbci	r31, 0xFF	; 255
    3a04:	81 e0       	ldi	r24, 0x01	; 1
    3a06:	90 e0       	ldi	r25, 0x00	; 0
    3a08:	91 83       	std	Z+1, r25	; 0x01
    3a0a:	80 83       	st	Z, r24
    3a0c:	64 c0       	rjmp	.+200    	; 0x3ad6 <LCD_VidInit+0x380>
	else if (__tmp > 65535)
    3a0e:	fe 01       	movw	r30, r28
    3a10:	ea 5b       	subi	r30, 0xBA	; 186
    3a12:	ff 4f       	sbci	r31, 0xFF	; 255
    3a14:	60 81       	ld	r22, Z
    3a16:	71 81       	ldd	r23, Z+1	; 0x01
    3a18:	82 81       	ldd	r24, Z+2	; 0x02
    3a1a:	93 81       	ldd	r25, Z+3	; 0x03
    3a1c:	20 e0       	ldi	r18, 0x00	; 0
    3a1e:	3f ef       	ldi	r19, 0xFF	; 255
    3a20:	4f e7       	ldi	r20, 0x7F	; 127
    3a22:	57 e4       	ldi	r21, 0x47	; 71
    3a24:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3a28:	18 16       	cp	r1, r24
    3a2a:	0c f0       	brlt	.+2      	; 0x3a2e <LCD_VidInit+0x2d8>
    3a2c:	43 c0       	rjmp	.+134    	; 0x3ab4 <LCD_VidInit+0x35e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a2e:	fe 01       	movw	r30, r28
    3a30:	e6 5b       	subi	r30, 0xB6	; 182
    3a32:	ff 4f       	sbci	r31, 0xFF	; 255
    3a34:	60 81       	ld	r22, Z
    3a36:	71 81       	ldd	r23, Z+1	; 0x01
    3a38:	82 81       	ldd	r24, Z+2	; 0x02
    3a3a:	93 81       	ldd	r25, Z+3	; 0x03
    3a3c:	20 e0       	ldi	r18, 0x00	; 0
    3a3e:	30 e0       	ldi	r19, 0x00	; 0
    3a40:	40 e2       	ldi	r20, 0x20	; 32
    3a42:	51 e4       	ldi	r21, 0x41	; 65
    3a44:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3a48:	dc 01       	movw	r26, r24
    3a4a:	cb 01       	movw	r24, r22
    3a4c:	8e 01       	movw	r16, r28
    3a4e:	0c 5b       	subi	r16, 0xBC	; 188
    3a50:	1f 4f       	sbci	r17, 0xFF	; 255
    3a52:	bc 01       	movw	r22, r24
    3a54:	cd 01       	movw	r24, r26
    3a56:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3a5a:	dc 01       	movw	r26, r24
    3a5c:	cb 01       	movw	r24, r22
    3a5e:	f8 01       	movw	r30, r16
    3a60:	91 83       	std	Z+1, r25	; 0x01
    3a62:	80 83       	st	Z, r24
    3a64:	1f c0       	rjmp	.+62     	; 0x3aa4 <LCD_VidInit+0x34e>
    3a66:	fe 01       	movw	r30, r28
    3a68:	ee 5b       	subi	r30, 0xBE	; 190
    3a6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3a6c:	88 ec       	ldi	r24, 0xC8	; 200
    3a6e:	90 e0       	ldi	r25, 0x00	; 0
    3a70:	91 83       	std	Z+1, r25	; 0x01
    3a72:	80 83       	st	Z, r24
    3a74:	fe 01       	movw	r30, r28
    3a76:	ee 5b       	subi	r30, 0xBE	; 190
    3a78:	ff 4f       	sbci	r31, 0xFF	; 255
    3a7a:	80 81       	ld	r24, Z
    3a7c:	91 81       	ldd	r25, Z+1	; 0x01
    3a7e:	01 97       	sbiw	r24, 0x01	; 1
    3a80:	f1 f7       	brne	.-4      	; 0x3a7e <LCD_VidInit+0x328>
    3a82:	fe 01       	movw	r30, r28
    3a84:	ee 5b       	subi	r30, 0xBE	; 190
    3a86:	ff 4f       	sbci	r31, 0xFF	; 255
    3a88:	91 83       	std	Z+1, r25	; 0x01
    3a8a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3a8c:	de 01       	movw	r26, r28
    3a8e:	ac 5b       	subi	r26, 0xBC	; 188
    3a90:	bf 4f       	sbci	r27, 0xFF	; 255
    3a92:	fe 01       	movw	r30, r28
    3a94:	ec 5b       	subi	r30, 0xBC	; 188
    3a96:	ff 4f       	sbci	r31, 0xFF	; 255
    3a98:	80 81       	ld	r24, Z
    3a9a:	91 81       	ldd	r25, Z+1	; 0x01
    3a9c:	01 97       	sbiw	r24, 0x01	; 1
    3a9e:	11 96       	adiw	r26, 0x01	; 1
    3aa0:	9c 93       	st	X, r25
    3aa2:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3aa4:	fe 01       	movw	r30, r28
    3aa6:	ec 5b       	subi	r30, 0xBC	; 188
    3aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    3aaa:	80 81       	ld	r24, Z
    3aac:	91 81       	ldd	r25, Z+1	; 0x01
    3aae:	00 97       	sbiw	r24, 0x00	; 0
    3ab0:	d1 f6       	brne	.-76     	; 0x3a66 <LCD_VidInit+0x310>
    3ab2:	42 c0       	rjmp	.+132    	; 0x3b38 <LCD_VidInit+0x3e2>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3ab4:	8e 01       	movw	r16, r28
    3ab6:	0c 5b       	subi	r16, 0xBC	; 188
    3ab8:	1f 4f       	sbci	r17, 0xFF	; 255
    3aba:	fe 01       	movw	r30, r28
    3abc:	ea 5b       	subi	r30, 0xBA	; 186
    3abe:	ff 4f       	sbci	r31, 0xFF	; 255
    3ac0:	60 81       	ld	r22, Z
    3ac2:	71 81       	ldd	r23, Z+1	; 0x01
    3ac4:	82 81       	ldd	r24, Z+2	; 0x02
    3ac6:	93 81       	ldd	r25, Z+3	; 0x03
    3ac8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3acc:	dc 01       	movw	r26, r24
    3ace:	cb 01       	movw	r24, r22
    3ad0:	f8 01       	movw	r30, r16
    3ad2:	91 83       	std	Z+1, r25	; 0x01
    3ad4:	80 83       	st	Z, r24
    3ad6:	de 01       	movw	r26, r28
    3ad8:	a0 5c       	subi	r26, 0xC0	; 192
    3ada:	bf 4f       	sbci	r27, 0xFF	; 255
    3adc:	fe 01       	movw	r30, r28
    3ade:	ec 5b       	subi	r30, 0xBC	; 188
    3ae0:	ff 4f       	sbci	r31, 0xFF	; 255
    3ae2:	80 81       	ld	r24, Z
    3ae4:	91 81       	ldd	r25, Z+1	; 0x01
    3ae6:	11 96       	adiw	r26, 0x01	; 1
    3ae8:	9c 93       	st	X, r25
    3aea:	8e 93       	st	-X, r24
    3aec:	fe 01       	movw	r30, r28
    3aee:	e0 5c       	subi	r30, 0xC0	; 192
    3af0:	ff 4f       	sbci	r31, 0xFF	; 255
    3af2:	80 81       	ld	r24, Z
    3af4:	91 81       	ldd	r25, Z+1	; 0x01
    3af6:	01 97       	sbiw	r24, 0x01	; 1
    3af8:	f1 f7       	brne	.-4      	; 0x3af6 <LCD_VidInit+0x3a0>
    3afa:	fe 01       	movw	r30, r28
    3afc:	e0 5c       	subi	r30, 0xC0	; 192
    3afe:	ff 4f       	sbci	r31, 0xFF	; 255
    3b00:	91 83       	std	Z+1, r25	; 0x01
    3b02:	80 83       	st	Z, r24
    3b04:	19 c0       	rjmp	.+50     	; 0x3b38 <LCD_VidInit+0x3e2>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3b06:	8e 01       	movw	r16, r28
    3b08:	02 5b       	subi	r16, 0xB2	; 178
    3b0a:	1f 4f       	sbci	r17, 0xFF	; 255
    3b0c:	fe 01       	movw	r30, r28
    3b0e:	e1 5b       	subi	r30, 0xB1	; 177
    3b10:	ff 4f       	sbci	r31, 0xFF	; 255
    3b12:	60 81       	ld	r22, Z
    3b14:	71 81       	ldd	r23, Z+1	; 0x01
    3b16:	82 81       	ldd	r24, Z+2	; 0x02
    3b18:	93 81       	ldd	r25, Z+3	; 0x03
    3b1a:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3b1e:	dc 01       	movw	r26, r24
    3b20:	cb 01       	movw	r24, r22
    3b22:	f8 01       	movw	r30, r16
    3b24:	80 83       	st	Z, r24
    3b26:	fe 01       	movw	r30, r28
    3b28:	e2 5b       	subi	r30, 0xB2	; 178
    3b2a:	ff 4f       	sbci	r31, 0xFF	; 255
    3b2c:	80 81       	ld	r24, Z
    3b2e:	8f af       	std	Y+63, r24	; 0x3f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3b30:	8f ad       	ldd	r24, Y+63	; 0x3f
    3b32:	8a 95       	dec	r24
    3b34:	f1 f7       	brne	.-4      	; 0x3b32 <LCD_VidInit+0x3dc>
    3b36:	8f af       	std	Y+63, r24	; 0x3f
	// Delay for more than 39 us
	_delay_us(40);
	// Send Display_ON & Cursor_OFF Command
	LCD_VidSendCommend(DISPLAY_ON_CURSOR_OFF);
    3b38:	8c e0       	ldi	r24, 0x0C	; 12
    3b3a:	0e 94 a0 1a 	call	0x3540	; 0x3540 <LCD_VidSendCommend>
    3b3e:	80 e0       	ldi	r24, 0x00	; 0
    3b40:	90 e0       	ldi	r25, 0x00	; 0
    3b42:	a0 e2       	ldi	r26, 0x20	; 32
    3b44:	b2 e4       	ldi	r27, 0x42	; 66
    3b46:	8b af       	std	Y+59, r24	; 0x3b
    3b48:	9c af       	std	Y+60, r25	; 0x3c
    3b4a:	ad af       	std	Y+61, r26	; 0x3d
    3b4c:	be af       	std	Y+62, r27	; 0x3e
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3b4e:	6b ad       	ldd	r22, Y+59	; 0x3b
    3b50:	7c ad       	ldd	r23, Y+60	; 0x3c
    3b52:	8d ad       	ldd	r24, Y+61	; 0x3d
    3b54:	9e ad       	ldd	r25, Y+62	; 0x3e
    3b56:	2b ea       	ldi	r18, 0xAB	; 171
    3b58:	3a ea       	ldi	r19, 0xAA	; 170
    3b5a:	4a e2       	ldi	r20, 0x2A	; 42
    3b5c:	50 e4       	ldi	r21, 0x40	; 64
    3b5e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3b62:	dc 01       	movw	r26, r24
    3b64:	cb 01       	movw	r24, r22
    3b66:	8f ab       	std	Y+55, r24	; 0x37
    3b68:	98 af       	std	Y+56, r25	; 0x38
    3b6a:	a9 af       	std	Y+57, r26	; 0x39
    3b6c:	ba af       	std	Y+58, r27	; 0x3a
	if (__tmp < 1.0)
    3b6e:	6f a9       	ldd	r22, Y+55	; 0x37
    3b70:	78 ad       	ldd	r23, Y+56	; 0x38
    3b72:	89 ad       	ldd	r24, Y+57	; 0x39
    3b74:	9a ad       	ldd	r25, Y+58	; 0x3a
    3b76:	20 e0       	ldi	r18, 0x00	; 0
    3b78:	30 e0       	ldi	r19, 0x00	; 0
    3b7a:	40 e8       	ldi	r20, 0x80	; 128
    3b7c:	5f e3       	ldi	r21, 0x3F	; 63
    3b7e:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    3b82:	88 23       	and	r24, r24
    3b84:	1c f4       	brge	.+6      	; 0x3b8c <LCD_VidInit+0x436>
		__ticks = 1;
    3b86:	81 e0       	ldi	r24, 0x01	; 1
    3b88:	8e ab       	std	Y+54, r24	; 0x36
    3b8a:	91 c0       	rjmp	.+290    	; 0x3cae <LCD_VidInit+0x558>
	else if (__tmp > 255)
    3b8c:	6f a9       	ldd	r22, Y+55	; 0x37
    3b8e:	78 ad       	ldd	r23, Y+56	; 0x38
    3b90:	89 ad       	ldd	r24, Y+57	; 0x39
    3b92:	9a ad       	ldd	r25, Y+58	; 0x3a
    3b94:	20 e0       	ldi	r18, 0x00	; 0
    3b96:	30 e0       	ldi	r19, 0x00	; 0
    3b98:	4f e7       	ldi	r20, 0x7F	; 127
    3b9a:	53 e4       	ldi	r21, 0x43	; 67
    3b9c:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3ba0:	18 16       	cp	r1, r24
    3ba2:	0c f0       	brlt	.+2      	; 0x3ba6 <LCD_VidInit+0x450>
    3ba4:	7b c0       	rjmp	.+246    	; 0x3c9c <LCD_VidInit+0x546>
	{
		_delay_ms(__us / 1000.0);
    3ba6:	6b ad       	ldd	r22, Y+59	; 0x3b
    3ba8:	7c ad       	ldd	r23, Y+60	; 0x3c
    3baa:	8d ad       	ldd	r24, Y+61	; 0x3d
    3bac:	9e ad       	ldd	r25, Y+62	; 0x3e
    3bae:	20 e0       	ldi	r18, 0x00	; 0
    3bb0:	30 e0       	ldi	r19, 0x00	; 0
    3bb2:	4a e7       	ldi	r20, 0x7A	; 122
    3bb4:	54 e4       	ldi	r21, 0x44	; 68
    3bb6:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    3bba:	dc 01       	movw	r26, r24
    3bbc:	cb 01       	movw	r24, r22
    3bbe:	8a ab       	std	Y+50, r24	; 0x32
    3bc0:	9b ab       	std	Y+51, r25	; 0x33
    3bc2:	ac ab       	std	Y+52, r26	; 0x34
    3bc4:	bd ab       	std	Y+53, r27	; 0x35
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3bc6:	6a a9       	ldd	r22, Y+50	; 0x32
    3bc8:	7b a9       	ldd	r23, Y+51	; 0x33
    3bca:	8c a9       	ldd	r24, Y+52	; 0x34
    3bcc:	9d a9       	ldd	r25, Y+53	; 0x35
    3bce:	20 e0       	ldi	r18, 0x00	; 0
    3bd0:	30 e0       	ldi	r19, 0x00	; 0
    3bd2:	4a ef       	ldi	r20, 0xFA	; 250
    3bd4:	54 e4       	ldi	r21, 0x44	; 68
    3bd6:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3bda:	dc 01       	movw	r26, r24
    3bdc:	cb 01       	movw	r24, r22
    3bde:	8e a7       	std	Y+46, r24	; 0x2e
    3be0:	9f a7       	std	Y+47, r25	; 0x2f
    3be2:	a8 ab       	std	Y+48, r26	; 0x30
    3be4:	b9 ab       	std	Y+49, r27	; 0x31
	if (__tmp < 1.0)
    3be6:	6e a5       	ldd	r22, Y+46	; 0x2e
    3be8:	7f a5       	ldd	r23, Y+47	; 0x2f
    3bea:	88 a9       	ldd	r24, Y+48	; 0x30
    3bec:	99 a9       	ldd	r25, Y+49	; 0x31
    3bee:	20 e0       	ldi	r18, 0x00	; 0
    3bf0:	30 e0       	ldi	r19, 0x00	; 0
    3bf2:	40 e8       	ldi	r20, 0x80	; 128
    3bf4:	5f e3       	ldi	r21, 0x3F	; 63
    3bf6:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    3bfa:	88 23       	and	r24, r24
    3bfc:	2c f4       	brge	.+10     	; 0x3c08 <LCD_VidInit+0x4b2>
		__ticks = 1;
    3bfe:	81 e0       	ldi	r24, 0x01	; 1
    3c00:	90 e0       	ldi	r25, 0x00	; 0
    3c02:	9d a7       	std	Y+45, r25	; 0x2d
    3c04:	8c a7       	std	Y+44, r24	; 0x2c
    3c06:	3f c0       	rjmp	.+126    	; 0x3c86 <LCD_VidInit+0x530>
	else if (__tmp > 65535)
    3c08:	6e a5       	ldd	r22, Y+46	; 0x2e
    3c0a:	7f a5       	ldd	r23, Y+47	; 0x2f
    3c0c:	88 a9       	ldd	r24, Y+48	; 0x30
    3c0e:	99 a9       	ldd	r25, Y+49	; 0x31
    3c10:	20 e0       	ldi	r18, 0x00	; 0
    3c12:	3f ef       	ldi	r19, 0xFF	; 255
    3c14:	4f e7       	ldi	r20, 0x7F	; 127
    3c16:	57 e4       	ldi	r21, 0x47	; 71
    3c18:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3c1c:	18 16       	cp	r1, r24
    3c1e:	4c f5       	brge	.+82     	; 0x3c72 <LCD_VidInit+0x51c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c20:	6a a9       	ldd	r22, Y+50	; 0x32
    3c22:	7b a9       	ldd	r23, Y+51	; 0x33
    3c24:	8c a9       	ldd	r24, Y+52	; 0x34
    3c26:	9d a9       	ldd	r25, Y+53	; 0x35
    3c28:	20 e0       	ldi	r18, 0x00	; 0
    3c2a:	30 e0       	ldi	r19, 0x00	; 0
    3c2c:	40 e2       	ldi	r20, 0x20	; 32
    3c2e:	51 e4       	ldi	r21, 0x41	; 65
    3c30:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3c34:	dc 01       	movw	r26, r24
    3c36:	cb 01       	movw	r24, r22
    3c38:	bc 01       	movw	r22, r24
    3c3a:	cd 01       	movw	r24, r26
    3c3c:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3c40:	dc 01       	movw	r26, r24
    3c42:	cb 01       	movw	r24, r22
    3c44:	9d a7       	std	Y+45, r25	; 0x2d
    3c46:	8c a7       	std	Y+44, r24	; 0x2c
    3c48:	0f c0       	rjmp	.+30     	; 0x3c68 <LCD_VidInit+0x512>
    3c4a:	88 ec       	ldi	r24, 0xC8	; 200
    3c4c:	90 e0       	ldi	r25, 0x00	; 0
    3c4e:	9b a7       	std	Y+43, r25	; 0x2b
    3c50:	8a a7       	std	Y+42, r24	; 0x2a
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3c52:	8a a5       	ldd	r24, Y+42	; 0x2a
    3c54:	9b a5       	ldd	r25, Y+43	; 0x2b
    3c56:	01 97       	sbiw	r24, 0x01	; 1
    3c58:	f1 f7       	brne	.-4      	; 0x3c56 <LCD_VidInit+0x500>
    3c5a:	9b a7       	std	Y+43, r25	; 0x2b
    3c5c:	8a a7       	std	Y+42, r24	; 0x2a
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3c5e:	8c a5       	ldd	r24, Y+44	; 0x2c
    3c60:	9d a5       	ldd	r25, Y+45	; 0x2d
    3c62:	01 97       	sbiw	r24, 0x01	; 1
    3c64:	9d a7       	std	Y+45, r25	; 0x2d
    3c66:	8c a7       	std	Y+44, r24	; 0x2c
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3c68:	8c a5       	ldd	r24, Y+44	; 0x2c
    3c6a:	9d a5       	ldd	r25, Y+45	; 0x2d
    3c6c:	00 97       	sbiw	r24, 0x00	; 0
    3c6e:	69 f7       	brne	.-38     	; 0x3c4a <LCD_VidInit+0x4f4>
    3c70:	24 c0       	rjmp	.+72     	; 0x3cba <LCD_VidInit+0x564>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3c72:	6e a5       	ldd	r22, Y+46	; 0x2e
    3c74:	7f a5       	ldd	r23, Y+47	; 0x2f
    3c76:	88 a9       	ldd	r24, Y+48	; 0x30
    3c78:	99 a9       	ldd	r25, Y+49	; 0x31
    3c7a:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3c7e:	dc 01       	movw	r26, r24
    3c80:	cb 01       	movw	r24, r22
    3c82:	9d a7       	std	Y+45, r25	; 0x2d
    3c84:	8c a7       	std	Y+44, r24	; 0x2c
    3c86:	8c a5       	ldd	r24, Y+44	; 0x2c
    3c88:	9d a5       	ldd	r25, Y+45	; 0x2d
    3c8a:	99 a7       	std	Y+41, r25	; 0x29
    3c8c:	88 a7       	std	Y+40, r24	; 0x28
    3c8e:	88 a5       	ldd	r24, Y+40	; 0x28
    3c90:	99 a5       	ldd	r25, Y+41	; 0x29
    3c92:	01 97       	sbiw	r24, 0x01	; 1
    3c94:	f1 f7       	brne	.-4      	; 0x3c92 <LCD_VidInit+0x53c>
    3c96:	99 a7       	std	Y+41, r25	; 0x29
    3c98:	88 a7       	std	Y+40, r24	; 0x28
    3c9a:	0f c0       	rjmp	.+30     	; 0x3cba <LCD_VidInit+0x564>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3c9c:	6f a9       	ldd	r22, Y+55	; 0x37
    3c9e:	78 ad       	ldd	r23, Y+56	; 0x38
    3ca0:	89 ad       	ldd	r24, Y+57	; 0x39
    3ca2:	9a ad       	ldd	r25, Y+58	; 0x3a
    3ca4:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3ca8:	dc 01       	movw	r26, r24
    3caa:	cb 01       	movw	r24, r22
    3cac:	8e ab       	std	Y+54, r24	; 0x36
    3cae:	8e a9       	ldd	r24, Y+54	; 0x36
    3cb0:	8f a3       	std	Y+39, r24	; 0x27
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3cb2:	8f a1       	ldd	r24, Y+39	; 0x27
    3cb4:	8a 95       	dec	r24
    3cb6:	f1 f7       	brne	.-4      	; 0x3cb4 <LCD_VidInit+0x55e>
    3cb8:	8f a3       	std	Y+39, r24	; 0x27
	// Delay for more than 39 us
	_delay_us(40);
	// Send Entry Mode Set Command
	LCD_VidSendCommend(ENTERY_MODE);
    3cba:	86 e0       	ldi	r24, 0x06	; 6
    3cbc:	0e 94 a0 1a 	call	0x3540	; 0x3540 <LCD_VidSendCommend>
    3cc0:	80 e0       	ldi	r24, 0x00	; 0
    3cc2:	90 e0       	ldi	r25, 0x00	; 0
    3cc4:	a0 e2       	ldi	r26, 0x20	; 32
    3cc6:	b2 e4       	ldi	r27, 0x42	; 66
    3cc8:	8b a3       	std	Y+35, r24	; 0x23
    3cca:	9c a3       	std	Y+36, r25	; 0x24
    3ccc:	ad a3       	std	Y+37, r26	; 0x25
    3cce:	be a3       	std	Y+38, r27	; 0x26
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    3cd0:	6b a1       	ldd	r22, Y+35	; 0x23
    3cd2:	7c a1       	ldd	r23, Y+36	; 0x24
    3cd4:	8d a1       	ldd	r24, Y+37	; 0x25
    3cd6:	9e a1       	ldd	r25, Y+38	; 0x26
    3cd8:	2b ea       	ldi	r18, 0xAB	; 171
    3cda:	3a ea       	ldi	r19, 0xAA	; 170
    3cdc:	4a e2       	ldi	r20, 0x2A	; 42
    3cde:	50 e4       	ldi	r21, 0x40	; 64
    3ce0:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3ce4:	dc 01       	movw	r26, r24
    3ce6:	cb 01       	movw	r24, r22
    3ce8:	8f 8f       	std	Y+31, r24	; 0x1f
    3cea:	98 a3       	std	Y+32, r25	; 0x20
    3cec:	a9 a3       	std	Y+33, r26	; 0x21
    3cee:	ba a3       	std	Y+34, r27	; 0x22
	if (__tmp < 1.0)
    3cf0:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3cf2:	78 a1       	ldd	r23, Y+32	; 0x20
    3cf4:	89 a1       	ldd	r24, Y+33	; 0x21
    3cf6:	9a a1       	ldd	r25, Y+34	; 0x22
    3cf8:	20 e0       	ldi	r18, 0x00	; 0
    3cfa:	30 e0       	ldi	r19, 0x00	; 0
    3cfc:	40 e8       	ldi	r20, 0x80	; 128
    3cfe:	5f e3       	ldi	r21, 0x3F	; 63
    3d00:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    3d04:	88 23       	and	r24, r24
    3d06:	1c f4       	brge	.+6      	; 0x3d0e <LCD_VidInit+0x5b8>
		__ticks = 1;
    3d08:	81 e0       	ldi	r24, 0x01	; 1
    3d0a:	8e 8f       	std	Y+30, r24	; 0x1e
    3d0c:	91 c0       	rjmp	.+290    	; 0x3e30 <LCD_VidInit+0x6da>
	else if (__tmp > 255)
    3d0e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3d10:	78 a1       	ldd	r23, Y+32	; 0x20
    3d12:	89 a1       	ldd	r24, Y+33	; 0x21
    3d14:	9a a1       	ldd	r25, Y+34	; 0x22
    3d16:	20 e0       	ldi	r18, 0x00	; 0
    3d18:	30 e0       	ldi	r19, 0x00	; 0
    3d1a:	4f e7       	ldi	r20, 0x7F	; 127
    3d1c:	53 e4       	ldi	r21, 0x43	; 67
    3d1e:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3d22:	18 16       	cp	r1, r24
    3d24:	0c f0       	brlt	.+2      	; 0x3d28 <LCD_VidInit+0x5d2>
    3d26:	7b c0       	rjmp	.+246    	; 0x3e1e <LCD_VidInit+0x6c8>
	{
		_delay_ms(__us / 1000.0);
    3d28:	6b a1       	ldd	r22, Y+35	; 0x23
    3d2a:	7c a1       	ldd	r23, Y+36	; 0x24
    3d2c:	8d a1       	ldd	r24, Y+37	; 0x25
    3d2e:	9e a1       	ldd	r25, Y+38	; 0x26
    3d30:	20 e0       	ldi	r18, 0x00	; 0
    3d32:	30 e0       	ldi	r19, 0x00	; 0
    3d34:	4a e7       	ldi	r20, 0x7A	; 122
    3d36:	54 e4       	ldi	r21, 0x44	; 68
    3d38:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    3d3c:	dc 01       	movw	r26, r24
    3d3e:	cb 01       	movw	r24, r22
    3d40:	8a 8f       	std	Y+26, r24	; 0x1a
    3d42:	9b 8f       	std	Y+27, r25	; 0x1b
    3d44:	ac 8f       	std	Y+28, r26	; 0x1c
    3d46:	bd 8f       	std	Y+29, r27	; 0x1d
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d48:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3d4a:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3d4c:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3d4e:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3d50:	20 e0       	ldi	r18, 0x00	; 0
    3d52:	30 e0       	ldi	r19, 0x00	; 0
    3d54:	4a ef       	ldi	r20, 0xFA	; 250
    3d56:	54 e4       	ldi	r21, 0x44	; 68
    3d58:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3d5c:	dc 01       	movw	r26, r24
    3d5e:	cb 01       	movw	r24, r22
    3d60:	8e 8b       	std	Y+22, r24	; 0x16
    3d62:	9f 8b       	std	Y+23, r25	; 0x17
    3d64:	a8 8f       	std	Y+24, r26	; 0x18
    3d66:	b9 8f       	std	Y+25, r27	; 0x19
	if (__tmp < 1.0)
    3d68:	6e 89       	ldd	r22, Y+22	; 0x16
    3d6a:	7f 89       	ldd	r23, Y+23	; 0x17
    3d6c:	88 8d       	ldd	r24, Y+24	; 0x18
    3d6e:	99 8d       	ldd	r25, Y+25	; 0x19
    3d70:	20 e0       	ldi	r18, 0x00	; 0
    3d72:	30 e0       	ldi	r19, 0x00	; 0
    3d74:	40 e8       	ldi	r20, 0x80	; 128
    3d76:	5f e3       	ldi	r21, 0x3F	; 63
    3d78:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    3d7c:	88 23       	and	r24, r24
    3d7e:	2c f4       	brge	.+10     	; 0x3d8a <LCD_VidInit+0x634>
		__ticks = 1;
    3d80:	81 e0       	ldi	r24, 0x01	; 1
    3d82:	90 e0       	ldi	r25, 0x00	; 0
    3d84:	9d 8b       	std	Y+21, r25	; 0x15
    3d86:	8c 8b       	std	Y+20, r24	; 0x14
    3d88:	3f c0       	rjmp	.+126    	; 0x3e08 <LCD_VidInit+0x6b2>
	else if (__tmp > 65535)
    3d8a:	6e 89       	ldd	r22, Y+22	; 0x16
    3d8c:	7f 89       	ldd	r23, Y+23	; 0x17
    3d8e:	88 8d       	ldd	r24, Y+24	; 0x18
    3d90:	99 8d       	ldd	r25, Y+25	; 0x19
    3d92:	20 e0       	ldi	r18, 0x00	; 0
    3d94:	3f ef       	ldi	r19, 0xFF	; 255
    3d96:	4f e7       	ldi	r20, 0x7F	; 127
    3d98:	57 e4       	ldi	r21, 0x47	; 71
    3d9a:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3d9e:	18 16       	cp	r1, r24
    3da0:	4c f5       	brge	.+82     	; 0x3df4 <LCD_VidInit+0x69e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3da2:	6a 8d       	ldd	r22, Y+26	; 0x1a
    3da4:	7b 8d       	ldd	r23, Y+27	; 0x1b
    3da6:	8c 8d       	ldd	r24, Y+28	; 0x1c
    3da8:	9d 8d       	ldd	r25, Y+29	; 0x1d
    3daa:	20 e0       	ldi	r18, 0x00	; 0
    3dac:	30 e0       	ldi	r19, 0x00	; 0
    3dae:	40 e2       	ldi	r20, 0x20	; 32
    3db0:	51 e4       	ldi	r21, 0x41	; 65
    3db2:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3db6:	dc 01       	movw	r26, r24
    3db8:	cb 01       	movw	r24, r22
    3dba:	bc 01       	movw	r22, r24
    3dbc:	cd 01       	movw	r24, r26
    3dbe:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3dc2:	dc 01       	movw	r26, r24
    3dc4:	cb 01       	movw	r24, r22
    3dc6:	9d 8b       	std	Y+21, r25	; 0x15
    3dc8:	8c 8b       	std	Y+20, r24	; 0x14
    3dca:	0f c0       	rjmp	.+30     	; 0x3dea <LCD_VidInit+0x694>
    3dcc:	88 ec       	ldi	r24, 0xC8	; 200
    3dce:	90 e0       	ldi	r25, 0x00	; 0
    3dd0:	9b 8b       	std	Y+19, r25	; 0x13
    3dd2:	8a 8b       	std	Y+18, r24	; 0x12
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3dd4:	8a 89       	ldd	r24, Y+18	; 0x12
    3dd6:	9b 89       	ldd	r25, Y+19	; 0x13
    3dd8:	01 97       	sbiw	r24, 0x01	; 1
    3dda:	f1 f7       	brne	.-4      	; 0x3dd8 <LCD_VidInit+0x682>
    3ddc:	9b 8b       	std	Y+19, r25	; 0x13
    3dde:	8a 8b       	std	Y+18, r24	; 0x12
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3de0:	8c 89       	ldd	r24, Y+20	; 0x14
    3de2:	9d 89       	ldd	r25, Y+21	; 0x15
    3de4:	01 97       	sbiw	r24, 0x01	; 1
    3de6:	9d 8b       	std	Y+21, r25	; 0x15
    3de8:	8c 8b       	std	Y+20, r24	; 0x14
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3dea:	8c 89       	ldd	r24, Y+20	; 0x14
    3dec:	9d 89       	ldd	r25, Y+21	; 0x15
    3dee:	00 97       	sbiw	r24, 0x00	; 0
    3df0:	69 f7       	brne	.-38     	; 0x3dcc <LCD_VidInit+0x676>
    3df2:	24 c0       	rjmp	.+72     	; 0x3e3c <LCD_VidInit+0x6e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3df4:	6e 89       	ldd	r22, Y+22	; 0x16
    3df6:	7f 89       	ldd	r23, Y+23	; 0x17
    3df8:	88 8d       	ldd	r24, Y+24	; 0x18
    3dfa:	99 8d       	ldd	r25, Y+25	; 0x19
    3dfc:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3e00:	dc 01       	movw	r26, r24
    3e02:	cb 01       	movw	r24, r22
    3e04:	9d 8b       	std	Y+21, r25	; 0x15
    3e06:	8c 8b       	std	Y+20, r24	; 0x14
    3e08:	8c 89       	ldd	r24, Y+20	; 0x14
    3e0a:	9d 89       	ldd	r25, Y+21	; 0x15
    3e0c:	99 8b       	std	Y+17, r25	; 0x11
    3e0e:	88 8b       	std	Y+16, r24	; 0x10
    3e10:	88 89       	ldd	r24, Y+16	; 0x10
    3e12:	99 89       	ldd	r25, Y+17	; 0x11
    3e14:	01 97       	sbiw	r24, 0x01	; 1
    3e16:	f1 f7       	brne	.-4      	; 0x3e14 <LCD_VidInit+0x6be>
    3e18:	99 8b       	std	Y+17, r25	; 0x11
    3e1a:	88 8b       	std	Y+16, r24	; 0x10
    3e1c:	0f c0       	rjmp	.+30     	; 0x3e3c <LCD_VidInit+0x6e6>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    3e1e:	6f 8d       	ldd	r22, Y+31	; 0x1f
    3e20:	78 a1       	ldd	r23, Y+32	; 0x20
    3e22:	89 a1       	ldd	r24, Y+33	; 0x21
    3e24:	9a a1       	ldd	r25, Y+34	; 0x22
    3e26:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3e2a:	dc 01       	movw	r26, r24
    3e2c:	cb 01       	movw	r24, r22
    3e2e:	8e 8f       	std	Y+30, r24	; 0x1e
    3e30:	8e 8d       	ldd	r24, Y+30	; 0x1e
    3e32:	8f 87       	std	Y+15, r24	; 0x0f
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    3e34:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e36:	8a 95       	dec	r24
    3e38:	f1 f7       	brne	.-4      	; 0x3e36 <LCD_VidInit+0x6e0>
    3e3a:	8f 87       	std	Y+15, r24	; 0x0f
	// Delay for more than 39 us
	_delay_us(40);
	// Send Clear Display Command
	LCD_VidSendCommend(DISPLAY_CLEAR);
    3e3c:	81 e0       	ldi	r24, 0x01	; 1
    3e3e:	0e 94 a0 1a 	call	0x3540	; 0x3540 <LCD_VidSendCommend>
    3e42:	80 e0       	ldi	r24, 0x00	; 0
    3e44:	90 e0       	ldi	r25, 0x00	; 0
    3e46:	a0 e0       	ldi	r26, 0x00	; 0
    3e48:	b0 e4       	ldi	r27, 0x40	; 64
    3e4a:	8b 87       	std	Y+11, r24	; 0x0b
    3e4c:	9c 87       	std	Y+12, r25	; 0x0c
    3e4e:	ad 87       	std	Y+13, r26	; 0x0d
    3e50:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3e52:	6b 85       	ldd	r22, Y+11	; 0x0b
    3e54:	7c 85       	ldd	r23, Y+12	; 0x0c
    3e56:	8d 85       	ldd	r24, Y+13	; 0x0d
    3e58:	9e 85       	ldd	r25, Y+14	; 0x0e
    3e5a:	20 e0       	ldi	r18, 0x00	; 0
    3e5c:	30 e0       	ldi	r19, 0x00	; 0
    3e5e:	4a ef       	ldi	r20, 0xFA	; 250
    3e60:	54 e4       	ldi	r21, 0x44	; 68
    3e62:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3e66:	dc 01       	movw	r26, r24
    3e68:	cb 01       	movw	r24, r22
    3e6a:	8f 83       	std	Y+7, r24	; 0x07
    3e6c:	98 87       	std	Y+8, r25	; 0x08
    3e6e:	a9 87       	std	Y+9, r26	; 0x09
    3e70:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3e72:	6f 81       	ldd	r22, Y+7	; 0x07
    3e74:	78 85       	ldd	r23, Y+8	; 0x08
    3e76:	89 85       	ldd	r24, Y+9	; 0x09
    3e78:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e7a:	20 e0       	ldi	r18, 0x00	; 0
    3e7c:	30 e0       	ldi	r19, 0x00	; 0
    3e7e:	40 e8       	ldi	r20, 0x80	; 128
    3e80:	5f e3       	ldi	r21, 0x3F	; 63
    3e82:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    3e86:	88 23       	and	r24, r24
    3e88:	2c f4       	brge	.+10     	; 0x3e94 <LCD_VidInit+0x73e>
		__ticks = 1;
    3e8a:	81 e0       	ldi	r24, 0x01	; 1
    3e8c:	90 e0       	ldi	r25, 0x00	; 0
    3e8e:	9e 83       	std	Y+6, r25	; 0x06
    3e90:	8d 83       	std	Y+5, r24	; 0x05
    3e92:	3f c0       	rjmp	.+126    	; 0x3f12 <LCD_VidInit+0x7bc>
	else if (__tmp > 65535)
    3e94:	6f 81       	ldd	r22, Y+7	; 0x07
    3e96:	78 85       	ldd	r23, Y+8	; 0x08
    3e98:	89 85       	ldd	r24, Y+9	; 0x09
    3e9a:	9a 85       	ldd	r25, Y+10	; 0x0a
    3e9c:	20 e0       	ldi	r18, 0x00	; 0
    3e9e:	3f ef       	ldi	r19, 0xFF	; 255
    3ea0:	4f e7       	ldi	r20, 0x7F	; 127
    3ea2:	57 e4       	ldi	r21, 0x47	; 71
    3ea4:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3ea8:	18 16       	cp	r1, r24
    3eaa:	4c f5       	brge	.+82     	; 0x3efe <LCD_VidInit+0x7a8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3eac:	6b 85       	ldd	r22, Y+11	; 0x0b
    3eae:	7c 85       	ldd	r23, Y+12	; 0x0c
    3eb0:	8d 85       	ldd	r24, Y+13	; 0x0d
    3eb2:	9e 85       	ldd	r25, Y+14	; 0x0e
    3eb4:	20 e0       	ldi	r18, 0x00	; 0
    3eb6:	30 e0       	ldi	r19, 0x00	; 0
    3eb8:	40 e2       	ldi	r20, 0x20	; 32
    3eba:	51 e4       	ldi	r21, 0x41	; 65
    3ebc:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3ec0:	dc 01       	movw	r26, r24
    3ec2:	cb 01       	movw	r24, r22
    3ec4:	bc 01       	movw	r22, r24
    3ec6:	cd 01       	movw	r24, r26
    3ec8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3ecc:	dc 01       	movw	r26, r24
    3ece:	cb 01       	movw	r24, r22
    3ed0:	9e 83       	std	Y+6, r25	; 0x06
    3ed2:	8d 83       	std	Y+5, r24	; 0x05
    3ed4:	0f c0       	rjmp	.+30     	; 0x3ef4 <LCD_VidInit+0x79e>
    3ed6:	88 ec       	ldi	r24, 0xC8	; 200
    3ed8:	90 e0       	ldi	r25, 0x00	; 0
    3eda:	9c 83       	std	Y+4, r25	; 0x04
    3edc:	8b 83       	std	Y+3, r24	; 0x03
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
    3ede:	8b 81       	ldd	r24, Y+3	; 0x03
    3ee0:	9c 81       	ldd	r25, Y+4	; 0x04
    3ee2:	01 97       	sbiw	r24, 0x01	; 1
    3ee4:	f1 f7       	brne	.-4      	; 0x3ee2 <LCD_VidInit+0x78c>
    3ee6:	9c 83       	std	Y+4, r25	; 0x04
    3ee8:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3eea:	8d 81       	ldd	r24, Y+5	; 0x05
    3eec:	9e 81       	ldd	r25, Y+6	; 0x06
    3eee:	01 97       	sbiw	r24, 0x01	; 1
    3ef0:	9e 83       	std	Y+6, r25	; 0x06
    3ef2:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ef4:	8d 81       	ldd	r24, Y+5	; 0x05
    3ef6:	9e 81       	ldd	r25, Y+6	; 0x06
    3ef8:	00 97       	sbiw	r24, 0x00	; 0
    3efa:	69 f7       	brne	.-38     	; 0x3ed6 <LCD_VidInit+0x780>
    3efc:	14 c0       	rjmp	.+40     	; 0x3f26 <LCD_VidInit+0x7d0>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3efe:	6f 81       	ldd	r22, Y+7	; 0x07
    3f00:	78 85       	ldd	r23, Y+8	; 0x08
    3f02:	89 85       	ldd	r24, Y+9	; 0x09
    3f04:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f06:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3f0a:	dc 01       	movw	r26, r24
    3f0c:	cb 01       	movw	r24, r22
    3f0e:	9e 83       	std	Y+6, r25	; 0x06
    3f10:	8d 83       	std	Y+5, r24	; 0x05
    3f12:	8d 81       	ldd	r24, Y+5	; 0x05
    3f14:	9e 81       	ldd	r25, Y+6	; 0x06
    3f16:	9a 83       	std	Y+2, r25	; 0x02
    3f18:	89 83       	std	Y+1, r24	; 0x01
    3f1a:	89 81       	ldd	r24, Y+1	; 0x01
    3f1c:	9a 81       	ldd	r25, Y+2	; 0x02
    3f1e:	01 97       	sbiw	r24, 0x01	; 1
    3f20:	f1 f7       	brne	.-4      	; 0x3f1e <LCD_VidInit+0x7c8>
    3f22:	9a 83       	std	Y+2, r25	; 0x02
    3f24:	89 83       	std	Y+1, r24	; 0x01
	// Send Clear Display Command
	LCD_VidSendCommend(DISPLAY_CLEAR);
	// Delay for more than 1.53 ms
	_delay_ms(2);
#endif
}
    3f26:	cc 59       	subi	r28, 0x9C	; 156
    3f28:	df 4f       	sbci	r29, 0xFF	; 255
    3f2a:	0f b6       	in	r0, 0x3f	; 63
    3f2c:	f8 94       	cli
    3f2e:	de bf       	out	0x3e, r29	; 62
    3f30:	0f be       	out	0x3f, r0	; 63
    3f32:	cd bf       	out	0x3d, r28	; 61
    3f34:	cf 91       	pop	r28
    3f36:	df 91       	pop	r29
    3f38:	1f 91       	pop	r17
    3f3a:	0f 91       	pop	r16
    3f3c:	08 95       	ret

00003f3e <LCD_VidSendChar>:

void LCD_VidSendChar(u8 Copy_U8Char){
    3f3e:	df 93       	push	r29
    3f40:	cf 93       	push	r28
    3f42:	cd b7       	in	r28, 0x3d	; 61
    3f44:	de b7       	in	r29, 0x3e	; 62
    3f46:	6d 97       	sbiw	r28, 0x1d	; 29
    3f48:	0f b6       	in	r0, 0x3f	; 63
    3f4a:	f8 94       	cli
    3f4c:	de bf       	out	0x3e, r29	; 62
    3f4e:	0f be       	out	0x3f, r0	; 63
    3f50:	cd bf       	out	0x3d, r28	; 61
    3f52:	8d 8f       	std	Y+29, r24	; 0x1d

#ifdef EIGHT_BIT
	/******* to define RS / RW ***********/
	DIO_VidSetPinValue(CONTROL_PORT,RS,HIGH);
    3f54:	83 e0       	ldi	r24, 0x03	; 3
    3f56:	63 e0       	ldi	r22, 0x03	; 3
    3f58:	41 e0       	ldi	r20, 0x01	; 1
    3f5a:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
	/*to define value of character on port*/
	DIO_VidSetPortValue(DATA_PORT,Copy_U8Char);
    3f5e:	82 e0       	ldi	r24, 0x02	; 2
    3f60:	6d 8d       	ldd	r22, Y+29	; 0x1d
    3f62:	0e 94 ce 17 	call	0x2f9c	; 0x2f9c <DIO_VidSetPortValue>
	/*********to make enable pulse*********/
	DIO_VidSetPinValue(CONTROL_PORT,E,HIGH);
    3f66:	83 e0       	ldi	r24, 0x03	; 3
    3f68:	64 e0       	ldi	r22, 0x04	; 4
    3f6a:	41 e0       	ldi	r20, 0x01	; 1
    3f6c:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    3f70:	80 e0       	ldi	r24, 0x00	; 0
    3f72:	90 e0       	ldi	r25, 0x00	; 0
    3f74:	a0 e8       	ldi	r26, 0x80	; 128
    3f76:	bf e3       	ldi	r27, 0x3F	; 63
    3f78:	89 8f       	std	Y+25, r24	; 0x19
    3f7a:	9a 8f       	std	Y+26, r25	; 0x1a
    3f7c:	ab 8f       	std	Y+27, r26	; 0x1b
    3f7e:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3f80:	69 8d       	ldd	r22, Y+25	; 0x19
    3f82:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3f84:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3f86:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3f88:	20 e0       	ldi	r18, 0x00	; 0
    3f8a:	30 e0       	ldi	r19, 0x00	; 0
    3f8c:	4a ef       	ldi	r20, 0xFA	; 250
    3f8e:	54 e4       	ldi	r21, 0x44	; 68
    3f90:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3f94:	dc 01       	movw	r26, r24
    3f96:	cb 01       	movw	r24, r22
    3f98:	8d 8b       	std	Y+21, r24	; 0x15
    3f9a:	9e 8b       	std	Y+22, r25	; 0x16
    3f9c:	af 8b       	std	Y+23, r26	; 0x17
    3f9e:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3fa0:	6d 89       	ldd	r22, Y+21	; 0x15
    3fa2:	7e 89       	ldd	r23, Y+22	; 0x16
    3fa4:	8f 89       	ldd	r24, Y+23	; 0x17
    3fa6:	98 8d       	ldd	r25, Y+24	; 0x18
    3fa8:	20 e0       	ldi	r18, 0x00	; 0
    3faa:	30 e0       	ldi	r19, 0x00	; 0
    3fac:	40 e8       	ldi	r20, 0x80	; 128
    3fae:	5f e3       	ldi	r21, 0x3F	; 63
    3fb0:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    3fb4:	88 23       	and	r24, r24
    3fb6:	2c f4       	brge	.+10     	; 0x3fc2 <LCD_VidSendChar+0x84>
		__ticks = 1;
    3fb8:	81 e0       	ldi	r24, 0x01	; 1
    3fba:	90 e0       	ldi	r25, 0x00	; 0
    3fbc:	9c 8b       	std	Y+20, r25	; 0x14
    3fbe:	8b 8b       	std	Y+19, r24	; 0x13
    3fc0:	3f c0       	rjmp	.+126    	; 0x4040 <LCD_VidSendChar+0x102>
	else if (__tmp > 65535)
    3fc2:	6d 89       	ldd	r22, Y+21	; 0x15
    3fc4:	7e 89       	ldd	r23, Y+22	; 0x16
    3fc6:	8f 89       	ldd	r24, Y+23	; 0x17
    3fc8:	98 8d       	ldd	r25, Y+24	; 0x18
    3fca:	20 e0       	ldi	r18, 0x00	; 0
    3fcc:	3f ef       	ldi	r19, 0xFF	; 255
    3fce:	4f e7       	ldi	r20, 0x7F	; 127
    3fd0:	57 e4       	ldi	r21, 0x47	; 71
    3fd2:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    3fd6:	18 16       	cp	r1, r24
    3fd8:	4c f5       	brge	.+82     	; 0x402c <LCD_VidSendChar+0xee>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3fda:	69 8d       	ldd	r22, Y+25	; 0x19
    3fdc:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3fde:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3fe0:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3fe2:	20 e0       	ldi	r18, 0x00	; 0
    3fe4:	30 e0       	ldi	r19, 0x00	; 0
    3fe6:	40 e2       	ldi	r20, 0x20	; 32
    3fe8:	51 e4       	ldi	r21, 0x41	; 65
    3fea:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    3fee:	dc 01       	movw	r26, r24
    3ff0:	cb 01       	movw	r24, r22
    3ff2:	bc 01       	movw	r22, r24
    3ff4:	cd 01       	movw	r24, r26
    3ff6:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    3ffa:	dc 01       	movw	r26, r24
    3ffc:	cb 01       	movw	r24, r22
    3ffe:	9c 8b       	std	Y+20, r25	; 0x14
    4000:	8b 8b       	std	Y+19, r24	; 0x13
    4002:	0f c0       	rjmp	.+30     	; 0x4022 <LCD_VidSendChar+0xe4>
    4004:	88 ec       	ldi	r24, 0xC8	; 200
    4006:	90 e0       	ldi	r25, 0x00	; 0
    4008:	9a 8b       	std	Y+18, r25	; 0x12
    400a:	89 8b       	std	Y+17, r24	; 0x11
    400c:	89 89       	ldd	r24, Y+17	; 0x11
    400e:	9a 89       	ldd	r25, Y+18	; 0x12
    4010:	01 97       	sbiw	r24, 0x01	; 1
    4012:	f1 f7       	brne	.-4      	; 0x4010 <LCD_VidSendChar+0xd2>
    4014:	9a 8b       	std	Y+18, r25	; 0x12
    4016:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4018:	8b 89       	ldd	r24, Y+19	; 0x13
    401a:	9c 89       	ldd	r25, Y+20	; 0x14
    401c:	01 97       	sbiw	r24, 0x01	; 1
    401e:	9c 8b       	std	Y+20, r25	; 0x14
    4020:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4022:	8b 89       	ldd	r24, Y+19	; 0x13
    4024:	9c 89       	ldd	r25, Y+20	; 0x14
    4026:	00 97       	sbiw	r24, 0x00	; 0
    4028:	69 f7       	brne	.-38     	; 0x4004 <LCD_VidSendChar+0xc6>
    402a:	14 c0       	rjmp	.+40     	; 0x4054 <LCD_VidSendChar+0x116>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    402c:	6d 89       	ldd	r22, Y+21	; 0x15
    402e:	7e 89       	ldd	r23, Y+22	; 0x16
    4030:	8f 89       	ldd	r24, Y+23	; 0x17
    4032:	98 8d       	ldd	r25, Y+24	; 0x18
    4034:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    4038:	dc 01       	movw	r26, r24
    403a:	cb 01       	movw	r24, r22
    403c:	9c 8b       	std	Y+20, r25	; 0x14
    403e:	8b 8b       	std	Y+19, r24	; 0x13
    4040:	8b 89       	ldd	r24, Y+19	; 0x13
    4042:	9c 89       	ldd	r25, Y+20	; 0x14
    4044:	98 8b       	std	Y+16, r25	; 0x10
    4046:	8f 87       	std	Y+15, r24	; 0x0f
    4048:	8f 85       	ldd	r24, Y+15	; 0x0f
    404a:	98 89       	ldd	r25, Y+16	; 0x10
    404c:	01 97       	sbiw	r24, 0x01	; 1
    404e:	f1 f7       	brne	.-4      	; 0x404c <LCD_VidSendChar+0x10e>
    4050:	98 8b       	std	Y+16, r25	; 0x10
    4052:	8f 87       	std	Y+15, r24	; 0x0f
	_delay_ms(1);
	DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
    4054:	83 e0       	ldi	r24, 0x03	; 3
    4056:	64 e0       	ldi	r22, 0x04	; 4
    4058:	40 e0       	ldi	r20, 0x00	; 0
    405a:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    405e:	80 e0       	ldi	r24, 0x00	; 0
    4060:	90 e0       	ldi	r25, 0x00	; 0
    4062:	a0 e0       	ldi	r26, 0x00	; 0
    4064:	b0 e4       	ldi	r27, 0x40	; 64
    4066:	8b 87       	std	Y+11, r24	; 0x0b
    4068:	9c 87       	std	Y+12, r25	; 0x0c
    406a:	ad 87       	std	Y+13, r26	; 0x0d
    406c:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    406e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4070:	7c 85       	ldd	r23, Y+12	; 0x0c
    4072:	8d 85       	ldd	r24, Y+13	; 0x0d
    4074:	9e 85       	ldd	r25, Y+14	; 0x0e
    4076:	20 e0       	ldi	r18, 0x00	; 0
    4078:	30 e0       	ldi	r19, 0x00	; 0
    407a:	4a ef       	ldi	r20, 0xFA	; 250
    407c:	54 e4       	ldi	r21, 0x44	; 68
    407e:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    4082:	dc 01       	movw	r26, r24
    4084:	cb 01       	movw	r24, r22
    4086:	8f 83       	std	Y+7, r24	; 0x07
    4088:	98 87       	std	Y+8, r25	; 0x08
    408a:	a9 87       	std	Y+9, r26	; 0x09
    408c:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    408e:	6f 81       	ldd	r22, Y+7	; 0x07
    4090:	78 85       	ldd	r23, Y+8	; 0x08
    4092:	89 85       	ldd	r24, Y+9	; 0x09
    4094:	9a 85       	ldd	r25, Y+10	; 0x0a
    4096:	20 e0       	ldi	r18, 0x00	; 0
    4098:	30 e0       	ldi	r19, 0x00	; 0
    409a:	40 e8       	ldi	r20, 0x80	; 128
    409c:	5f e3       	ldi	r21, 0x3F	; 63
    409e:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    40a2:	88 23       	and	r24, r24
    40a4:	2c f4       	brge	.+10     	; 0x40b0 <LCD_VidSendChar+0x172>
		__ticks = 1;
    40a6:	81 e0       	ldi	r24, 0x01	; 1
    40a8:	90 e0       	ldi	r25, 0x00	; 0
    40aa:	9e 83       	std	Y+6, r25	; 0x06
    40ac:	8d 83       	std	Y+5, r24	; 0x05
    40ae:	3f c0       	rjmp	.+126    	; 0x412e <LCD_VidSendChar+0x1f0>
	else if (__tmp > 65535)
    40b0:	6f 81       	ldd	r22, Y+7	; 0x07
    40b2:	78 85       	ldd	r23, Y+8	; 0x08
    40b4:	89 85       	ldd	r24, Y+9	; 0x09
    40b6:	9a 85       	ldd	r25, Y+10	; 0x0a
    40b8:	20 e0       	ldi	r18, 0x00	; 0
    40ba:	3f ef       	ldi	r19, 0xFF	; 255
    40bc:	4f e7       	ldi	r20, 0x7F	; 127
    40be:	57 e4       	ldi	r21, 0x47	; 71
    40c0:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    40c4:	18 16       	cp	r1, r24
    40c6:	4c f5       	brge	.+82     	; 0x411a <LCD_VidSendChar+0x1dc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    40c8:	6b 85       	ldd	r22, Y+11	; 0x0b
    40ca:	7c 85       	ldd	r23, Y+12	; 0x0c
    40cc:	8d 85       	ldd	r24, Y+13	; 0x0d
    40ce:	9e 85       	ldd	r25, Y+14	; 0x0e
    40d0:	20 e0       	ldi	r18, 0x00	; 0
    40d2:	30 e0       	ldi	r19, 0x00	; 0
    40d4:	40 e2       	ldi	r20, 0x20	; 32
    40d6:	51 e4       	ldi	r21, 0x41	; 65
    40d8:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    40dc:	dc 01       	movw	r26, r24
    40de:	cb 01       	movw	r24, r22
    40e0:	bc 01       	movw	r22, r24
    40e2:	cd 01       	movw	r24, r26
    40e4:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    40e8:	dc 01       	movw	r26, r24
    40ea:	cb 01       	movw	r24, r22
    40ec:	9e 83       	std	Y+6, r25	; 0x06
    40ee:	8d 83       	std	Y+5, r24	; 0x05
    40f0:	0f c0       	rjmp	.+30     	; 0x4110 <LCD_VidSendChar+0x1d2>
    40f2:	88 ec       	ldi	r24, 0xC8	; 200
    40f4:	90 e0       	ldi	r25, 0x00	; 0
    40f6:	9c 83       	std	Y+4, r25	; 0x04
    40f8:	8b 83       	std	Y+3, r24	; 0x03
    40fa:	8b 81       	ldd	r24, Y+3	; 0x03
    40fc:	9c 81       	ldd	r25, Y+4	; 0x04
    40fe:	01 97       	sbiw	r24, 0x01	; 1
    4100:	f1 f7       	brne	.-4      	; 0x40fe <LCD_VidSendChar+0x1c0>
    4102:	9c 83       	std	Y+4, r25	; 0x04
    4104:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4106:	8d 81       	ldd	r24, Y+5	; 0x05
    4108:	9e 81       	ldd	r25, Y+6	; 0x06
    410a:	01 97       	sbiw	r24, 0x01	; 1
    410c:	9e 83       	std	Y+6, r25	; 0x06
    410e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4110:	8d 81       	ldd	r24, Y+5	; 0x05
    4112:	9e 81       	ldd	r25, Y+6	; 0x06
    4114:	00 97       	sbiw	r24, 0x00	; 0
    4116:	69 f7       	brne	.-38     	; 0x40f2 <LCD_VidSendChar+0x1b4>
    4118:	14 c0       	rjmp	.+40     	; 0x4142 <LCD_VidSendChar+0x204>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    411a:	6f 81       	ldd	r22, Y+7	; 0x07
    411c:	78 85       	ldd	r23, Y+8	; 0x08
    411e:	89 85       	ldd	r24, Y+9	; 0x09
    4120:	9a 85       	ldd	r25, Y+10	; 0x0a
    4122:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    4126:	dc 01       	movw	r26, r24
    4128:	cb 01       	movw	r24, r22
    412a:	9e 83       	std	Y+6, r25	; 0x06
    412c:	8d 83       	std	Y+5, r24	; 0x05
    412e:	8d 81       	ldd	r24, Y+5	; 0x05
    4130:	9e 81       	ldd	r25, Y+6	; 0x06
    4132:	9a 83       	std	Y+2, r25	; 0x02
    4134:	89 83       	std	Y+1, r24	; 0x01
    4136:	89 81       	ldd	r24, Y+1	; 0x01
    4138:	9a 81       	ldd	r25, Y+2	; 0x02
    413a:	01 97       	sbiw	r24, 0x01	; 1
    413c:	f1 f7       	brne	.-4      	; 0x413a <LCD_VidSendChar+0x1fc>
    413e:	9a 83       	std	Y+2, r25	; 0x02
    4140:	89 83       	std	Y+1, r24	; 0x01
		DIO_VidSetPinValue(CONTROL_PORT,E,LOW);
		_delay_ms(2);

#endif

}
    4142:	6d 96       	adiw	r28, 0x1d	; 29
    4144:	0f b6       	in	r0, 0x3f	; 63
    4146:	f8 94       	cli
    4148:	de bf       	out	0x3e, r29	; 62
    414a:	0f be       	out	0x3f, r0	; 63
    414c:	cd bf       	out	0x3d, r28	; 61
    414e:	cf 91       	pop	r28
    4150:	df 91       	pop	r29
    4152:	08 95       	ret

00004154 <LCD_VidSendString>:

void LCD_VidSendString(u8 Copy_U8String[] ){
    4154:	df 93       	push	r29
    4156:	cf 93       	push	r28
    4158:	cd b7       	in	r28, 0x3d	; 61
    415a:	de b7       	in	r29, 0x3e	; 62
    415c:	6b 97       	sbiw	r28, 0x1b	; 27
    415e:	0f b6       	in	r0, 0x3f	; 63
    4160:	f8 94       	cli
    4162:	de bf       	out	0x3e, r29	; 62
    4164:	0f be       	out	0x3f, r0	; 63
    4166:	cd bf       	out	0x3d, r28	; 61
    4168:	9b 8f       	std	Y+27, r25	; 0x1b
    416a:	8a 8f       	std	Y+26, r24	; 0x1a
	u8 i=0;
    416c:	19 8e       	std	Y+25, r1	; 0x19
    416e:	d2 c0       	rjmp	.+420    	; 0x4314 <LCD_VidSendString+0x1c0>
	while( Copy_U8String[i] != '\0' ){
		if (15 == i){
    4170:	89 8d       	ldd	r24, Y+25	; 0x19
    4172:	8f 30       	cpi	r24, 0x0F	; 15
    4174:	19 f4       	brne	.+6      	; 0x417c <LCD_VidSendString+0x28>
			LCD_VidSendCommend(LINE_2_START);
    4176:	80 ec       	ldi	r24, 0xC0	; 192
    4178:	0e 94 a0 1a 	call	0x3540	; 0x3540 <LCD_VidSendCommend>
		}
		LCD_VidSendChar(Copy_U8String[i]);
    417c:	89 8d       	ldd	r24, Y+25	; 0x19
    417e:	28 2f       	mov	r18, r24
    4180:	30 e0       	ldi	r19, 0x00	; 0
    4182:	8a 8d       	ldd	r24, Y+26	; 0x1a
    4184:	9b 8d       	ldd	r25, Y+27	; 0x1b
    4186:	fc 01       	movw	r30, r24
    4188:	e2 0f       	add	r30, r18
    418a:	f3 1f       	adc	r31, r19
    418c:	80 81       	ld	r24, Z
    418e:	0e 94 9f 1f 	call	0x3f3e	; 0x3f3e <LCD_VidSendChar>
    4192:	80 e0       	ldi	r24, 0x00	; 0
    4194:	90 e0       	ldi	r25, 0x00	; 0
    4196:	a0 e8       	ldi	r26, 0x80	; 128
    4198:	bf e3       	ldi	r27, 0x3F	; 63
    419a:	8d 8b       	std	Y+21, r24	; 0x15
    419c:	9e 8b       	std	Y+22, r25	; 0x16
    419e:	af 8b       	std	Y+23, r26	; 0x17
    41a0:	b8 8f       	std	Y+24, r27	; 0x18
 */
void
_delay_us(double __us)
{
	uint8_t __ticks;
	double __tmp = ((F_CPU) / 3e6) * __us;
    41a2:	6d 89       	ldd	r22, Y+21	; 0x15
    41a4:	7e 89       	ldd	r23, Y+22	; 0x16
    41a6:	8f 89       	ldd	r24, Y+23	; 0x17
    41a8:	98 8d       	ldd	r25, Y+24	; 0x18
    41aa:	2b ea       	ldi	r18, 0xAB	; 171
    41ac:	3a ea       	ldi	r19, 0xAA	; 170
    41ae:	4a e2       	ldi	r20, 0x2A	; 42
    41b0:	50 e4       	ldi	r21, 0x40	; 64
    41b2:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    41b6:	dc 01       	movw	r26, r24
    41b8:	cb 01       	movw	r24, r22
    41ba:	89 8b       	std	Y+17, r24	; 0x11
    41bc:	9a 8b       	std	Y+18, r25	; 0x12
    41be:	ab 8b       	std	Y+19, r26	; 0x13
    41c0:	bc 8b       	std	Y+20, r27	; 0x14
	if (__tmp < 1.0)
    41c2:	69 89       	ldd	r22, Y+17	; 0x11
    41c4:	7a 89       	ldd	r23, Y+18	; 0x12
    41c6:	8b 89       	ldd	r24, Y+19	; 0x13
    41c8:	9c 89       	ldd	r25, Y+20	; 0x14
    41ca:	20 e0       	ldi	r18, 0x00	; 0
    41cc:	30 e0       	ldi	r19, 0x00	; 0
    41ce:	40 e8       	ldi	r20, 0x80	; 128
    41d0:	5f e3       	ldi	r21, 0x3F	; 63
    41d2:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    41d6:	88 23       	and	r24, r24
    41d8:	1c f4       	brge	.+6      	; 0x41e0 <LCD_VidSendString+0x8c>
		__ticks = 1;
    41da:	81 e0       	ldi	r24, 0x01	; 1
    41dc:	88 8b       	std	Y+16, r24	; 0x10
    41de:	91 c0       	rjmp	.+290    	; 0x4302 <LCD_VidSendString+0x1ae>
	else if (__tmp > 255)
    41e0:	69 89       	ldd	r22, Y+17	; 0x11
    41e2:	7a 89       	ldd	r23, Y+18	; 0x12
    41e4:	8b 89       	ldd	r24, Y+19	; 0x13
    41e6:	9c 89       	ldd	r25, Y+20	; 0x14
    41e8:	20 e0       	ldi	r18, 0x00	; 0
    41ea:	30 e0       	ldi	r19, 0x00	; 0
    41ec:	4f e7       	ldi	r20, 0x7F	; 127
    41ee:	53 e4       	ldi	r21, 0x43	; 67
    41f0:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    41f4:	18 16       	cp	r1, r24
    41f6:	0c f0       	brlt	.+2      	; 0x41fa <LCD_VidSendString+0xa6>
    41f8:	7b c0       	rjmp	.+246    	; 0x42f0 <LCD_VidSendString+0x19c>
	{
		_delay_ms(__us / 1000.0);
    41fa:	6d 89       	ldd	r22, Y+21	; 0x15
    41fc:	7e 89       	ldd	r23, Y+22	; 0x16
    41fe:	8f 89       	ldd	r24, Y+23	; 0x17
    4200:	98 8d       	ldd	r25, Y+24	; 0x18
    4202:	20 e0       	ldi	r18, 0x00	; 0
    4204:	30 e0       	ldi	r19, 0x00	; 0
    4206:	4a e7       	ldi	r20, 0x7A	; 122
    4208:	54 e4       	ldi	r21, 0x44	; 68
    420a:	0e 94 f9 10 	call	0x21f2	; 0x21f2 <__divsf3>
    420e:	dc 01       	movw	r26, r24
    4210:	cb 01       	movw	r24, r22
    4212:	8c 87       	std	Y+12, r24	; 0x0c
    4214:	9d 87       	std	Y+13, r25	; 0x0d
    4216:	ae 87       	std	Y+14, r26	; 0x0e
    4218:	bf 87       	std	Y+15, r27	; 0x0f
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    421a:	6c 85       	ldd	r22, Y+12	; 0x0c
    421c:	7d 85       	ldd	r23, Y+13	; 0x0d
    421e:	8e 85       	ldd	r24, Y+14	; 0x0e
    4220:	9f 85       	ldd	r25, Y+15	; 0x0f
    4222:	20 e0       	ldi	r18, 0x00	; 0
    4224:	30 e0       	ldi	r19, 0x00	; 0
    4226:	4a ef       	ldi	r20, 0xFA	; 250
    4228:	54 e4       	ldi	r21, 0x44	; 68
    422a:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    422e:	dc 01       	movw	r26, r24
    4230:	cb 01       	movw	r24, r22
    4232:	88 87       	std	Y+8, r24	; 0x08
    4234:	99 87       	std	Y+9, r25	; 0x09
    4236:	aa 87       	std	Y+10, r26	; 0x0a
    4238:	bb 87       	std	Y+11, r27	; 0x0b
	if (__tmp < 1.0)
    423a:	68 85       	ldd	r22, Y+8	; 0x08
    423c:	79 85       	ldd	r23, Y+9	; 0x09
    423e:	8a 85       	ldd	r24, Y+10	; 0x0a
    4240:	9b 85       	ldd	r25, Y+11	; 0x0b
    4242:	20 e0       	ldi	r18, 0x00	; 0
    4244:	30 e0       	ldi	r19, 0x00	; 0
    4246:	40 e8       	ldi	r20, 0x80	; 128
    4248:	5f e3       	ldi	r21, 0x3F	; 63
    424a:	0e 94 05 12 	call	0x240a	; 0x240a <__ltsf2>
    424e:	88 23       	and	r24, r24
    4250:	2c f4       	brge	.+10     	; 0x425c <LCD_VidSendString+0x108>
		__ticks = 1;
    4252:	81 e0       	ldi	r24, 0x01	; 1
    4254:	90 e0       	ldi	r25, 0x00	; 0
    4256:	9f 83       	std	Y+7, r25	; 0x07
    4258:	8e 83       	std	Y+6, r24	; 0x06
    425a:	3f c0       	rjmp	.+126    	; 0x42da <LCD_VidSendString+0x186>
	else if (__tmp > 65535)
    425c:	68 85       	ldd	r22, Y+8	; 0x08
    425e:	79 85       	ldd	r23, Y+9	; 0x09
    4260:	8a 85       	ldd	r24, Y+10	; 0x0a
    4262:	9b 85       	ldd	r25, Y+11	; 0x0b
    4264:	20 e0       	ldi	r18, 0x00	; 0
    4266:	3f ef       	ldi	r19, 0xFF	; 255
    4268:	4f e7       	ldi	r20, 0x7F	; 127
    426a:	57 e4       	ldi	r21, 0x47	; 71
    426c:	0e 94 a5 11 	call	0x234a	; 0x234a <__gtsf2>
    4270:	18 16       	cp	r1, r24
    4272:	4c f5       	brge	.+82     	; 0x42c6 <LCD_VidSendString+0x172>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4274:	6c 85       	ldd	r22, Y+12	; 0x0c
    4276:	7d 85       	ldd	r23, Y+13	; 0x0d
    4278:	8e 85       	ldd	r24, Y+14	; 0x0e
    427a:	9f 85       	ldd	r25, Y+15	; 0x0f
    427c:	20 e0       	ldi	r18, 0x00	; 0
    427e:	30 e0       	ldi	r19, 0x00	; 0
    4280:	40 e2       	ldi	r20, 0x20	; 32
    4282:	51 e4       	ldi	r21, 0x41	; 65
    4284:	0e 94 ff 0f 	call	0x1ffe	; 0x1ffe <__mulsf3>
    4288:	dc 01       	movw	r26, r24
    428a:	cb 01       	movw	r24, r22
    428c:	bc 01       	movw	r22, r24
    428e:	cd 01       	movw	r24, r26
    4290:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    4294:	dc 01       	movw	r26, r24
    4296:	cb 01       	movw	r24, r22
    4298:	9f 83       	std	Y+7, r25	; 0x07
    429a:	8e 83       	std	Y+6, r24	; 0x06
    429c:	0f c0       	rjmp	.+30     	; 0x42bc <LCD_VidSendString+0x168>
    429e:	88 ec       	ldi	r24, 0xC8	; 200
    42a0:	90 e0       	ldi	r25, 0x00	; 0
    42a2:	9d 83       	std	Y+5, r25	; 0x05
    42a4:	8c 83       	std	Y+4, r24	; 0x04
    42a6:	8c 81       	ldd	r24, Y+4	; 0x04
    42a8:	9d 81       	ldd	r25, Y+5	; 0x05
    42aa:	01 97       	sbiw	r24, 0x01	; 1
    42ac:	f1 f7       	brne	.-4      	; 0x42aa <LCD_VidSendString+0x156>
    42ae:	9d 83       	std	Y+5, r25	; 0x05
    42b0:	8c 83       	std	Y+4, r24	; 0x04
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    42b2:	8e 81       	ldd	r24, Y+6	; 0x06
    42b4:	9f 81       	ldd	r25, Y+7	; 0x07
    42b6:	01 97       	sbiw	r24, 0x01	; 1
    42b8:	9f 83       	std	Y+7, r25	; 0x07
    42ba:	8e 83       	std	Y+6, r24	; 0x06
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    42bc:	8e 81       	ldd	r24, Y+6	; 0x06
    42be:	9f 81       	ldd	r25, Y+7	; 0x07
    42c0:	00 97       	sbiw	r24, 0x00	; 0
    42c2:	69 f7       	brne	.-38     	; 0x429e <LCD_VidSendString+0x14a>
    42c4:	24 c0       	rjmp	.+72     	; 0x430e <LCD_VidSendString+0x1ba>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    42c6:	68 85       	ldd	r22, Y+8	; 0x08
    42c8:	79 85       	ldd	r23, Y+9	; 0x09
    42ca:	8a 85       	ldd	r24, Y+10	; 0x0a
    42cc:	9b 85       	ldd	r25, Y+11	; 0x0b
    42ce:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    42d2:	dc 01       	movw	r26, r24
    42d4:	cb 01       	movw	r24, r22
    42d6:	9f 83       	std	Y+7, r25	; 0x07
    42d8:	8e 83       	std	Y+6, r24	; 0x06
    42da:	8e 81       	ldd	r24, Y+6	; 0x06
    42dc:	9f 81       	ldd	r25, Y+7	; 0x07
    42de:	9b 83       	std	Y+3, r25	; 0x03
    42e0:	8a 83       	std	Y+2, r24	; 0x02
    42e2:	8a 81       	ldd	r24, Y+2	; 0x02
    42e4:	9b 81       	ldd	r25, Y+3	; 0x03
    42e6:	01 97       	sbiw	r24, 0x01	; 1
    42e8:	f1 f7       	brne	.-4      	; 0x42e6 <LCD_VidSendString+0x192>
    42ea:	9b 83       	std	Y+3, r25	; 0x03
    42ec:	8a 83       	std	Y+2, r24	; 0x02
    42ee:	0f c0       	rjmp	.+30     	; 0x430e <LCD_VidSendString+0x1ba>
	{
		_delay_ms(__us / 1000.0);
		return;
	}
	else
		__ticks = (uint8_t)__tmp;
    42f0:	69 89       	ldd	r22, Y+17	; 0x11
    42f2:	7a 89       	ldd	r23, Y+18	; 0x12
    42f4:	8b 89       	ldd	r24, Y+19	; 0x13
    42f6:	9c 89       	ldd	r25, Y+20	; 0x14
    42f8:	0e 94 44 01 	call	0x288	; 0x288 <__fixunssfsi>
    42fc:	dc 01       	movw	r26, r24
    42fe:	cb 01       	movw	r24, r22
    4300:	88 8b       	std	Y+16, r24	; 0x10
    4302:	88 89       	ldd	r24, Y+16	; 0x10
    4304:	89 83       	std	Y+1, r24	; 0x01
    can be achieved.
*/
void
_delay_loop_1(uint8_t __count)
{
	__asm__ volatile (
    4306:	89 81       	ldd	r24, Y+1	; 0x01
    4308:	8a 95       	dec	r24
    430a:	f1 f7       	brne	.-4      	; 0x4308 <LCD_VidSendString+0x1b4>
    430c:	89 83       	std	Y+1, r24	; 0x01
		_delay_us(1);
		i++;
    430e:	89 8d       	ldd	r24, Y+25	; 0x19
    4310:	8f 5f       	subi	r24, 0xFF	; 255
    4312:	89 8f       	std	Y+25, r24	; 0x19

}

void LCD_VidSendString(u8 Copy_U8String[] ){
	u8 i=0;
	while( Copy_U8String[i] != '\0' ){
    4314:	89 8d       	ldd	r24, Y+25	; 0x19
    4316:	28 2f       	mov	r18, r24
    4318:	30 e0       	ldi	r19, 0x00	; 0
    431a:	8a 8d       	ldd	r24, Y+26	; 0x1a
    431c:	9b 8d       	ldd	r25, Y+27	; 0x1b
    431e:	fc 01       	movw	r30, r24
    4320:	e2 0f       	add	r30, r18
    4322:	f3 1f       	adc	r31, r19
    4324:	80 81       	ld	r24, Z
    4326:	88 23       	and	r24, r24
    4328:	09 f0       	breq	.+2      	; 0x432c <LCD_VidSendString+0x1d8>
    432a:	22 cf       	rjmp	.-444    	; 0x4170 <LCD_VidSendString+0x1c>
		}
		LCD_VidSendChar(Copy_U8String[i]);
		_delay_us(1);
		i++;
	}//end while
}//end FUNC LCD_VidSendString
    432c:	6b 96       	adiw	r28, 0x1b	; 27
    432e:	0f b6       	in	r0, 0x3f	; 63
    4330:	f8 94       	cli
    4332:	de bf       	out	0x3e, r29	; 62
    4334:	0f be       	out	0x3f, r0	; 63
    4336:	cd bf       	out	0x3d, r28	; 61
    4338:	cf 91       	pop	r28
    433a:	df 91       	pop	r29
    433c:	08 95       	ret

0000433e <LCD_U32Pow>:

u32 LCD_U32Pow(u8 Copy_U8Base , u8 Copy_U8Bow ){
    433e:	df 93       	push	r29
    4340:	cf 93       	push	r28
    4342:	00 d0       	rcall	.+0      	; 0x4344 <LCD_U32Pow+0x6>
    4344:	00 d0       	rcall	.+0      	; 0x4346 <LCD_U32Pow+0x8>
    4346:	cd b7       	in	r28, 0x3d	; 61
    4348:	de b7       	in	r29, 0x3e	; 62
    434a:	8b 83       	std	Y+3, r24	; 0x03
    434c:	6c 83       	std	Y+4, r22	; 0x04
  u32 local_res = 1 ;
    434e:	81 e0       	ldi	r24, 0x01	; 1
    4350:	90 e0       	ldi	r25, 0x00	; 0
    4352:	9a 83       	std	Y+2, r25	; 0x02
    4354:	89 83       	std	Y+1, r24	; 0x01
    4356:	12 c0       	rjmp	.+36     	; 0x437c <LCD_U32Pow+0x3e>
  while (Copy_U8Bow >0 ){
	  local_res *= Copy_U8Base ;
    4358:	8b 81       	ldd	r24, Y+3	; 0x03
    435a:	28 2f       	mov	r18, r24
    435c:	30 e0       	ldi	r19, 0x00	; 0
    435e:	89 81       	ldd	r24, Y+1	; 0x01
    4360:	9a 81       	ldd	r25, Y+2	; 0x02
    4362:	ac 01       	movw	r20, r24
    4364:	42 9f       	mul	r20, r18
    4366:	c0 01       	movw	r24, r0
    4368:	43 9f       	mul	r20, r19
    436a:	90 0d       	add	r25, r0
    436c:	52 9f       	mul	r21, r18
    436e:	90 0d       	add	r25, r0
    4370:	11 24       	eor	r1, r1
    4372:	9a 83       	std	Y+2, r25	; 0x02
    4374:	89 83       	std	Y+1, r24	; 0x01
	  Copy_U8Bow--;
    4376:	8c 81       	ldd	r24, Y+4	; 0x04
    4378:	81 50       	subi	r24, 0x01	; 1
    437a:	8c 83       	std	Y+4, r24	; 0x04
	}//end while
}//end FUNC LCD_VidSendString

u32 LCD_U32Pow(u8 Copy_U8Base , u8 Copy_U8Bow ){
  u32 local_res = 1 ;
  while (Copy_U8Bow >0 ){
    437c:	8c 81       	ldd	r24, Y+4	; 0x04
    437e:	88 23       	and	r24, r24
    4380:	59 f7       	brne	.-42     	; 0x4358 <LCD_U32Pow+0x1a>
	  local_res *= Copy_U8Base ;
	  Copy_U8Bow--;
  }
  return  local_res ;
    4382:	89 81       	ldd	r24, Y+1	; 0x01
    4384:	9a 81       	ldd	r25, Y+2	; 0x02
}
    4386:	0f 90       	pop	r0
    4388:	0f 90       	pop	r0
    438a:	0f 90       	pop	r0
    438c:	0f 90       	pop	r0
    438e:	cf 91       	pop	r28
    4390:	df 91       	pop	r29
    4392:	08 95       	ret

00004394 <LCD_VidPrintVar>:

void LCD_VidPrintVar(u64 Copy_U8Var){
    4394:	2f 92       	push	r2
    4396:	3f 92       	push	r3
    4398:	4f 92       	push	r4
    439a:	5f 92       	push	r5
    439c:	6f 92       	push	r6
    439e:	7f 92       	push	r7
    43a0:	8f 92       	push	r8
    43a2:	9f 92       	push	r9
    43a4:	af 92       	push	r10
    43a6:	bf 92       	push	r11
    43a8:	cf 92       	push	r12
    43aa:	df 92       	push	r13
    43ac:	ef 92       	push	r14
    43ae:	ff 92       	push	r15
    43b0:	0f 93       	push	r16
    43b2:	1f 93       	push	r17
    43b4:	df 93       	push	r29
    43b6:	cf 93       	push	r28
    43b8:	cd b7       	in	r28, 0x3d	; 61
    43ba:	de b7       	in	r29, 0x3e	; 62
    43bc:	c5 54       	subi	r28, 0x45	; 69
    43be:	d0 40       	sbci	r29, 0x00	; 0
    43c0:	0f b6       	in	r0, 0x3f	; 63
    43c2:	f8 94       	cli
    43c4:	de bf       	out	0x3e, r29	; 62
    43c6:	0f be       	out	0x3f, r0	; 63
    43c8:	cd bf       	out	0x3d, r28	; 61
    43ca:	2b 87       	std	Y+11, r18	; 0x0b
    43cc:	3c 87       	std	Y+12, r19	; 0x0c
    43ce:	4d 87       	std	Y+13, r20	; 0x0d
    43d0:	5e 87       	std	Y+14, r21	; 0x0e
    43d2:	6f 87       	std	Y+15, r22	; 0x0f
    43d4:	78 8b       	std	Y+16, r23	; 0x10
    43d6:	89 8b       	std	Y+17, r24	; 0x11
    43d8:	9a 8b       	std	Y+18, r25	; 0x12
    u64 local_num = 0 ;
    43da:	1b 82       	std	Y+3, r1	; 0x03
    43dc:	1c 82       	std	Y+4, r1	; 0x04
    43de:	1d 82       	std	Y+5, r1	; 0x05
    43e0:	1e 82       	std	Y+6, r1	; 0x06
    43e2:	1f 82       	std	Y+7, r1	; 0x07
    43e4:	18 86       	std	Y+8, r1	; 0x08
    43e6:	19 86       	std	Y+9, r1	; 0x09
    43e8:	1a 86       	std	Y+10, r1	; 0x0a
    u8 i = 0 ;
    43ea:	1a 82       	std	Y+2, r1	; 0x02
    // to check if it 0
	if (0 == Copy_U8Var){
    43ec:	8b 85       	ldd	r24, Y+11	; 0x0b
    43ee:	9c 85       	ldd	r25, Y+12	; 0x0c
    43f0:	89 2b       	or	r24, r25
    43f2:	9d 85       	ldd	r25, Y+13	; 0x0d
    43f4:	89 2b       	or	r24, r25
    43f6:	9e 85       	ldd	r25, Y+14	; 0x0e
    43f8:	89 2b       	or	r24, r25
    43fa:	9f 85       	ldd	r25, Y+15	; 0x0f
    43fc:	89 2b       	or	r24, r25
    43fe:	98 89       	ldd	r25, Y+16	; 0x10
    4400:	89 2b       	or	r24, r25
    4402:	99 89       	ldd	r25, Y+17	; 0x11
    4404:	89 2b       	or	r24, r25
    4406:	9a 89       	ldd	r25, Y+18	; 0x12
    4408:	89 2b       	or	r24, r25
    440a:	88 23       	and	r24, r24
    440c:	39 f4       	brne	.+14     	; 0x441c <LCD_VidPrintVar+0x88>
		LCD_VidSendChar('0');
    440e:	80 e3       	ldi	r24, 0x30	; 48
    4410:	0e 94 9f 1f 	call	0x3f3e	; 0x3f3e <LCD_VidSendChar>
    4414:	41 c2       	rjmp	.+1154   	; 0x4898 <LCD_VidPrintVar+0x504>
		return ;
	}//end if

	// to know the count of digit in the number
	while (  Copy_U8Var / (LCD_U32Pow(10,i) )  != 0 ){
		i++ ;
    4416:	8a 81       	ldd	r24, Y+2	; 0x02
    4418:	8f 5f       	subi	r24, 0xFF	; 255
    441a:	8a 83       	std	Y+2, r24	; 0x02
		LCD_VidSendChar('0');
		return ;
	}//end if

	// to know the count of digit in the number
	while (  Copy_U8Var / (LCD_U32Pow(10,i) )  != 0 ){
    441c:	8a e0       	ldi	r24, 0x0A	; 10
    441e:	6a 81       	ldd	r22, Y+2	; 0x02
    4420:	0e 94 9f 21 	call	0x433e	; 0x433e <LCD_U32Pow>
    4424:	1c 01       	movw	r2, r24
    4426:	44 24       	eor	r4, r4
    4428:	55 24       	eor	r5, r5
    442a:	66 24       	eor	r6, r6
    442c:	77 24       	eor	r7, r7
    442e:	43 01       	movw	r8, r6
    4430:	2b 85       	ldd	r18, Y+11	; 0x0b
    4432:	3c 85       	ldd	r19, Y+12	; 0x0c
    4434:	4d 85       	ldd	r20, Y+13	; 0x0d
    4436:	5e 85       	ldd	r21, Y+14	; 0x0e
    4438:	6f 85       	ldd	r22, Y+15	; 0x0f
    443a:	78 89       	ldd	r23, Y+16	; 0x10
    443c:	89 89       	ldd	r24, Y+17	; 0x11
    443e:	9a 89       	ldd	r25, Y+18	; 0x12
    4440:	a2 2c       	mov	r10, r2
    4442:	b3 2c       	mov	r11, r3
    4444:	c4 2c       	mov	r12, r4
    4446:	d5 2c       	mov	r13, r5
    4448:	e6 2c       	mov	r14, r6
    444a:	f7 2c       	mov	r15, r7
    444c:	08 2d       	mov	r16, r8
    444e:	19 2d       	mov	r17, r9
    4450:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__udivdi3>
    4454:	a2 2e       	mov	r10, r18
    4456:	b3 2e       	mov	r11, r19
    4458:	c4 2e       	mov	r12, r20
    445a:	d5 2e       	mov	r13, r21
    445c:	e6 2e       	mov	r14, r22
    445e:	f7 2e       	mov	r15, r23
    4460:	08 2f       	mov	r16, r24
    4462:	19 2f       	mov	r17, r25
    4464:	2a 2d       	mov	r18, r10
    4466:	3b 2d       	mov	r19, r11
    4468:	4c 2d       	mov	r20, r12
    446a:	5d 2d       	mov	r21, r13
    446c:	6e 2d       	mov	r22, r14
    446e:	7f 2d       	mov	r23, r15
    4470:	80 2f       	mov	r24, r16
    4472:	91 2f       	mov	r25, r17
    4474:	e2 2f       	mov	r30, r18
    4476:	e3 2b       	or	r30, r19
    4478:	e4 2b       	or	r30, r20
    447a:	e5 2b       	or	r30, r21
    447c:	e6 2b       	or	r30, r22
    447e:	e7 2b       	or	r30, r23
    4480:	e8 2b       	or	r30, r24
    4482:	e9 2b       	or	r30, r25
    4484:	ee 23       	and	r30, r30
    4486:	39 f6       	brne	.-114    	; 0x4416 <LCD_VidPrintVar+0x82>
		i++ ;
	}

	s8 copy_i = i-1 ;
    4488:	8a 81       	ldd	r24, Y+2	; 0x02
    448a:	81 50       	subi	r24, 0x01	; 1
    448c:	89 83       	std	Y+1, r24	; 0x01
    448e:	9a c1       	rjmp	.+820    	; 0x47c4 <LCD_VidPrintVar+0x430>

	// to reverse the arrang of digits in num
	while ( copy_i >= 0 ){
		local_num += (Copy_U8Var % 10) * ( LCD_U32Pow(10,copy_i) ) ;
    4490:	ab 84       	ldd	r10, Y+11	; 0x0b
    4492:	bc 84       	ldd	r11, Y+12	; 0x0c
    4494:	cd 84       	ldd	r12, Y+13	; 0x0d
    4496:	de 84       	ldd	r13, Y+14	; 0x0e
    4498:	ef 84       	ldd	r14, Y+15	; 0x0f
    449a:	f8 88       	ldd	r15, Y+16	; 0x10
    449c:	09 89       	ldd	r16, Y+17	; 0x11
    449e:	1a 89       	ldd	r17, Y+18	; 0x12
    44a0:	2a 2d       	mov	r18, r10
    44a2:	3b 2d       	mov	r19, r11
    44a4:	4c 2d       	mov	r20, r12
    44a6:	5d 2d       	mov	r21, r13
    44a8:	6e 2d       	mov	r22, r14
    44aa:	7f 2d       	mov	r23, r15
    44ac:	80 2f       	mov	r24, r16
    44ae:	91 2f       	mov	r25, r17
    44b0:	0f 2e       	mov	r0, r31
    44b2:	fa e0       	ldi	r31, 0x0A	; 10
    44b4:	af 2e       	mov	r10, r31
    44b6:	f0 2d       	mov	r31, r0
    44b8:	bb 24       	eor	r11, r11
    44ba:	cc 24       	eor	r12, r12
    44bc:	dd 24       	eor	r13, r13
    44be:	ee 24       	eor	r14, r14
    44c0:	ff 24       	eor	r15, r15
    44c2:	00 e0       	ldi	r16, 0x00	; 0
    44c4:	10 e0       	ldi	r17, 0x00	; 0
    44c6:	0e 94 e5 07 	call	0xfca	; 0xfca <__umoddi3>
    44ca:	a2 2e       	mov	r10, r18
    44cc:	b3 2e       	mov	r11, r19
    44ce:	c4 2e       	mov	r12, r20
    44d0:	d5 2e       	mov	r13, r21
    44d2:	e6 2e       	mov	r14, r22
    44d4:	f7 2e       	mov	r15, r23
    44d6:	08 2f       	mov	r16, r24
    44d8:	19 2f       	mov	r17, r25
    44da:	2a 2c       	mov	r2, r10
    44dc:	3b 2c       	mov	r3, r11
    44de:	4c 2c       	mov	r4, r12
    44e0:	5d 2c       	mov	r5, r13
    44e2:	6e 2c       	mov	r6, r14
    44e4:	7f 2c       	mov	r7, r15
    44e6:	80 2e       	mov	r8, r16
    44e8:	91 2e       	mov	r9, r17
    44ea:	99 81       	ldd	r25, Y+1	; 0x01
    44ec:	8a e0       	ldi	r24, 0x0A	; 10
    44ee:	69 2f       	mov	r22, r25
    44f0:	0e 94 9f 21 	call	0x433e	; 0x433e <LCD_U32Pow>
    44f4:	8c 01       	movw	r16, r24
    44f6:	20 e0       	ldi	r18, 0x00	; 0
    44f8:	30 e0       	ldi	r19, 0x00	; 0
    44fa:	40 e0       	ldi	r20, 0x00	; 0
    44fc:	50 e0       	ldi	r21, 0x00	; 0
    44fe:	60 e0       	ldi	r22, 0x00	; 0
    4500:	70 e0       	ldi	r23, 0x00	; 0
    4502:	0b 8f       	std	Y+27, r16	; 0x1b
    4504:	1c 8f       	std	Y+28, r17	; 0x1c
    4506:	2d 8f       	std	Y+29, r18	; 0x1d
    4508:	3e 8f       	std	Y+30, r19	; 0x1e
    450a:	4f 8f       	std	Y+31, r20	; 0x1f
    450c:	58 a3       	std	Y+32, r21	; 0x20
    450e:	69 a3       	std	Y+33, r22	; 0x21
    4510:	7a a3       	std	Y+34, r23	; 0x22
    4512:	22 2d       	mov	r18, r2
    4514:	33 2d       	mov	r19, r3
    4516:	44 2d       	mov	r20, r4
    4518:	55 2d       	mov	r21, r5
    451a:	66 2d       	mov	r22, r6
    451c:	77 2d       	mov	r23, r7
    451e:	88 2d       	mov	r24, r8
    4520:	99 2d       	mov	r25, r9
    4522:	ab 8c       	ldd	r10, Y+27	; 0x1b
    4524:	bc 8c       	ldd	r11, Y+28	; 0x1c
    4526:	cd 8c       	ldd	r12, Y+29	; 0x1d
    4528:	de 8c       	ldd	r13, Y+30	; 0x1e
    452a:	ef 8c       	ldd	r14, Y+31	; 0x1f
    452c:	f8 a0       	ldd	r15, Y+32	; 0x20
    452e:	09 a1       	ldd	r16, Y+33	; 0x21
    4530:	1a a1       	ldd	r17, Y+34	; 0x22
    4532:	0e 94 49 00 	call	0x92	; 0x92 <__muldi3>
    4536:	a2 2e       	mov	r10, r18
    4538:	b3 2e       	mov	r11, r19
    453a:	c4 2e       	mov	r12, r20
    453c:	d5 2e       	mov	r13, r21
    453e:	e6 2e       	mov	r14, r22
    4540:	f7 2e       	mov	r15, r23
    4542:	08 2f       	mov	r16, r24
    4544:	19 2f       	mov	r17, r25
    4546:	ab 8a       	std	Y+19, r10	; 0x13
    4548:	bc 8a       	std	Y+20, r11	; 0x14
    454a:	cd 8a       	std	Y+21, r12	; 0x15
    454c:	de 8a       	std	Y+22, r13	; 0x16
    454e:	ef 8a       	std	Y+23, r14	; 0x17
    4550:	f8 8e       	std	Y+24, r15	; 0x18
    4552:	09 8f       	std	Y+25, r16	; 0x19
    4554:	1a 8f       	std	Y+26, r17	; 0x1a
    4556:	1b 81       	ldd	r17, Y+3	; 0x03
    4558:	1b a3       	std	Y+35, r17	; 0x23
    455a:	2c 81       	ldd	r18, Y+4	; 0x04
    455c:	2c a3       	std	Y+36, r18	; 0x24
    455e:	3d 81       	ldd	r19, Y+5	; 0x05
    4560:	3d a3       	std	Y+37, r19	; 0x25
    4562:	4e 81       	ldd	r20, Y+6	; 0x06
    4564:	4e a3       	std	Y+38, r20	; 0x26
    4566:	5f 81       	ldd	r21, Y+7	; 0x07
    4568:	5f a3       	std	Y+39, r21	; 0x27
    456a:	68 85       	ldd	r22, Y+8	; 0x08
    456c:	68 a7       	std	Y+40, r22	; 0x28
    456e:	79 85       	ldd	r23, Y+9	; 0x09
    4570:	79 a7       	std	Y+41, r23	; 0x29
    4572:	8a 85       	ldd	r24, Y+10	; 0x0a
    4574:	8a a7       	std	Y+42, r24	; 0x2a
    4576:	9b a1       	ldd	r25, Y+35	; 0x23
    4578:	0b 89       	ldd	r16, Y+19	; 0x13
    457a:	90 0f       	add	r25, r16
    457c:	9b a7       	std	Y+43, r25	; 0x2b
    457e:	11 e0       	ldi	r17, 0x01	; 1
    4580:	1b ab       	std	Y+51, r17	; 0x33
    4582:	2b a5       	ldd	r18, Y+43	; 0x2b
    4584:	3b a1       	ldd	r19, Y+35	; 0x23
    4586:	23 17       	cp	r18, r19
    4588:	08 f0       	brcs	.+2      	; 0x458c <LCD_VidPrintVar+0x1f8>
    458a:	1b aa       	std	Y+51, r1	; 0x33
    458c:	4c a1       	ldd	r20, Y+36	; 0x24
    458e:	5c 89       	ldd	r21, Y+20	; 0x14
    4590:	45 0f       	add	r20, r21
    4592:	4c a7       	std	Y+44, r20	; 0x2c
    4594:	61 e0       	ldi	r22, 0x01	; 1
    4596:	6c ab       	std	Y+52, r22	; 0x34
    4598:	7c a5       	ldd	r23, Y+44	; 0x2c
    459a:	8c a1       	ldd	r24, Y+36	; 0x24
    459c:	78 17       	cp	r23, r24
    459e:	08 f0       	brcs	.+2      	; 0x45a2 <LCD_VidPrintVar+0x20e>
    45a0:	1c aa       	std	Y+52, r1	; 0x34
    45a2:	9b a9       	ldd	r25, Y+51	; 0x33
    45a4:	0c a5       	ldd	r16, Y+44	; 0x2c
    45a6:	90 0f       	add	r25, r16
    45a8:	9d ab       	std	Y+53, r25	; 0x35
    45aa:	11 e0       	ldi	r17, 0x01	; 1
    45ac:	1e ab       	std	Y+54, r17	; 0x36
    45ae:	2d a9       	ldd	r18, Y+53	; 0x35
    45b0:	3c a5       	ldd	r19, Y+44	; 0x2c
    45b2:	23 17       	cp	r18, r19
    45b4:	08 f0       	brcs	.+2      	; 0x45b8 <LCD_VidPrintVar+0x224>
    45b6:	1e aa       	std	Y+54, r1	; 0x36
    45b8:	4c a9       	ldd	r20, Y+52	; 0x34
    45ba:	5e a9       	ldd	r21, Y+54	; 0x36
    45bc:	45 2b       	or	r20, r21
    45be:	4c ab       	std	Y+52, r20	; 0x34
    45c0:	6d a9       	ldd	r22, Y+53	; 0x35
    45c2:	6c a7       	std	Y+44, r22	; 0x2c
    45c4:	7d a1       	ldd	r23, Y+37	; 0x25
    45c6:	8d 89       	ldd	r24, Y+21	; 0x15
    45c8:	78 0f       	add	r23, r24
    45ca:	7d a7       	std	Y+45, r23	; 0x2d
    45cc:	91 e0       	ldi	r25, 0x01	; 1
    45ce:	9f ab       	std	Y+55, r25	; 0x37
    45d0:	0d a5       	ldd	r16, Y+45	; 0x2d
    45d2:	1d a1       	ldd	r17, Y+37	; 0x25
    45d4:	01 17       	cp	r16, r17
    45d6:	08 f0       	brcs	.+2      	; 0x45da <LCD_VidPrintVar+0x246>
    45d8:	1f aa       	std	Y+55, r1	; 0x37
    45da:	2c a9       	ldd	r18, Y+52	; 0x34
    45dc:	3d a5       	ldd	r19, Y+45	; 0x2d
    45de:	23 0f       	add	r18, r19
    45e0:	28 af       	std	Y+56, r18	; 0x38
    45e2:	41 e0       	ldi	r20, 0x01	; 1
    45e4:	49 af       	std	Y+57, r20	; 0x39
    45e6:	58 ad       	ldd	r21, Y+56	; 0x38
    45e8:	6d a5       	ldd	r22, Y+45	; 0x2d
    45ea:	56 17       	cp	r21, r22
    45ec:	08 f0       	brcs	.+2      	; 0x45f0 <LCD_VidPrintVar+0x25c>
    45ee:	19 ae       	std	Y+57, r1	; 0x39
    45f0:	7f a9       	ldd	r23, Y+55	; 0x37
    45f2:	89 ad       	ldd	r24, Y+57	; 0x39
    45f4:	78 2b       	or	r23, r24
    45f6:	7f ab       	std	Y+55, r23	; 0x37
    45f8:	98 ad       	ldd	r25, Y+56	; 0x38
    45fa:	9d a7       	std	Y+45, r25	; 0x2d
    45fc:	0e a1       	ldd	r16, Y+38	; 0x26
    45fe:	1e 89       	ldd	r17, Y+22	; 0x16
    4600:	01 0f       	add	r16, r17
    4602:	0e a7       	std	Y+46, r16	; 0x2e
    4604:	21 e0       	ldi	r18, 0x01	; 1
    4606:	2a af       	std	Y+58, r18	; 0x3a
    4608:	3e a5       	ldd	r19, Y+46	; 0x2e
    460a:	4e a1       	ldd	r20, Y+38	; 0x26
    460c:	34 17       	cp	r19, r20
    460e:	08 f0       	brcs	.+2      	; 0x4612 <LCD_VidPrintVar+0x27e>
    4610:	1a ae       	std	Y+58, r1	; 0x3a
    4612:	5f a9       	ldd	r21, Y+55	; 0x37
    4614:	6e a5       	ldd	r22, Y+46	; 0x2e
    4616:	56 0f       	add	r21, r22
    4618:	5b af       	std	Y+59, r21	; 0x3b
    461a:	71 e0       	ldi	r23, 0x01	; 1
    461c:	7c af       	std	Y+60, r23	; 0x3c
    461e:	8b ad       	ldd	r24, Y+59	; 0x3b
    4620:	9e a5       	ldd	r25, Y+46	; 0x2e
    4622:	89 17       	cp	r24, r25
    4624:	08 f0       	brcs	.+2      	; 0x4628 <LCD_VidPrintVar+0x294>
    4626:	1c ae       	std	Y+60, r1	; 0x3c
    4628:	0a ad       	ldd	r16, Y+58	; 0x3a
    462a:	1c ad       	ldd	r17, Y+60	; 0x3c
    462c:	01 2b       	or	r16, r17
    462e:	0a af       	std	Y+58, r16	; 0x3a
    4630:	2b ad       	ldd	r18, Y+59	; 0x3b
    4632:	2e a7       	std	Y+46, r18	; 0x2e
    4634:	3f a1       	ldd	r19, Y+39	; 0x27
    4636:	4f 89       	ldd	r20, Y+23	; 0x17
    4638:	34 0f       	add	r19, r20
    463a:	3f a7       	std	Y+47, r19	; 0x2f
    463c:	51 e0       	ldi	r21, 0x01	; 1
    463e:	5d af       	std	Y+61, r21	; 0x3d
    4640:	6f a5       	ldd	r22, Y+47	; 0x2f
    4642:	7f a1       	ldd	r23, Y+39	; 0x27
    4644:	67 17       	cp	r22, r23
    4646:	08 f0       	brcs	.+2      	; 0x464a <LCD_VidPrintVar+0x2b6>
    4648:	1d ae       	std	Y+61, r1	; 0x3d
    464a:	8a ad       	ldd	r24, Y+58	; 0x3a
    464c:	9f a5       	ldd	r25, Y+47	; 0x2f
    464e:	89 0f       	add	r24, r25
    4650:	8e af       	std	Y+62, r24	; 0x3e
    4652:	01 e0       	ldi	r16, 0x01	; 1
    4654:	0f af       	std	Y+63, r16	; 0x3f
    4656:	1e ad       	ldd	r17, Y+62	; 0x3e
    4658:	2f a5       	ldd	r18, Y+47	; 0x2f
    465a:	12 17       	cp	r17, r18
    465c:	08 f0       	brcs	.+2      	; 0x4660 <LCD_VidPrintVar+0x2cc>
    465e:	1f ae       	std	Y+63, r1	; 0x3f
    4660:	3d ad       	ldd	r19, Y+61	; 0x3d
    4662:	4f ad       	ldd	r20, Y+63	; 0x3f
    4664:	34 2b       	or	r19, r20
    4666:	3d af       	std	Y+61, r19	; 0x3d
    4668:	5e ad       	ldd	r21, Y+62	; 0x3e
    466a:	5f a7       	std	Y+47, r21	; 0x2f
    466c:	68 a5       	ldd	r22, Y+40	; 0x28
    466e:	78 8d       	ldd	r23, Y+24	; 0x18
    4670:	67 0f       	add	r22, r23
    4672:	68 ab       	std	Y+48, r22	; 0x30
    4674:	81 e0       	ldi	r24, 0x01	; 1
    4676:	21 96       	adiw	r28, 0x01	; 1
    4678:	8f af       	std	Y+63, r24	; 0x3f
    467a:	21 97       	sbiw	r28, 0x01	; 1
    467c:	98 a9       	ldd	r25, Y+48	; 0x30
    467e:	08 a5       	ldd	r16, Y+40	; 0x28
    4680:	90 17       	cp	r25, r16
    4682:	18 f0       	brcs	.+6      	; 0x468a <LCD_VidPrintVar+0x2f6>
    4684:	21 96       	adiw	r28, 0x01	; 1
    4686:	1f ae       	std	Y+63, r1	; 0x3f
    4688:	21 97       	sbiw	r28, 0x01	; 1
    468a:	1d ad       	ldd	r17, Y+61	; 0x3d
    468c:	28 a9       	ldd	r18, Y+48	; 0x30
    468e:	12 0f       	add	r17, r18
    4690:	22 96       	adiw	r28, 0x02	; 2
    4692:	1f af       	std	Y+63, r17	; 0x3f
    4694:	22 97       	sbiw	r28, 0x02	; 2
    4696:	31 e0       	ldi	r19, 0x01	; 1
    4698:	23 96       	adiw	r28, 0x03	; 3
    469a:	3f af       	std	Y+63, r19	; 0x3f
    469c:	23 97       	sbiw	r28, 0x03	; 3
    469e:	22 96       	adiw	r28, 0x02	; 2
    46a0:	4f ad       	ldd	r20, Y+63	; 0x3f
    46a2:	22 97       	sbiw	r28, 0x02	; 2
    46a4:	58 a9       	ldd	r21, Y+48	; 0x30
    46a6:	45 17       	cp	r20, r21
    46a8:	18 f0       	brcs	.+6      	; 0x46b0 <LCD_VidPrintVar+0x31c>
    46aa:	23 96       	adiw	r28, 0x03	; 3
    46ac:	1f ae       	std	Y+63, r1	; 0x3f
    46ae:	23 97       	sbiw	r28, 0x03	; 3
    46b0:	21 96       	adiw	r28, 0x01	; 1
    46b2:	6f ad       	ldd	r22, Y+63	; 0x3f
    46b4:	21 97       	sbiw	r28, 0x01	; 1
    46b6:	23 96       	adiw	r28, 0x03	; 3
    46b8:	7f ad       	ldd	r23, Y+63	; 0x3f
    46ba:	23 97       	sbiw	r28, 0x03	; 3
    46bc:	67 2b       	or	r22, r23
    46be:	21 96       	adiw	r28, 0x01	; 1
    46c0:	6f af       	std	Y+63, r22	; 0x3f
    46c2:	21 97       	sbiw	r28, 0x01	; 1
    46c4:	22 96       	adiw	r28, 0x02	; 2
    46c6:	8f ad       	ldd	r24, Y+63	; 0x3f
    46c8:	22 97       	sbiw	r28, 0x02	; 2
    46ca:	88 ab       	std	Y+48, r24	; 0x30
    46cc:	99 a5       	ldd	r25, Y+41	; 0x29
    46ce:	09 8d       	ldd	r16, Y+25	; 0x19
    46d0:	90 0f       	add	r25, r16
    46d2:	99 ab       	std	Y+49, r25	; 0x31
    46d4:	11 e0       	ldi	r17, 0x01	; 1
    46d6:	24 96       	adiw	r28, 0x04	; 4
    46d8:	1f af       	std	Y+63, r17	; 0x3f
    46da:	24 97       	sbiw	r28, 0x04	; 4
    46dc:	29 a9       	ldd	r18, Y+49	; 0x31
    46de:	39 a5       	ldd	r19, Y+41	; 0x29
    46e0:	23 17       	cp	r18, r19
    46e2:	18 f0       	brcs	.+6      	; 0x46ea <LCD_VidPrintVar+0x356>
    46e4:	24 96       	adiw	r28, 0x04	; 4
    46e6:	1f ae       	std	Y+63, r1	; 0x3f
    46e8:	24 97       	sbiw	r28, 0x04	; 4
    46ea:	21 96       	adiw	r28, 0x01	; 1
    46ec:	4f ad       	ldd	r20, Y+63	; 0x3f
    46ee:	21 97       	sbiw	r28, 0x01	; 1
    46f0:	59 a9       	ldd	r21, Y+49	; 0x31
    46f2:	45 0f       	add	r20, r21
    46f4:	25 96       	adiw	r28, 0x05	; 5
    46f6:	4f af       	std	Y+63, r20	; 0x3f
    46f8:	25 97       	sbiw	r28, 0x05	; 5
    46fa:	61 e0       	ldi	r22, 0x01	; 1
    46fc:	26 96       	adiw	r28, 0x06	; 6
    46fe:	6f af       	std	Y+63, r22	; 0x3f
    4700:	26 97       	sbiw	r28, 0x06	; 6
    4702:	25 96       	adiw	r28, 0x05	; 5
    4704:	7f ad       	ldd	r23, Y+63	; 0x3f
    4706:	25 97       	sbiw	r28, 0x05	; 5
    4708:	89 a9       	ldd	r24, Y+49	; 0x31
    470a:	78 17       	cp	r23, r24
    470c:	18 f0       	brcs	.+6      	; 0x4714 <LCD_VidPrintVar+0x380>
    470e:	26 96       	adiw	r28, 0x06	; 6
    4710:	1f ae       	std	Y+63, r1	; 0x3f
    4712:	26 97       	sbiw	r28, 0x06	; 6
    4714:	24 96       	adiw	r28, 0x04	; 4
    4716:	9f ad       	ldd	r25, Y+63	; 0x3f
    4718:	24 97       	sbiw	r28, 0x04	; 4
    471a:	26 96       	adiw	r28, 0x06	; 6
    471c:	0f ad       	ldd	r16, Y+63	; 0x3f
    471e:	26 97       	sbiw	r28, 0x06	; 6
    4720:	90 2b       	or	r25, r16
    4722:	24 96       	adiw	r28, 0x04	; 4
    4724:	9f af       	std	Y+63, r25	; 0x3f
    4726:	24 97       	sbiw	r28, 0x04	; 4
    4728:	25 96       	adiw	r28, 0x05	; 5
    472a:	1f ad       	ldd	r17, Y+63	; 0x3f
    472c:	25 97       	sbiw	r28, 0x05	; 5
    472e:	19 ab       	std	Y+49, r17	; 0x31
    4730:	2a a5       	ldd	r18, Y+42	; 0x2a
    4732:	3a 8d       	ldd	r19, Y+26	; 0x1a
    4734:	23 0f       	add	r18, r19
    4736:	2a ab       	std	Y+50, r18	; 0x32
    4738:	24 96       	adiw	r28, 0x04	; 4
    473a:	8f ad       	ldd	r24, Y+63	; 0x3f
    473c:	24 97       	sbiw	r28, 0x04	; 4
    473e:	4a a9       	ldd	r20, Y+50	; 0x32
    4740:	84 0f       	add	r24, r20
    4742:	8a ab       	std	Y+50, r24	; 0x32
    4744:	5b a5       	ldd	r21, Y+43	; 0x2b
    4746:	5b 83       	std	Y+3, r21	; 0x03
    4748:	6c a5       	ldd	r22, Y+44	; 0x2c
    474a:	6c 83       	std	Y+4, r22	; 0x04
    474c:	7d a5       	ldd	r23, Y+45	; 0x2d
    474e:	7d 83       	std	Y+5, r23	; 0x05
    4750:	8e a5       	ldd	r24, Y+46	; 0x2e
    4752:	8e 83       	std	Y+6, r24	; 0x06
    4754:	9f a5       	ldd	r25, Y+47	; 0x2f
    4756:	9f 83       	std	Y+7, r25	; 0x07
    4758:	08 a9       	ldd	r16, Y+48	; 0x30
    475a:	08 87       	std	Y+8, r16	; 0x08
    475c:	19 a9       	ldd	r17, Y+49	; 0x31
    475e:	19 87       	std	Y+9, r17	; 0x09
    4760:	2a a9       	ldd	r18, Y+50	; 0x32
    4762:	2a 87       	std	Y+10, r18	; 0x0a
		Copy_U8Var/=10 ;
    4764:	ab 84       	ldd	r10, Y+11	; 0x0b
    4766:	bc 84       	ldd	r11, Y+12	; 0x0c
    4768:	cd 84       	ldd	r12, Y+13	; 0x0d
    476a:	de 84       	ldd	r13, Y+14	; 0x0e
    476c:	ef 84       	ldd	r14, Y+15	; 0x0f
    476e:	f8 88       	ldd	r15, Y+16	; 0x10
    4770:	09 89       	ldd	r16, Y+17	; 0x11
    4772:	1a 89       	ldd	r17, Y+18	; 0x12
    4774:	2a 2d       	mov	r18, r10
    4776:	3b 2d       	mov	r19, r11
    4778:	4c 2d       	mov	r20, r12
    477a:	5d 2d       	mov	r21, r13
    477c:	6e 2d       	mov	r22, r14
    477e:	7f 2d       	mov	r23, r15
    4780:	80 2f       	mov	r24, r16
    4782:	91 2f       	mov	r25, r17
    4784:	0f 2e       	mov	r0, r31
    4786:	fa e0       	ldi	r31, 0x0A	; 10
    4788:	af 2e       	mov	r10, r31
    478a:	f0 2d       	mov	r31, r0
    478c:	bb 24       	eor	r11, r11
    478e:	cc 24       	eor	r12, r12
    4790:	dd 24       	eor	r13, r13
    4792:	ee 24       	eor	r14, r14
    4794:	ff 24       	eor	r15, r15
    4796:	00 e0       	ldi	r16, 0x00	; 0
    4798:	10 e0       	ldi	r17, 0x00	; 0
    479a:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__udivdi3>
    479e:	a2 2e       	mov	r10, r18
    47a0:	b3 2e       	mov	r11, r19
    47a2:	c4 2e       	mov	r12, r20
    47a4:	d5 2e       	mov	r13, r21
    47a6:	e6 2e       	mov	r14, r22
    47a8:	f7 2e       	mov	r15, r23
    47aa:	08 2f       	mov	r16, r24
    47ac:	19 2f       	mov	r17, r25
    47ae:	ab 86       	std	Y+11, r10	; 0x0b
    47b0:	bc 86       	std	Y+12, r11	; 0x0c
    47b2:	cd 86       	std	Y+13, r12	; 0x0d
    47b4:	de 86       	std	Y+14, r13	; 0x0e
    47b6:	ef 86       	std	Y+15, r14	; 0x0f
    47b8:	f8 8a       	std	Y+16, r15	; 0x10
    47ba:	09 8b       	std	Y+17, r16	; 0x11
    47bc:	1a 8b       	std	Y+18, r17	; 0x12
		copy_i-- ;
    47be:	89 81       	ldd	r24, Y+1	; 0x01
    47c0:	81 50       	subi	r24, 0x01	; 1
    47c2:	89 83       	std	Y+1, r24	; 0x01
	}

	s8 copy_i = i-1 ;

	// to reverse the arrang of digits in num
	while ( copy_i >= 0 ){
    47c4:	89 81       	ldd	r24, Y+1	; 0x01
    47c6:	88 23       	and	r24, r24
    47c8:	0c f0       	brlt	.+2      	; 0x47cc <LCD_VidPrintVar+0x438>
    47ca:	62 ce       	rjmp	.-828    	; 0x4490 <LCD_VidPrintVar+0xfc>
    47cc:	61 c0       	rjmp	.+194    	; 0x4890 <LCD_VidPrintVar+0x4fc>
		copy_i-- ;
	}//end while

	// to print the digit in arrange
	while( i > 0 ){
		LCD_VidSendChar( (local_num % 10) +'0' ) ;
    47ce:	ab 80       	ldd	r10, Y+3	; 0x03
    47d0:	bc 80       	ldd	r11, Y+4	; 0x04
    47d2:	cd 80       	ldd	r12, Y+5	; 0x05
    47d4:	de 80       	ldd	r13, Y+6	; 0x06
    47d6:	ef 80       	ldd	r14, Y+7	; 0x07
    47d8:	f8 84       	ldd	r15, Y+8	; 0x08
    47da:	09 85       	ldd	r16, Y+9	; 0x09
    47dc:	1a 85       	ldd	r17, Y+10	; 0x0a
    47de:	2a 2d       	mov	r18, r10
    47e0:	3b 2d       	mov	r19, r11
    47e2:	4c 2d       	mov	r20, r12
    47e4:	5d 2d       	mov	r21, r13
    47e6:	6e 2d       	mov	r22, r14
    47e8:	7f 2d       	mov	r23, r15
    47ea:	80 2f       	mov	r24, r16
    47ec:	91 2f       	mov	r25, r17
    47ee:	0f 2e       	mov	r0, r31
    47f0:	fa e0       	ldi	r31, 0x0A	; 10
    47f2:	af 2e       	mov	r10, r31
    47f4:	f0 2d       	mov	r31, r0
    47f6:	bb 24       	eor	r11, r11
    47f8:	cc 24       	eor	r12, r12
    47fa:	dd 24       	eor	r13, r13
    47fc:	ee 24       	eor	r14, r14
    47fe:	ff 24       	eor	r15, r15
    4800:	00 e0       	ldi	r16, 0x00	; 0
    4802:	10 e0       	ldi	r17, 0x00	; 0
    4804:	0e 94 e5 07 	call	0xfca	; 0xfca <__umoddi3>
    4808:	a2 2e       	mov	r10, r18
    480a:	b3 2e       	mov	r11, r19
    480c:	c4 2e       	mov	r12, r20
    480e:	d5 2e       	mov	r13, r21
    4810:	e6 2e       	mov	r14, r22
    4812:	f7 2e       	mov	r15, r23
    4814:	08 2f       	mov	r16, r24
    4816:	19 2f       	mov	r17, r25
    4818:	2a 2d       	mov	r18, r10
    481a:	3b 2d       	mov	r19, r11
    481c:	4c 2d       	mov	r20, r12
    481e:	5d 2d       	mov	r21, r13
    4820:	6e 2d       	mov	r22, r14
    4822:	7f 2d       	mov	r23, r15
    4824:	80 2f       	mov	r24, r16
    4826:	91 2f       	mov	r25, r17
    4828:	82 2f       	mov	r24, r18
    482a:	80 5d       	subi	r24, 0xD0	; 208
    482c:	0e 94 9f 1f 	call	0x3f3e	; 0x3f3e <LCD_VidSendChar>
		local_num /= 10 ;
    4830:	ab 80       	ldd	r10, Y+3	; 0x03
    4832:	bc 80       	ldd	r11, Y+4	; 0x04
    4834:	cd 80       	ldd	r12, Y+5	; 0x05
    4836:	de 80       	ldd	r13, Y+6	; 0x06
    4838:	ef 80       	ldd	r14, Y+7	; 0x07
    483a:	f8 84       	ldd	r15, Y+8	; 0x08
    483c:	09 85       	ldd	r16, Y+9	; 0x09
    483e:	1a 85       	ldd	r17, Y+10	; 0x0a
    4840:	2a 2d       	mov	r18, r10
    4842:	3b 2d       	mov	r19, r11
    4844:	4c 2d       	mov	r20, r12
    4846:	5d 2d       	mov	r21, r13
    4848:	6e 2d       	mov	r22, r14
    484a:	7f 2d       	mov	r23, r15
    484c:	80 2f       	mov	r24, r16
    484e:	91 2f       	mov	r25, r17
    4850:	0f 2e       	mov	r0, r31
    4852:	fa e0       	ldi	r31, 0x0A	; 10
    4854:	af 2e       	mov	r10, r31
    4856:	f0 2d       	mov	r31, r0
    4858:	bb 24       	eor	r11, r11
    485a:	cc 24       	eor	r12, r12
    485c:	dd 24       	eor	r13, r13
    485e:	ee 24       	eor	r14, r14
    4860:	ff 24       	eor	r15, r15
    4862:	00 e0       	ldi	r16, 0x00	; 0
    4864:	10 e0       	ldi	r17, 0x00	; 0
    4866:	0e 94 70 01 	call	0x2e0	; 0x2e0 <__udivdi3>
    486a:	a2 2e       	mov	r10, r18
    486c:	b3 2e       	mov	r11, r19
    486e:	c4 2e       	mov	r12, r20
    4870:	d5 2e       	mov	r13, r21
    4872:	e6 2e       	mov	r14, r22
    4874:	f7 2e       	mov	r15, r23
    4876:	08 2f       	mov	r16, r24
    4878:	19 2f       	mov	r17, r25
    487a:	ab 82       	std	Y+3, r10	; 0x03
    487c:	bc 82       	std	Y+4, r11	; 0x04
    487e:	cd 82       	std	Y+5, r12	; 0x05
    4880:	de 82       	std	Y+6, r13	; 0x06
    4882:	ef 82       	std	Y+7, r14	; 0x07
    4884:	f8 86       	std	Y+8, r15	; 0x08
    4886:	09 87       	std	Y+9, r16	; 0x09
    4888:	1a 87       	std	Y+10, r17	; 0x0a
		i--;
    488a:	8a 81       	ldd	r24, Y+2	; 0x02
    488c:	81 50       	subi	r24, 0x01	; 1
    488e:	8a 83       	std	Y+2, r24	; 0x02
		Copy_U8Var/=10 ;
		copy_i-- ;
	}//end while

	// to print the digit in arrange
	while( i > 0 ){
    4890:	8a 81       	ldd	r24, Y+2	; 0x02
    4892:	88 23       	and	r24, r24
    4894:	09 f0       	breq	.+2      	; 0x4898 <LCD_VidPrintVar+0x504>
    4896:	9b cf       	rjmp	.-202    	; 0x47ce <LCD_VidPrintVar+0x43a>
		LCD_VidSendChar( (local_num % 10) +'0' ) ;
		local_num /= 10 ;
		i--;
	}//end while

}
    4898:	cb 5b       	subi	r28, 0xBB	; 187
    489a:	df 4f       	sbci	r29, 0xFF	; 255
    489c:	0f b6       	in	r0, 0x3f	; 63
    489e:	f8 94       	cli
    48a0:	de bf       	out	0x3e, r29	; 62
    48a2:	0f be       	out	0x3f, r0	; 63
    48a4:	cd bf       	out	0x3d, r28	; 61
    48a6:	cf 91       	pop	r28
    48a8:	df 91       	pop	r29
    48aa:	1f 91       	pop	r17
    48ac:	0f 91       	pop	r16
    48ae:	ff 90       	pop	r15
    48b0:	ef 90       	pop	r14
    48b2:	df 90       	pop	r13
    48b4:	cf 90       	pop	r12
    48b6:	bf 90       	pop	r11
    48b8:	af 90       	pop	r10
    48ba:	9f 90       	pop	r9
    48bc:	8f 90       	pop	r8
    48be:	7f 90       	pop	r7
    48c0:	6f 90       	pop	r6
    48c2:	5f 90       	pop	r5
    48c4:	4f 90       	pop	r4
    48c6:	3f 90       	pop	r3
    48c8:	2f 90       	pop	r2
    48ca:	08 95       	ret

000048cc <LCD_VidPosCur>:
void LCD_VidPosCur(u8 Copy_U8Row , u8 Copy_U8Col ) {
    48cc:	df 93       	push	r29
    48ce:	cf 93       	push	r28
    48d0:	00 d0       	rcall	.+0      	; 0x48d2 <LCD_VidPosCur+0x6>
    48d2:	0f 92       	push	r0
    48d4:	cd b7       	in	r28, 0x3d	; 61
    48d6:	de b7       	in	r29, 0x3e	; 62
    48d8:	8a 83       	std	Y+2, r24	; 0x02
    48da:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_Address = 0 ;
    48dc:	19 82       	std	Y+1, r1	; 0x01
	if (Copy_U8Row == 0)
    48de:	8a 81       	ldd	r24, Y+2	; 0x02
    48e0:	88 23       	and	r24, r24
    48e2:	19 f4       	brne	.+6      	; 0x48ea <LCD_VidPosCur+0x1e>
		Local_Address =0x80 ;
    48e4:	80 e8       	ldi	r24, 0x80	; 128
    48e6:	89 83       	std	Y+1, r24	; 0x01
    48e8:	05 c0       	rjmp	.+10     	; 0x48f4 <LCD_VidPosCur+0x28>
	else if (Copy_U8Row == 1)
    48ea:	8a 81       	ldd	r24, Y+2	; 0x02
    48ec:	81 30       	cpi	r24, 0x01	; 1
    48ee:	11 f4       	brne	.+4      	; 0x48f4 <LCD_VidPosCur+0x28>
		Local_Address =0xC0 ;
    48f0:	80 ec       	ldi	r24, 0xC0	; 192
    48f2:	89 83       	std	Y+1, r24	; 0x01
	if (Copy_U8Col < 16 )
    48f4:	8b 81       	ldd	r24, Y+3	; 0x03
    48f6:	80 31       	cpi	r24, 0x10	; 16
    48f8:	20 f4       	brcc	.+8      	; 0x4902 <LCD_VidPosCur+0x36>
		Local_Address += Copy_U8Col ;
    48fa:	89 81       	ldd	r24, Y+1	; 0x01
    48fc:	9b 81       	ldd	r25, Y+3	; 0x03
    48fe:	89 0f       	add	r24, r25
    4900:	89 83       	std	Y+1, r24	; 0x01
	LCD_VidSendCommend ( Local_Address );
    4902:	89 81       	ldd	r24, Y+1	; 0x01
    4904:	0e 94 a0 1a 	call	0x3540	; 0x3540 <LCD_VidSendCommend>
}
    4908:	0f 90       	pop	r0
    490a:	0f 90       	pop	r0
    490c:	0f 90       	pop	r0
    490e:	cf 91       	pop	r28
    4910:	df 91       	pop	r29
    4912:	08 95       	ret

00004914 <LCD_VidClear>:
void LCD_VidClear (){
    4914:	df 93       	push	r29
    4916:	cf 93       	push	r28
    4918:	cd b7       	in	r28, 0x3d	; 61
    491a:	de b7       	in	r29, 0x3e	; 62
	LCD_VidSendCommend(DISPLAY_CLEAR) ;
    491c:	81 e0       	ldi	r24, 0x01	; 1
    491e:	0e 94 a0 1a 	call	0x3540	; 0x3540 <LCD_VidSendCommend>
}
    4922:	cf 91       	pop	r28
    4924:	df 91       	pop	r29
    4926:	08 95       	ret

00004928 <main>:

u8 CURT_GLOBAL_FLAG ;
u8 temp ;
void INT2_FUNCTION ();

void main (void){
    4928:	af 92       	push	r10
    492a:	bf 92       	push	r11
    492c:	cf 92       	push	r12
    492e:	df 92       	push	r13
    4930:	ef 92       	push	r14
    4932:	ff 92       	push	r15
    4934:	0f 93       	push	r16
    4936:	1f 93       	push	r17
    4938:	df 93       	push	r29
    493a:	cf 93       	push	r28
    493c:	0f 92       	push	r0
    493e:	cd b7       	in	r28, 0x3d	; 61
    4940:	de b7       	in	r29, 0x3e	; 62
    GIE_VidEnable();                                      //to open global interrupt
    4942:	0e 94 84 1a 	call	0x3508	; 0x3508 <GIE_VidEnable>
    EX_INT_VidINIT();                                     //to initialize EX_INTERRUPT 2
    4946:	0e 94 47 19 	call	0x328e	; 0x328e <EX_INT_VidINIT>
    EX_PIE_VidEnable(2);                                  //to enable interrupt
    494a:	82 e0       	ldi	r24, 0x02	; 2
    494c:	0e 94 8f 19 	call	0x331e	; 0x331e <EX_PIE_VidEnable>
    EX_INT_VidSetCallBack(2,INT2_FUNCTION);               //pointer to function in int_2
    4950:	20 ee       	ldi	r18, 0xE0	; 224
    4952:	35 e2       	ldi	r19, 0x25	; 37
    4954:	82 e0       	ldi	r24, 0x02	; 2
    4956:	b9 01       	movw	r22, r18
    4958:	0e 94 0e 19 	call	0x321c	; 0x321c <EX_INT_VidSetCallBack>
	u8 local_duty ;                                       //define wanted duty

	//define PUSH_BUTTON I/P pin
	DIO_VidSetPinDirection(PUSH_BUTTON_PORT,PUSH_BUTTON,LOW);
    495c:	81 e0       	ldi	r24, 0x01	; 1
    495e:	62 e0       	ldi	r22, 0x02	; 2
    4960:	40 e0       	ldi	r20, 0x00	; 0
    4962:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>

	//to intialize DC_MOTOR
	DcMotor_VidInit();
    4966:	0e 94 32 15 	call	0x2a64	; 0x2a64 <DcMotor_VidInit>

	//to intialize PWM
	PWM_VidInit();
    496a:	0e 94 0a 15 	call	0x2a14	; 0x2a14 <PWM_VidInit>

	//to initailize LCD
	LCD_VidInit();
    496e:	0e 94 ab 1b 	call	0x3756	; 0x3756 <LCD_VidInit>

	//initialize ADC
	ADC_VidInit();
    4972:	0e 94 2f 14 	call	0x285e	; 0x285e <ADC_VidInit>

	//define wanted leds as outputs :
    DIO_VidSetPinDirection(portD,GREEN_LED,HIGH);
    4976:	83 e0       	ldi	r24, 0x03	; 3
    4978:	60 e0       	ldi	r22, 0x00	; 0
    497a:	41 e0       	ldi	r20, 0x01	; 1
    497c:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
    DIO_VidSetPinDirection(portD,YELLOW_LED,HIGH);
    4980:	83 e0       	ldi	r24, 0x03	; 3
    4982:	61 e0       	ldi	r22, 0x01	; 1
    4984:	41 e0       	ldi	r20, 0x01	; 1
    4986:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
    DIO_VidSetPinDirection(portD,RED_LED,HIGH);
    498a:	83 e0       	ldi	r24, 0x03	; 3
    498c:	62 e0       	ldi	r22, 0x02	; 2
    498e:	41 e0       	ldi	r20, 0x01	; 1
    4990:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>

    //define buzzer pin as output
    DIO_VidSetPinDirection(portB,BUZZER_PIN,HIGH);
    4994:	81 e0       	ldi	r24, 0x01	; 1
    4996:	67 e0       	ldi	r22, 0x07	; 7
    4998:	41 e0       	ldi	r20, 0x01	; 1
    499a:	0e 94 8d 15 	call	0x2b1a	; 0x2b1a <DIO_VidSetPinDirection>
	DIO_VidSetPinValue(BUZZER_PORT,BUZZER_PIN,LOW);
    499e:	81 e0       	ldi	r24, 0x01	; 1
    49a0:	67 e0       	ldi	r22, 0x07	; 7
    49a2:	40 e0       	ldi	r20, 0x00	; 0
    49a4:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>

    while (1){
    	temp = ( ADC_VidReadChannel(0) )/10 ;
    49a8:	80 e0       	ldi	r24, 0x00	; 0
    49aa:	0e 94 45 14 	call	0x288a	; 0x288a <ADC_VidReadChannel>
    49ae:	2a e0       	ldi	r18, 0x0A	; 10
    49b0:	30 e0       	ldi	r19, 0x00	; 0
    49b2:	b9 01       	movw	r22, r18
    49b4:	0e 94 f8 25 	call	0x4bf0	; 0x4bf0 <__udivmodhi4>
    49b8:	cb 01       	movw	r24, r22
    49ba:	80 93 9a 01 	sts	0x019A, r24

    	//if LM35 sensor <20 display degree _ on GREEN LED _ off RED and YELLOW _ stop motor
    	if ( temp <= 20 ){
    49be:	80 91 9a 01 	lds	r24, 0x019A
    49c2:	85 31       	cpi	r24, 0x15	; 21
    49c4:	08 f0       	brcs	.+2      	; 0x49c8 <main+0xa0>
    49c6:	43 c0       	rjmp	.+134    	; 0x4a4e <main+0x126>
	      	temp = ( ADC_VidReadChannel(0) )/10 ;
    49c8:	80 e0       	ldi	r24, 0x00	; 0
    49ca:	0e 94 45 14 	call	0x288a	; 0x288a <ADC_VidReadChannel>
    49ce:	2a e0       	ldi	r18, 0x0A	; 10
    49d0:	30 e0       	ldi	r19, 0x00	; 0
    49d2:	b9 01       	movw	r22, r18
    49d4:	0e 94 f8 25 	call	0x4bf0	; 0x4bf0 <__udivmodhi4>
    49d8:	cb 01       	movw	r24, r22
    49da:	80 93 9a 01 	sts	0x019A, r24

            // to rotate with min speed
    		local_duty = 0 ;
    49de:	19 82       	std	Y+1, r1	; 0x01
    		PWM_VidSetDuty (local_duty) ;
    49e0:	89 81       	ldd	r24, Y+1	; 0x01
    49e2:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <PWM_VidSetDuty>

            // to make leds state
    		DIO_VidSetPinValue(portD,GREEN_LED,HIGH);
    49e6:	83 e0       	ldi	r24, 0x03	; 3
    49e8:	60 e0       	ldi	r22, 0x00	; 0
    49ea:	41 e0       	ldi	r20, 0x01	; 1
    49ec:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    		DIO_VidSetPinValue(portD,YELLOW_LED,LOW);
    49f0:	83 e0       	ldi	r24, 0x03	; 3
    49f2:	61 e0       	ldi	r22, 0x01	; 1
    49f4:	40 e0       	ldi	r20, 0x00	; 0
    49f6:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    		DIO_VidSetPinValue(portD,RED_LED,LOW);
    49fa:	83 e0       	ldi	r24, 0x03	; 3
    49fc:	62 e0       	ldi	r22, 0x02	; 2
    49fe:	40 e0       	ldi	r20, 0x00	; 0
    4a00:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>

            //to display temperature
       	    LCD_VidPosCur(0,0);
    4a04:	80 e0       	ldi	r24, 0x00	; 0
    4a06:	60 e0       	ldi	r22, 0x00	; 0
    4a08:	0e 94 66 24 	call	0x48cc	; 0x48cc <LCD_VidPosCur>
         	LCD_VidSendString("TEMPERATURE : ");
    4a0c:	80 e6       	ldi	r24, 0x60	; 96
    4a0e:	90 e0       	ldi	r25, 0x00	; 0
    4a10:	0e 94 aa 20 	call	0x4154	; 0x4154 <LCD_VidSendString>
    		LCD_VidPosCur(1,0);
    4a14:	81 e0       	ldi	r24, 0x01	; 1
    4a16:	60 e0       	ldi	r22, 0x00	; 0
    4a18:	0e 94 66 24 	call	0x48cc	; 0x48cc <LCD_VidPosCur>
    		LCD_VidPrintVar(temp);
    4a1c:	80 91 9a 01 	lds	r24, 0x019A
    4a20:	a8 2e       	mov	r10, r24
    4a22:	bb 24       	eor	r11, r11
    4a24:	cc 24       	eor	r12, r12
    4a26:	dd 24       	eor	r13, r13
    4a28:	ee 24       	eor	r14, r14
    4a2a:	ff 24       	eor	r15, r15
    4a2c:	87 01       	movw	r16, r14
    4a2e:	2a 2d       	mov	r18, r10
    4a30:	3b 2d       	mov	r19, r11
    4a32:	4c 2d       	mov	r20, r12
    4a34:	5d 2d       	mov	r21, r13
    4a36:	6e 2d       	mov	r22, r14
    4a38:	7f 2d       	mov	r23, r15
    4a3a:	80 2f       	mov	r24, r16
    4a3c:	91 2f       	mov	r25, r17
    4a3e:	0e 94 ca 21 	call	0x4394	; 0x4394 <LCD_VidPrintVar>

    		//to turn_off buzzer
    		DIO_VidSetPinValue(portB,BUZZER_PIN,LOW);
    4a42:	81 e0       	ldi	r24, 0x01	; 1
    4a44:	67 e0       	ldi	r22, 0x07	; 7
    4a46:	40 e0       	ldi	r20, 0x00	; 0
    4a48:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    4a4c:	ad cf       	rjmp	.-166    	; 0x49a8 <main+0x80>
    	}//end if

    	//if LM35 sensor 20:40 display degree _ on YELLOW LED _ off RED and GREEN _ rotate motor
    	else if ( temp>20 &&temp <40  ){
    4a4e:	80 91 9a 01 	lds	r24, 0x019A
    4a52:	85 31       	cpi	r24, 0x15	; 21
    4a54:	08 f4       	brcc	.+2      	; 0x4a58 <main+0x130>
    4a56:	58 c0       	rjmp	.+176    	; 0x4b08 <main+0x1e0>
    4a58:	80 91 9a 01 	lds	r24, 0x019A
    4a5c:	88 32       	cpi	r24, 0x28	; 40
    4a5e:	08 f0       	brcs	.+2      	; 0x4a62 <main+0x13a>
    4a60:	53 c0       	rjmp	.+166    	; 0x4b08 <main+0x1e0>
	      	temp = ( ADC_VidReadChannel(0) )/10 ;
    4a62:	80 e0       	ldi	r24, 0x00	; 0
    4a64:	0e 94 45 14 	call	0x288a	; 0x288a <ADC_VidReadChannel>
    4a68:	2a e0       	ldi	r18, 0x0A	; 10
    4a6a:	30 e0       	ldi	r19, 0x00	; 0
    4a6c:	b9 01       	movw	r22, r18
    4a6e:	0e 94 f8 25 	call	0x4bf0	; 0x4bf0 <__udivmodhi4>
    4a72:	cb 01       	movw	r24, r22
    4a74:	80 93 9a 01 	sts	0x019A, r24

    		//to display temperature
    		LCD_VidPosCur(0,0);
    4a78:	80 e0       	ldi	r24, 0x00	; 0
    4a7a:	60 e0       	ldi	r22, 0x00	; 0
    4a7c:	0e 94 66 24 	call	0x48cc	; 0x48cc <LCD_VidPosCur>
    		LCD_VidSendString("TEMPERATURE : ");
    4a80:	80 e6       	ldi	r24, 0x60	; 96
    4a82:	90 e0       	ldi	r25, 0x00	; 0
    4a84:	0e 94 aa 20 	call	0x4154	; 0x4154 <LCD_VidSendString>
    		LCD_VidPosCur(1,0);
    4a88:	81 e0       	ldi	r24, 0x01	; 1
    4a8a:	60 e0       	ldi	r22, 0x00	; 0
    4a8c:	0e 94 66 24 	call	0x48cc	; 0x48cc <LCD_VidPosCur>
    		LCD_VidPrintVar(temp);
    4a90:	80 91 9a 01 	lds	r24, 0x019A
    4a94:	a8 2e       	mov	r10, r24
    4a96:	bb 24       	eor	r11, r11
    4a98:	cc 24       	eor	r12, r12
    4a9a:	dd 24       	eor	r13, r13
    4a9c:	ee 24       	eor	r14, r14
    4a9e:	ff 24       	eor	r15, r15
    4aa0:	87 01       	movw	r16, r14
    4aa2:	2a 2d       	mov	r18, r10
    4aa4:	3b 2d       	mov	r19, r11
    4aa6:	4c 2d       	mov	r20, r12
    4aa8:	5d 2d       	mov	r21, r13
    4aaa:	6e 2d       	mov	r22, r14
    4aac:	7f 2d       	mov	r23, r15
    4aae:	80 2f       	mov	r24, r16
    4ab0:	91 2f       	mov	r25, r17
    4ab2:	0e 94 ca 21 	call	0x4394	; 0x4394 <LCD_VidPrintVar>

            // to rotate with calculated speed
        	local_duty = (temp-20)*13 ;
    4ab6:	80 91 9a 01 	lds	r24, 0x019A
    4aba:	28 2f       	mov	r18, r24
    4abc:	30 e0       	ldi	r19, 0x00	; 0
    4abe:	c9 01       	movw	r24, r18
    4ac0:	88 0f       	add	r24, r24
    4ac2:	99 1f       	adc	r25, r25
    4ac4:	82 0f       	add	r24, r18
    4ac6:	93 1f       	adc	r25, r19
    4ac8:	88 0f       	add	r24, r24
    4aca:	99 1f       	adc	r25, r25
    4acc:	88 0f       	add	r24, r24
    4ace:	99 1f       	adc	r25, r25
    4ad0:	82 0f       	add	r24, r18
    4ad2:	93 1f       	adc	r25, r19
    4ad4:	84 50       	subi	r24, 0x04	; 4
    4ad6:	89 83       	std	Y+1, r24	; 0x01
    		PWM_VidSetDuty (local_duty) ;
    4ad8:	89 81       	ldd	r24, Y+1	; 0x01
    4ada:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <PWM_VidSetDuty>

    		// to make leds state
    		DIO_VidSetPinValue(portD,GREEN_LED,LOW);
    4ade:	83 e0       	ldi	r24, 0x03	; 3
    4ae0:	60 e0       	ldi	r22, 0x00	; 0
    4ae2:	40 e0       	ldi	r20, 0x00	; 0
    4ae4:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    		DIO_VidSetPinValue(portD,YELLOW_LED,HIGH);
    4ae8:	83 e0       	ldi	r24, 0x03	; 3
    4aea:	61 e0       	ldi	r22, 0x01	; 1
    4aec:	41 e0       	ldi	r20, 0x01	; 1
    4aee:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    		DIO_VidSetPinValue(portD,RED_LED,LOW);
    4af2:	83 e0       	ldi	r24, 0x03	; 3
    4af4:	62 e0       	ldi	r22, 0x02	; 2
    4af6:	40 e0       	ldi	r20, 0x00	; 0
    4af8:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>

    		//to turn_off buzzer
    		DIO_VidSetPinValue(portB,BUZZER_PIN,LOW);
    4afc:	81 e0       	ldi	r24, 0x01	; 1
    4afe:	67 e0       	ldi	r22, 0x07	; 7
    4b00:	40 e0       	ldi	r20, 0x00	; 0
    4b02:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    4b06:	50 cf       	rjmp	.-352    	; 0x49a8 <main+0x80>
    	}//end else if

    	//if LM35 sensor >40 display degree _ on RED LED _ off YELLOW and GREEN
    	else   {
		    //raise flag
    		CURT_GLOBAL_FLAG = 1 ;
    4b08:	81 e0       	ldi	r24, 0x01	; 1
    4b0a:	80 93 9b 01 	sts	0x019B, r24

		    // to rotate with max speed
		    local_duty = 255 ;
    4b0e:	8f ef       	ldi	r24, 0xFF	; 255
    4b10:	89 83       	std	Y+1, r24	; 0x01
    4b12:	49 c0       	rjmp	.+146    	; 0x4ba6 <main+0x27e>

		      while (CURT_GLOBAL_FLAG){
		      	temp = ( ADC_VidReadChannel(0) )/10 ;
    4b14:	80 e0       	ldi	r24, 0x00	; 0
    4b16:	0e 94 45 14 	call	0x288a	; 0x288a <ADC_VidReadChannel>
    4b1a:	2a e0       	ldi	r18, 0x0A	; 10
    4b1c:	30 e0       	ldi	r19, 0x00	; 0
    4b1e:	b9 01       	movw	r22, r18
    4b20:	0e 94 f8 25 	call	0x4bf0	; 0x4bf0 <__udivmodhi4>
    4b24:	cb 01       	movw	r24, r22
    4b26:	80 93 9a 01 	sts	0x019A, r24
	    		PWM_VidSetDuty (local_duty) ;
    4b2a:	89 81       	ldd	r24, Y+1	; 0x01
    4b2c:	0e 94 1a 15 	call	0x2a34	; 0x2a34 <PWM_VidSetDuty>

	    		// to make leds state
	    		DIO_VidSetPinValue(portD,GREEN_LED,LOW);
    4b30:	83 e0       	ldi	r24, 0x03	; 3
    4b32:	60 e0       	ldi	r22, 0x00	; 0
    4b34:	40 e0       	ldi	r20, 0x00	; 0
    4b36:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
	    		DIO_VidSetPinValue(portD,YELLOW_LED,LOW);
    4b3a:	83 e0       	ldi	r24, 0x03	; 3
    4b3c:	61 e0       	ldi	r22, 0x01	; 1
    4b3e:	40 e0       	ldi	r20, 0x00	; 0
    4b40:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
	    		DIO_VidSetPinValue(portD,RED_LED,HIGH);
    4b44:	83 e0       	ldi	r24, 0x03	; 3
    4b46:	62 e0       	ldi	r22, 0x02	; 2
    4b48:	41 e0       	ldi	r20, 0x01	; 1
    4b4a:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>

	    		//to display temperature and warning massage
	    		LCD_VidPosCur(0,0);
    4b4e:	80 e0       	ldi	r24, 0x00	; 0
    4b50:	60 e0       	ldi	r22, 0x00	; 0
    4b52:	0e 94 66 24 	call	0x48cc	; 0x48cc <LCD_VidPosCur>
	    		LCD_VidSendString("WARNING HIGH ");
    4b56:	8f e6       	ldi	r24, 0x6F	; 111
    4b58:	90 e0       	ldi	r25, 0x00	; 0
    4b5a:	0e 94 aa 20 	call	0x4154	; 0x4154 <LCD_VidSendString>
	    		LCD_VidPosCur(1,0);
    4b5e:	81 e0       	ldi	r24, 0x01	; 1
    4b60:	60 e0       	ldi	r22, 0x00	; 0
    4b62:	0e 94 66 24 	call	0x48cc	; 0x48cc <LCD_VidPosCur>
	    		LCD_VidSendString("TEMPERATURE: ");
    4b66:	8d e7       	ldi	r24, 0x7D	; 125
    4b68:	90 e0       	ldi	r25, 0x00	; 0
    4b6a:	0e 94 aa 20 	call	0x4154	; 0x4154 <LCD_VidSendString>
	    		LCD_VidPosCur(1,13);
    4b6e:	81 e0       	ldi	r24, 0x01	; 1
    4b70:	6d e0       	ldi	r22, 0x0D	; 13
    4b72:	0e 94 66 24 	call	0x48cc	; 0x48cc <LCD_VidPosCur>
	    		LCD_VidPrintVar(temp);
    4b76:	80 91 9a 01 	lds	r24, 0x019A
    4b7a:	a8 2e       	mov	r10, r24
    4b7c:	bb 24       	eor	r11, r11
    4b7e:	cc 24       	eor	r12, r12
    4b80:	dd 24       	eor	r13, r13
    4b82:	ee 24       	eor	r14, r14
    4b84:	ff 24       	eor	r15, r15
    4b86:	87 01       	movw	r16, r14
    4b88:	2a 2d       	mov	r18, r10
    4b8a:	3b 2d       	mov	r19, r11
    4b8c:	4c 2d       	mov	r20, r12
    4b8e:	5d 2d       	mov	r21, r13
    4b90:	6e 2d       	mov	r22, r14
    4b92:	7f 2d       	mov	r23, r15
    4b94:	80 2f       	mov	r24, r16
    4b96:	91 2f       	mov	r25, r17
    4b98:	0e 94 ca 21 	call	0x4394	; 0x4394 <LCD_VidPrintVar>

	    		//to turn_on buzzer
	    		DIO_VidSetPinValue(portB,BUZZER_PIN,HIGH);
    4b9c:	81 e0       	ldi	r24, 0x01	; 1
    4b9e:	67 e0       	ldi	r22, 0x07	; 7
    4ba0:	41 e0       	ldi	r20, 0x01	; 1
    4ba2:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    		CURT_GLOBAL_FLAG = 1 ;

		    // to rotate with max speed
		    local_duty = 255 ;

		      while (CURT_GLOBAL_FLAG){
    4ba6:	80 91 9b 01 	lds	r24, 0x019B
    4baa:	88 23       	and	r24, r24
    4bac:	09 f0       	breq	.+2      	; 0x4bb0 <main+0x288>
    4bae:	b2 cf       	rjmp	.-156    	; 0x4b14 <main+0x1ec>
	    		LCD_VidPrintVar(temp);

	    		//to turn_on buzzer
	    		DIO_VidSetPinValue(portB,BUZZER_PIN,HIGH);
		         }//end while
				LCD_VidClear();               		                            //to clear LCD
    4bb0:	0e 94 8a 24 	call	0x4914	; 0x4914 <LCD_VidClear>
				DIO_VidSetPinValue(BUZZER_PORT,BUZZER_PIN,LOW);           		//to turn_off buzzer
    4bb4:	81 e0       	ldi	r24, 0x01	; 1
    4bb6:	67 e0       	ldi	r22, 0x07	; 7
    4bb8:	40 e0       	ldi	r20, 0x00	; 0
    4bba:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
    4bbe:	f4 ce       	rjmp	.-536    	; 0x49a8 <main+0x80>

00004bc0 <INT2_FUNCTION>:
    	}//end else if
    }//end while
}//end main

void INT2_FUNCTION (){
    4bc0:	df 93       	push	r29
    4bc2:	cf 93       	push	r28
    4bc4:	cd b7       	in	r28, 0x3d	; 61
    4bc6:	de b7       	in	r29, 0x3e	; 62
	if (temp < 40  && CURT_GLOBAL_FLAG == 1 ){
    4bc8:	80 91 9a 01 	lds	r24, 0x019A
    4bcc:	88 32       	cpi	r24, 0x28	; 40
    4bce:	68 f4       	brcc	.+26     	; 0x4bea <INT2_FUNCTION+0x2a>
    4bd0:	80 91 9b 01 	lds	r24, 0x019B
    4bd4:	81 30       	cpi	r24, 0x01	; 1
    4bd6:	49 f4       	brne	.+18     	; 0x4bea <INT2_FUNCTION+0x2a>
		LCD_VidClear();               		                            //to clear LCD
    4bd8:	0e 94 8a 24 	call	0x4914	; 0x4914 <LCD_VidClear>
		DIO_VidSetPinValue(BUZZER_PORT,BUZZER_PIN,LOW);           		//to turn_off buzzer
    4bdc:	81 e0       	ldi	r24, 0x01	; 1
    4bde:	67 e0       	ldi	r22, 0x07	; 7
    4be0:	40 e0       	ldi	r20, 0x00	; 0
    4be2:	0e 94 ce 16 	call	0x2d9c	; 0x2d9c <DIO_VidSetPinValue>
		CURT_GLOBAL_FLAG = 0 ;                                          //fall flag
    4be6:	10 92 9b 01 	sts	0x019B, r1
	}
}
    4bea:	cf 91       	pop	r28
    4bec:	df 91       	pop	r29
    4bee:	08 95       	ret

00004bf0 <__udivmodhi4>:
    4bf0:	aa 1b       	sub	r26, r26
    4bf2:	bb 1b       	sub	r27, r27
    4bf4:	51 e1       	ldi	r21, 0x11	; 17
    4bf6:	07 c0       	rjmp	.+14     	; 0x4c06 <__udivmodhi4_ep>

00004bf8 <__udivmodhi4_loop>:
    4bf8:	aa 1f       	adc	r26, r26
    4bfa:	bb 1f       	adc	r27, r27
    4bfc:	a6 17       	cp	r26, r22
    4bfe:	b7 07       	cpc	r27, r23
    4c00:	10 f0       	brcs	.+4      	; 0x4c06 <__udivmodhi4_ep>
    4c02:	a6 1b       	sub	r26, r22
    4c04:	b7 0b       	sbc	r27, r23

00004c06 <__udivmodhi4_ep>:
    4c06:	88 1f       	adc	r24, r24
    4c08:	99 1f       	adc	r25, r25
    4c0a:	5a 95       	dec	r21
    4c0c:	a9 f7       	brne	.-22     	; 0x4bf8 <__udivmodhi4_loop>
    4c0e:	80 95       	com	r24
    4c10:	90 95       	com	r25
    4c12:	bc 01       	movw	r22, r24
    4c14:	cd 01       	movw	r24, r26
    4c16:	08 95       	ret

00004c18 <__mulsi3>:
    4c18:	62 9f       	mul	r22, r18
    4c1a:	d0 01       	movw	r26, r0
    4c1c:	73 9f       	mul	r23, r19
    4c1e:	f0 01       	movw	r30, r0
    4c20:	82 9f       	mul	r24, r18
    4c22:	e0 0d       	add	r30, r0
    4c24:	f1 1d       	adc	r31, r1
    4c26:	64 9f       	mul	r22, r20
    4c28:	e0 0d       	add	r30, r0
    4c2a:	f1 1d       	adc	r31, r1
    4c2c:	92 9f       	mul	r25, r18
    4c2e:	f0 0d       	add	r31, r0
    4c30:	83 9f       	mul	r24, r19
    4c32:	f0 0d       	add	r31, r0
    4c34:	74 9f       	mul	r23, r20
    4c36:	f0 0d       	add	r31, r0
    4c38:	65 9f       	mul	r22, r21
    4c3a:	f0 0d       	add	r31, r0
    4c3c:	99 27       	eor	r25, r25
    4c3e:	72 9f       	mul	r23, r18
    4c40:	b0 0d       	add	r27, r0
    4c42:	e1 1d       	adc	r30, r1
    4c44:	f9 1f       	adc	r31, r25
    4c46:	63 9f       	mul	r22, r19
    4c48:	b0 0d       	add	r27, r0
    4c4a:	e1 1d       	adc	r30, r1
    4c4c:	f9 1f       	adc	r31, r25
    4c4e:	bd 01       	movw	r22, r26
    4c50:	cf 01       	movw	r24, r30
    4c52:	11 24       	eor	r1, r1
    4c54:	08 95       	ret

00004c56 <__udivmodsi4>:
    4c56:	a1 e2       	ldi	r26, 0x21	; 33
    4c58:	1a 2e       	mov	r1, r26
    4c5a:	aa 1b       	sub	r26, r26
    4c5c:	bb 1b       	sub	r27, r27
    4c5e:	fd 01       	movw	r30, r26
    4c60:	0d c0       	rjmp	.+26     	; 0x4c7c <__udivmodsi4_ep>

00004c62 <__udivmodsi4_loop>:
    4c62:	aa 1f       	adc	r26, r26
    4c64:	bb 1f       	adc	r27, r27
    4c66:	ee 1f       	adc	r30, r30
    4c68:	ff 1f       	adc	r31, r31
    4c6a:	a2 17       	cp	r26, r18
    4c6c:	b3 07       	cpc	r27, r19
    4c6e:	e4 07       	cpc	r30, r20
    4c70:	f5 07       	cpc	r31, r21
    4c72:	20 f0       	brcs	.+8      	; 0x4c7c <__udivmodsi4_ep>
    4c74:	a2 1b       	sub	r26, r18
    4c76:	b3 0b       	sbc	r27, r19
    4c78:	e4 0b       	sbc	r30, r20
    4c7a:	f5 0b       	sbc	r31, r21

00004c7c <__udivmodsi4_ep>:
    4c7c:	66 1f       	adc	r22, r22
    4c7e:	77 1f       	adc	r23, r23
    4c80:	88 1f       	adc	r24, r24
    4c82:	99 1f       	adc	r25, r25
    4c84:	1a 94       	dec	r1
    4c86:	69 f7       	brne	.-38     	; 0x4c62 <__udivmodsi4_loop>
    4c88:	60 95       	com	r22
    4c8a:	70 95       	com	r23
    4c8c:	80 95       	com	r24
    4c8e:	90 95       	com	r25
    4c90:	9b 01       	movw	r18, r22
    4c92:	ac 01       	movw	r20, r24
    4c94:	bd 01       	movw	r22, r26
    4c96:	cf 01       	movw	r24, r30
    4c98:	08 95       	ret

00004c9a <__prologue_saves__>:
    4c9a:	2f 92       	push	r2
    4c9c:	3f 92       	push	r3
    4c9e:	4f 92       	push	r4
    4ca0:	5f 92       	push	r5
    4ca2:	6f 92       	push	r6
    4ca4:	7f 92       	push	r7
    4ca6:	8f 92       	push	r8
    4ca8:	9f 92       	push	r9
    4caa:	af 92       	push	r10
    4cac:	bf 92       	push	r11
    4cae:	cf 92       	push	r12
    4cb0:	df 92       	push	r13
    4cb2:	ef 92       	push	r14
    4cb4:	ff 92       	push	r15
    4cb6:	0f 93       	push	r16
    4cb8:	1f 93       	push	r17
    4cba:	cf 93       	push	r28
    4cbc:	df 93       	push	r29
    4cbe:	cd b7       	in	r28, 0x3d	; 61
    4cc0:	de b7       	in	r29, 0x3e	; 62
    4cc2:	ca 1b       	sub	r28, r26
    4cc4:	db 0b       	sbc	r29, r27
    4cc6:	0f b6       	in	r0, 0x3f	; 63
    4cc8:	f8 94       	cli
    4cca:	de bf       	out	0x3e, r29	; 62
    4ccc:	0f be       	out	0x3f, r0	; 63
    4cce:	cd bf       	out	0x3d, r28	; 61
    4cd0:	09 94       	ijmp

00004cd2 <__epilogue_restores__>:
    4cd2:	2a 88       	ldd	r2, Y+18	; 0x12
    4cd4:	39 88       	ldd	r3, Y+17	; 0x11
    4cd6:	48 88       	ldd	r4, Y+16	; 0x10
    4cd8:	5f 84       	ldd	r5, Y+15	; 0x0f
    4cda:	6e 84       	ldd	r6, Y+14	; 0x0e
    4cdc:	7d 84       	ldd	r7, Y+13	; 0x0d
    4cde:	8c 84       	ldd	r8, Y+12	; 0x0c
    4ce0:	9b 84       	ldd	r9, Y+11	; 0x0b
    4ce2:	aa 84       	ldd	r10, Y+10	; 0x0a
    4ce4:	b9 84       	ldd	r11, Y+9	; 0x09
    4ce6:	c8 84       	ldd	r12, Y+8	; 0x08
    4ce8:	df 80       	ldd	r13, Y+7	; 0x07
    4cea:	ee 80       	ldd	r14, Y+6	; 0x06
    4cec:	fd 80       	ldd	r15, Y+5	; 0x05
    4cee:	0c 81       	ldd	r16, Y+4	; 0x04
    4cf0:	1b 81       	ldd	r17, Y+3	; 0x03
    4cf2:	aa 81       	ldd	r26, Y+2	; 0x02
    4cf4:	b9 81       	ldd	r27, Y+1	; 0x01
    4cf6:	ce 0f       	add	r28, r30
    4cf8:	d1 1d       	adc	r29, r1
    4cfa:	0f b6       	in	r0, 0x3f	; 63
    4cfc:	f8 94       	cli
    4cfe:	de bf       	out	0x3e, r29	; 62
    4d00:	0f be       	out	0x3f, r0	; 63
    4d02:	cd bf       	out	0x3d, r28	; 61
    4d04:	ed 01       	movw	r28, r26
    4d06:	08 95       	ret

00004d08 <_exit>:
    4d08:	f8 94       	cli

00004d0a <__stop_program>:
    4d0a:	ff cf       	rjmp	.-2      	; 0x4d0a <__stop_program>
